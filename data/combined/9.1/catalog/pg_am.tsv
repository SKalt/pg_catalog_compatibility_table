Name	Type	Nullable	References	Description
ambeginscan	regproc		pg_proc.oid	"""prepare for index scan"" function"
ambuild	regproc		pg_proc.oid	"""build new index"" function"
ambuildempty	regproc		pg_proc.oid	"""build empty index"" function"
ambulkdelete	regproc		pg_proc.oid	"bulk-delete function"
amcanbackward	bool			"does the access method support backward scanning?"
amcanmulticol	bool			"does the access method support multicolumn indexes?"
amcanorder	bool			"does the access method support ordered scans sorted by the indexed column's value?"
amcanorderbyop	bool			"does the access method support ordered scans sorted by the result of an operator on the indexed column?"
amcanunique	bool			"does the access method support unique indexes?"
amclusterable	bool			"can an index of this type be clustered on?"
amcostestimate	regproc		pg_proc.oid	"function to estimate cost of an index scan"
amendscan	regproc		pg_proc.oid	"""clean up after index scan"" function"
amgetbitmap	regproc		pg_proc.oid	"""fetch all valid tuples"" function, or zero if none"
amgettuple	regproc		pg_proc.oid	"""next valid tuple"" function, or zero if none"
aminsert	regproc		pg_proc.oid	"""insert this tuple"" function"
amkeytype	oid		pg_type.oid	"type of data stored in index, or zero if not a fixed type"
ammarkpos	regproc		pg_proc.oid	"""mark current scan position"" function"
amname	name			"name of the access method"
amoptionalkey	bool			"does the access method support a scan without any constraint for the first index column?"
amoptions	regproc		pg_proc.oid	"function to parse and validate reloptions for an index"
ampredlocks	bool			"does an index of this type manage fine-grained predicate locks?"
amrescan	regproc		pg_proc.oid	"""(re)start index scan"" function"
amrestrpos	regproc		pg_proc.oid	"""restore marked scan position"" function"
amsearchnulls	bool			"does the access method support is null/not null searches?"
amstorage	bool			"can index storage data type differ from column data type?"
amstrategies	int2			"number of operator strategies for this access method, or zero if access method does not have a fixed set of operator strategies"
amsupport	int2			"number of support routines for this access method"
amvacuumcleanup	regproc		pg_proc.oid	"post-vacuum cleanup function"
