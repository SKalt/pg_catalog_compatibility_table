Name	Type	Nullable	References	Description
tableoid	oid	false		
cmax	cid	false		
xmax	xid	false		
cmin	cid	false		
xmin	xid	false		
oid	oid	false		
ctid	tid	false		
conname	name	false		"constraint name (not necessarily unique!)"
connamespace	oid	false	pg_namespace.oid	"the oid of the namespace that contains this constraint"
contype	char	false		"c = check constraint, f = foreign key constraint, p = primary key constraint, u = unique constraint, t = constraint trigger, x = exclusion constraint"
condeferrable	bool	false		"is the constraint deferrable?"
condeferred	bool	false		"is the constraint deferred by default?"
convalidated	bool	false		"has the constraint been validated? currently, can only be false for foreign keys and check constraints"
conrelid	oid	false	pg_class.oid	"the table this constraint is on; 0 if not a table constraint"
contypid	oid	false	pg_type.oid	"the domain this constraint is on; 0 if not a domain constraint"
conindid	oid	false	pg_class.oid	"the index supporting this constraint, if it's a unique, primary key, foreign key, or exclusion constraint; else 0"
confrelid	oid	false	pg_class.oid	"if a foreign key, the referenced table; else 0"
confupdtype	char	false		"foreign key update action code: a = no action, r = restrict, c = cascade, n = set null, d = set default"
confdeltype	char	false		"foreign key deletion action code: a = no action, r = restrict, c = cascade, n = set null, d = set default"
confmatchtype	char	false		"foreign key match type: f = full, p = partial, u = simple (unspecified)"
conislocal	bool	false		"this constraint is defined locally for the relation. note that a constraint can be locally defined and inherited simultaneously."
coninhcount	int4	false		"the number of direct inheritance ancestors this constraint has. a constraint with a nonzero number of ancestors cannot be dropped nor renamed."
connoinherit	bool	false		"this constraint is defined locally for the relation. it is a non-inheritable constraint."
conkey	int2[]	true	pg_attribute.attnum	"if a table constraint (including foreign keys, but not constraint triggers), list of the constrained columns"
confkey	int2[]	true	pg_attribute.attnum	"if a foreign key, list of the referenced columns"
conpfeqop	oid[]	true	pg_operator.oid	"if a foreign key, list of the equality operators for pk = fk comparisons"
conppeqop	oid[]	true	pg_operator.oid	"if a foreign key, list of the equality operators for pk = pk comparisons"
conffeqop	oid[]	true	pg_operator.oid	"if a foreign key, list of the equality operators for fk = fk comparisons"
conexclop	oid[]	true	pg_operator.oid	"if an exclusion constraint, list of the per-column exclusion operators"
conbin	pg_node_tree	true		"if a check constraint, an internal representation of the expression"
consrc	text	true		"if a check constraint, a human-readable representation of the expression"
