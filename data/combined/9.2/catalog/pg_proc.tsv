Name	Type	Nullable	References	Description
tableoid	oid	false		
cmax	cid	false		
xmax	xid	false		
cmin	cid	false		
xmin	xid	false		
oid	oid	false		
ctid	tid	false		
proname	name	false		"name of the function"
pronamespace	oid	false	pg_namespace.oid	"the oid of the namespace that contains this function"
proowner	oid	false	pg_authid.oid	"owner of the function"
prolang	oid	false	pg_language.oid	"implementation language or call interface of this function"
procost	float4	false		"estimated execution cost (in units of cpu_operator_cost); if proretset, this is cost per row returned"
prorows	float4	false		"estimated number of result rows (zero if not proretset)"
provariadic	oid	false	pg_type.oid	"data type of the variadic array parameter's elements, or zero if the function does not have a variadic parameter"
protransform	regproc	false	pg_proc.oid	"calls to this function can be simplified by this other function"
proisagg	bool	false		"function is an aggregate function"
proiswindow	bool	false		"function is a window function"
prosecdef	bool	false		"function is a security definer (i.e., a ""setuid"" function)"
proleakproof	bool	false		"the function has no side effects. no information about the arguments is conveyed except via the return value. any function that might throw an error depending on the values of its arguments is not leak-proof."
proisstrict	bool	false		"function returns null if any call argument is null. in that case the function won't actually be called at all. functions that are not ""strict"" must be prepared to handle null inputs."
proretset	bool	false		"function returns a set (i.e., multiple values of the specified data type)"
provolatile	char	false		"provolatile tells whether the function's result depends only on its input arguments, or is affected by outside factors. it is i for ""immutable"" functions, which always deliver the same result for the same inputs. it is s for ""stable"" functions, whose results (for fixed inputs) do not change within a scan. it is v for ""volatile"" functions, whose results might change at any time. (use v also for functions with side-effects, so that calls to them cannot get optimized away.)"
pronargs	int2	false		"number of input arguments"
pronargdefaults	int2	false		"number of arguments that have defaults"
prorettype	oid	false	pg_type.oid	"data type of the return value"
proargtypes	oidvector	false	pg_type.oid	"an array with the data types of the function arguments. this includes only input arguments (including inout and variadic arguments), and thus represents the call signature of the function."
proallargtypes	oid[]	true	pg_type.oid	"an array with the data types of the function arguments. this includes all arguments (including out and inout arguments); however, if all the arguments are in arguments, this field will be null. note that subscripting is 1-based, whereas for historical reasons proargtypes is subscripted from 0."
proargmodes	char[]	true		"an array with the modes of the function arguments, encoded as i for in arguments, o for out arguments, b for inout arguments, v for variadic arguments, t for table arguments. if all the arguments are in arguments, this field will be null. note that subscripts correspond to positions of proallargtypes not proargtypes."
proargnames	text[]	true		"an array with the names of the function arguments. arguments without a name are set to empty strings in the array. if none of the arguments have a name, this field will be null. note that subscripts correspond to positions of proallargtypes not proargtypes."
proargdefaults	pg_node_tree	true		"expression trees (in nodetostring() representation) for default values. this is a list with pronargdefaults elements, corresponding to the last n input arguments (i.e., the last n proargtypes positions). if none of the arguments have defaults, this field will be null."
prosrc	text	true		"this tells the function handler how to invoke the function. it might be the actual source code of the function for interpreted languages, a link symbol, a file name, or just about anything else, depending on the implementation language/call convention."
probin	text	true		"additional information about how to invoke the function. again, the interpretation is language-specific."
proconfig	text[]	true		"function's local settings for run-time configuration variables"
proacl	aclitem[]	true		"access privileges; see grant and revoke for details"
