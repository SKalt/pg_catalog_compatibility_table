Name	Type	References	Description
amname	name	 	Name of the access method
amstrategies	int2	 	Number of operator strategies for this access method, or zero if access method does not have a fixed set of operator strategies
amsupport	int2	 	Number of support routines for this access method
amcanorder	bool	 	Does the access method support ordered scans?
amcanbackward	bool	 	Does the access method support backward scanning?
amcanunique	bool	 	Does the access method support unique indexes?
amcanmulticol	bool	 	Does the access method support multicolumn indexes?
amoptionalkey	bool	 	Does the access method support a scan without any constraint for the first index column?
amindexnulls	bool	 	Does the access method support null index entries?
amsearchnulls	bool	 	Does the access method support IS NULL searches?
amstorage	bool	 	Can index storage data type differ from column data type?
amclusterable	bool	 	Can an index of this type be clustered on?
amkeytype	oid	pg_type.oid	Type of data stored in index, or zero if not a fixed type
aminsert	regproc	pg_proc.oid	"""Insert this tuple"" function"
ambeginscan	regproc	pg_proc.oid	"""Start new scan"" function"
amgettuple	regproc	pg_proc.oid	"""Next valid tuple"" function, or zero if none"
amgetbitmap	regproc	pg_proc.oid	"""Fetch all valid tuples"" function, or zero if none"
amrescan	regproc	pg_proc.oid	"""Restart this scan"" function"
amendscan	regproc	pg_proc.oid	"""End this scan"" function"
ammarkpos	regproc	pg_proc.oid	"""Mark current scan position"" function"
amrestrpos	regproc	pg_proc.oid	"""Restore marked scan position"" function"
ambuild	regproc	pg_proc.oid	"""Build new index"" function"
ambulkdelete	regproc	pg_proc.oid	Bulk-delete function
amvacuumcleanup	regproc	pg_proc.oid	Post-VACUUM cleanup function
amcostestimate	regproc	pg_proc.oid	Function to estimate cost of an index scan
amoptions	regproc	pg_proc.oid	Function to parse and validate reloptions for an index