Index	Name	Type	Nullable	References	Description
0	oid	OID			"row identifier (hidden attribute; must be explicitly selected)"
1	relname	NAME			"name of the table, index, view, etc."
2	relnamespace	OID		pg_namespace.oid	"the oid of the namespace that contains this relation"
3	reltype	OID		pg_type.oid	"the oid of the data type that corresponds to this table's row type, if any (zero for indexes, which have no pg_type entry)"
4	reloftype	OID		pg_type.oid	"for typed tables, the oid of the underlying composite type, zero for all other relations"
5	relowner	OID		pg_authid.oid	"owner of the relation"
6	relam	OID		pg_am.oid	"if this is an index, the access method used (b-tree, hash, etc.)"
7	relfilenode	OID			"name of the on-disk file of this relation; zero means this is a “mapped” relation whose disk file name is determined by low-level state"
8	reltablespace	OID		pg_tablespace.oid	"the tablespace in which this relation is stored. if zero, the database's default tablespace is implied. (not meaningful if the relation has no on-disk file.)"
9	relpages	INT4			"size of the on-disk representation of this table in pages (of size blcksz). this is only an estimate used by the planner. it is updated by vacuum, analyze, and a few ddl commands such as create index."
10	reltuples	FLOAT4			"number of live rows in the table. this is only an estimate used by the planner. it is updated by vacuum, analyze, and a few ddl commands such as create index."
11	relallvisible	INT4			"number of pages that are marked all-visible in the table's visibility map. this is only an estimate used by the planner. it is updated by vacuum, analyze, and a few ddl commands such as create index."
12	reltoastrelid	OID		pg_class.oid	"oid of the toast table associated with this table, 0 if none. the toast table stores large attributes “out of line” in a secondary table."
13	relhasindex	BOOL			"true if this is a table and it has (or recently had) any indexes"
14	relisshared	BOOL			"true if this table is shared across all databases in the cluster. only certain system catalogs (such as pg_database) are shared."
15	relpersistence	CHAR			"p = permanent table, u = unlogged table, t = temporary table"
16	relkind	CHAR			"r = ordinary table, i = index, s = sequence, t = toast table, v = view, m = materialized view, c = composite type, f = foreign table, p = partitioned table, i = partitioned index"
17	relnatts	INT2			"number of user columns in the relation (system columns not counted). there must be this many corresponding entries in pg_attribute. see also pg_attribute.attnum."
18	relchecks	INT2			"number of check constraints on the table; see pg_constraint catalog"
19	relhasoids	BOOL			"true if we generate an oid for each row of the relation"
20	relhasrules	BOOL			"true if table has (or once had) rules; see pg_rewrite catalog"
21	relhastriggers	BOOL			"true if table has (or once had) triggers; see pg_trigger catalog"
22	relhassubclass	BOOL			"true if table has (or once had) any inheritance children"
23	relrowsecurity	BOOL			"true if table has row level security enabled; see pg_policy catalog"
24	relforcerowsecurity	BOOL			"true if row level security (when enabled) will also apply to table owner; see pg_policy catalog"
25	relispopulated	BOOL			"true if relation is populated (this is true for all relations other than some materialized views)"
26	relreplident	CHAR			"columns used to form “replica identity” for rows: d = default (primary key, if any), n = nothing, f = all columns, i = index with indisreplident set (same as nothing if the index used has been dropped)"
27	relispartition	BOOL			"true if table or index is a partition"
28	relrewrite	OID		pg_class.oid	"for new relations being written during a ddl operation that requires a table rewrite, this contains the oid of the original relation; otherwise 0. that state is only visible internally; this field should never contain anything other than 0 for a user-visible relation."
29	relfrozenxid	XID			"all transaction ids before this one have been replaced with a permanent (“frozen”) transaction id in this table. this is used to track whether the table needs to be vacuumed in order to prevent transaction id wraparound or to allow pg_xact to be shrunk. zero (invalidtransactionid) if the relation is not a table."
30	relminmxid	XID			"all multixact ids before this one have been replaced by a transaction id in this table. this is used to track whether the table needs to be vacuumed in order to prevent multixact id wraparound or to allow pg_multixact to be shrunk. zero (invalidmultixactid) if the relation is not a table."
31	relacl	ACLITEM[]			"access privileges; see grant and revoke for details"
32	reloptions	TEXT[]			"access-method-specific options, as “keyword=value” strings"
33	relpartbound	PG_NODE_TREE			"if table is a partition (see relispartition), internal representation of the partition bound"
