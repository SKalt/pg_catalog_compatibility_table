Name	Type	References	Description
relname	name	 	Name of the table, index, view, etc.
relnamespace	oid	pg_namespace.oid	The OID of the namespace that contains this\n relation
reltype	oid	pg_type.oid	The OID of the data type that corresponds to this\n table, if any (zero for indexes, which have no pg_type entry)
relowner	int4	pg_shadow.usesysid	Owner of the relation
relam	oid	pg_am.oid	If this is an index, the access method used (B-tree,\n hash, etc.)
relfilenode	oid	 	Name of the on-disk file of this relation; 0 if\n none
relpages	int4	 	Size of the on-disk representation of this table in\n pages (size BLCKSZ). This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and CREATE INDEX.
reltuples	float4	 	Number of tuples in the table. This is only an\n estimate used by the planner. It is updated by VACUUM, ANALYZE, and CREATE INDEX.
reltoastrelid	oid	pg_class.oid	OID of the TOAST table associated with this table, 0\n if none. The TOAST table stores large attributes "out of line" in a secondary table.
reltoastidxid	oid	pg_class.oid	For a TOAST table, the OID of its index. 0 if not a\n TOAST table.
relhasindex	bool	 	True if this is a table and it has (or recently had)\n any indexes. This is set by CREATE INDEX, but not cleared immediately by DROP INDEX. VACUUM clears relhasindex if it finds the table has no indexes.
relisshared	bool	 	True if this table is shared across all databases in\n the cluster. Only certain system catalogs (such as pg_database) are shared.
relkind	char	 	'r' = ordinary table, 'i' = index, 'S' = sequence,\n 'v' = view, 'c' = composite type, 's' = special, 't' = TOAST table
relnatts	int2	 	Number of user columns in the relation (system\n columns not counted). There must be this many corresponding entries in pg_attribute. See also pg_attribute.attnum.
relchecks	int2	 	Number of check constraints on the table; see\n pg_constraint catalog
reltriggers	int2	 	Number of triggers on the table; see pg_trigger catalog
relukeys	int2	 	unused (Not\n the number of unique keys)
relfkeys	int2	 	unused (Not\n the number of foreign keys on the table)
relrefs	int2	 	unused
relhasoids	bool	 	True if we generate an OID for each row of the\n relation.
relhaspkey	bool	 	True if the table has (or once had) a primary\n key.
relhasrules	bool	 	Table has rules; see pg_rewrite catalog
relhassubclass	bool	 	At least one table inherits from this one
relacl	aclitem[]	 	Access permissions. See the descriptions of\n GRANT and REVOKE for details.