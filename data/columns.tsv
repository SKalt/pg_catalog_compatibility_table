relation	column	type	references	description	version
aggregate	aggbasetype	oid	pg_type.oid	The input datatype for this aggregate function	7.2
aggregate	aggbasetype	oid	pg_type.oid	The type on which this function operates when invoked from SQL	7.1
aggregate	aggcombinefn	regproc	pg_aggregate.oid	Combine function (zero if none)	13,14
aggregate	aggcombinefn	regproc	pg_proc.oid	Combine function (zero if none)	9.6,10,11,12
aggregate	aggdeserialfn	regproc	pg_aggregate.oid	Deserialization function (zero if none)	13,14
aggregate	aggdeserialfn	regproc	pg_proc.oid	Deserialization function (zero if none)	9.6,10,11,12
aggregate	aggfinalextra	bool		True to pass extra dummy arguments to aggfinalfn	9.4,9.5,9.6,10,11,12,13,14
aggregate	aggfinalfn	regproc	pg_aggregate.oid	Final function (zero if none)	13,14
aggregate	aggfinalfn	regproc	pg_proc.oid	Final function (zero if none)	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
aggregate	aggfinalfn	regproc (function)		Final function	7.1
aggregate	aggfinalfn	regproc (function)	pg_proc.oid	Final function	7.2
aggregate	aggfinalmodify	char		Whether aggfinalfn modifies the transition state value: r if it is read-only, s if the aggtransfn cannot be applied after the aggfinalfn, or w if it writes on the value	11,12,13,14
aggregate	aggfinaltype	oid	pg_type.oid	The type of the result	7.1,7.2
aggregate	aggfnoid	regproc	pg_aggregate.oid	pg_proc OID of the aggregate function	13,14
aggregate	aggfnoid	regproc	pg_proc.oid	pg_proc OID of the aggregate function	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
aggregate	agginitval	text		The initial value of the transition state. This is a text field containing the initial value in its external string representation. If the field is NULL, the transition state value starts out NULL	7.2,7.3
aggregate	agginitval	text		The initial value of the transition state. This is a text field containing the initial value in its external string representation. If the value is null, the transition state value starts out null	7.4,8.0
aggregate	agginitval	text		The initial value of the transition state. This is a text field containing the initial value in its external string representation. If this field is null, the transition state value starts out null	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
aggregate	agginitval	text		The initial value of the transition state. This is a text field which will be cast to the type of aggtranstype	7.1
aggregate	aggkind	char		"Aggregate kind: n for \"normal\" aggregates, o for \"ordered-set\" aggregates, or h for \"hypothetical-set\" aggregates"	9.4,9.5,9.6,10,11,12,13,14
aggregate	aggmfinalextra	bool		True to pass extra dummy arguments to aggmfinalfn	9.4,9.5,9.6,10,11,12,13,14
aggregate	aggmfinalfn	regproc	pg_aggregate.oid	Final function for moving-aggregate mode (zero if none)	13,14
aggregate	aggmfinalfn	regproc	pg_proc.oid	Final function for moving-aggregate mode (zero if none)	9.4,9.5,9.6,10,11,12
aggregate	aggmfinalmodify	char		Like aggfinalmodify, but for the aggmfinalfn	11,12,13,14
aggregate	aggminitval	text		The initial value of the transition state for moving-aggregate mode. This is a text field containing the initial value in its external string representation. If this field is null, the transition state value starts out null	9.4,9.5,9.6,10,11,12,13,14
aggregate	aggminvtransfn	regproc	pg_aggregate.oid	Inverse transition function for moving-aggregate mode (zero if none)	13,14
aggregate	aggminvtransfn	regproc	pg_proc.oid	Inverse transition function for moving-aggregate mode (zero if none)	9.4,9.5,9.6,10,11,12
aggregate	aggmtransfn	regproc	pg_aggregate.oid	Forward transition function for moving-aggregate mode (zero if none)	13,14
aggregate	aggmtransfn	regproc	pg_proc.oid	Forward transition function for moving-aggregate mode (zero if none)	9.4,9.5,9.6,10,11,12
aggregate	aggmtransspace	int4		Approximate average size (in bytes) of the transition state data for moving-aggregate mode, or zero to use a default estimate	9.4,9.5,9.6,10,11,12,13,14
aggregate	aggmtranstype	oid	pg_aggregate.oid	Data type of the aggregate function's internal transition (state) data for moving-aggregate mode (zero if none)	13,14
aggregate	aggmtranstype	oid	pg_type.oid	Data type of the aggregate function's internal transition (state) data for moving-aggregate mode (zero if none)	9.4,9.5,9.6,10,11,12
aggregate	aggname	name		Name of the aggregate function	7.1,7.2
aggregate	aggnumdirectargs	int2		Number of direct (non-aggregated) arguments of an ordered-set or hypothetical-set aggregate, counting a variadic array as one argument. If equal to pronargs, the aggregate must be variadic and the variadic array describes the aggregated arguments as well as the final direct arguments. Always zero for normal aggregates	9.4,9.5,9.6,10,11,12,13,14
aggregate	aggowner	int4	pg_shadow.usesysid	Owner (creator) of the aggregate function	7.1,7.2
aggregate	aggserialfn	regproc	pg_aggregate.oid	Serialization function (zero if none)	13,14
aggregate	aggserialfn	regproc	pg_proc.oid	Serialization function (zero if none)	9.6,10,11,12
aggregate	aggsortop	oid	pg_aggregate.oid	Associated sort operator (zero if none)	13,14
aggregate	aggsortop	oid	pg_operator.oid	Associated sort operator (zero if none)	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
aggregate	aggtransfn	regproc	pg_aggregate.oid	Transition function	13,14
aggregate	aggtransfn	regproc	pg_proc.oid	Transition function	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
aggregate	aggtransfn	regproc (function)		Transition function	7.1
aggregate	aggtransfn	regproc (function)	pg_proc.oid	Transition function	7.2
aggregate	aggtransspace	int4		Approximate average size (in bytes) of the transition state data, or zero to use a default estimate	9.4,9.5,9.6,10,11,12,13,14
aggregate	aggtranstype	oid	pg_aggregate.oid	Data type of the aggregate function's internal transition (state) data	13,14
aggregate	aggtranstype	oid	pg_type.oid	Data type of the aggregate function's internal transition (state) data	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
aggregate	aggtranstype	oid	pg_type.oid	The type of the aggregate function's internal transition (state) data	7.1,7.2,7.3,7.4,8.0
am	ambeginscan	regproc	pg_proc.oid	"\"Prepare for index scan\" function"	9.1,9.2,9.3,9.4,9.5
am	ambeginscan	regproc	pg_proc.oid	"\"Start new scan\" function"	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0
am	ambuild	regproc	pg_proc.oid	"\"Build new index\" function"	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	ambuildempty	regproc	pg_proc.oid	"\"Build empty index\" function"	9.1,9.2,9.3,9.4,9.5
am	ambulkdelete	regproc	pg_proc.oid	Bulk-delete function	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amcanbackward	bool		Does the access method support backward scanning?	8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amcanmulticol	bool		does AM support multicolumn indexes?	7.3
am	amcanmulticol	bool		Does the access method support multicolumn indexes?	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amcanorder	bool		Does the access method support ordered scans sorted by the indexed column's value?	9.1,9.2,9.3,9.4,9.5
am	amcanorder	bool		Does the access method support ordered scans?	8.3,8.4,9.0
am	amcanorderbyop	bool		Does the access method support ordered scans sorted by the result of an operator on the indexed column?	9.1,9.2,9.3,9.4,9.5
am	amcanreturn	regproc	pg_proc.oid	Function to check whether an index column supports index-only scans. Can be zero if index-only scans are never supported	9.5
am	amcanreturn	regproc	pg_proc.oid	Function to check whether index supports index-only scans, or zero if none	9.2,9.3,9.4
am	amcanunique	bool		does AM support unique indexes?	7.3
am	amcanunique	bool		Does the access method support unique indexes?	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amclusterable	bool		Can an index of this type be clustered on?	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amconcurrent	bool		does AM support concurrent updates?	7.3
am	amconcurrent	bool		Does the access method support concurrent updates?	7.4,8.0,8.1
am	amcostestimate	regproc	pg_proc.oid	estimate cost of an indexscan	7.3
am	amcostestimate	regproc	pg_proc.oid	Function to estimate cost of an index scan	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amendscan	regproc	pg_proc.oid	"\"Clean up after index scan\" function"	9.1,9.2,9.3,9.4,9.5
am	amendscan	regproc	pg_proc.oid	"\"End this scan\" function"	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0
am	amgetbitmap	regproc	pg_proc.oid	"\"Fetch all valid tuples\" function, or zero if none"	8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amgetmulti	regproc	pg_proc.oid	"\"Fetch multiple tuples\" function"	8.1,8.2,8.3
am	amgettuple	regproc	pg_proc.oid	"\"Next valid tuple\" function"	7.3,7.4,8.0,8.1,8.2,8.3
am	amgettuple	regproc	pg_proc.oid	"\"Next valid tuple\" function, or zero if none"	8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amhandler	regproc	pg_am.oid	OID of a handler function that is responsible for supplying information about the access method	13,14
am	amhandler	regproc	pg_proc.oid	OID of a handler function that is responsible for supplying information about the access method	9.6,10,11,12
am	amindexnulls	bool		does AM support NULL index entries?	7.3
am	amindexnulls	bool		Does the access method support null index entries?	7.4,8.0,8.1,8.2,8.3,8.4,9.0
am	aminsert	regproc	pg_proc.oid	"\"Insert this tuple\" function"	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amkeytype	oid	pg_type.oid	Type of data stored in index, or zero if not a fixed type	8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	ammarkpos	regproc	pg_proc.oid	"\"Mark current scan position\" function"	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amname	name		Name of the access method	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
am	amoptionalkey	bool		Does the access method support a scan without any constraint for the first index column?	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amoptions	regproc	pg_proc.oid	Function to parse and validate reloptions for an index	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amorderstrategy	int2		Zero if the index offers no sort order, otherwise the strategy number of the strategy operator that describes the sort order	7.3,7.4,8.0,8.1,8.2
am	amowner	int4	pg_shadow.usesysid	User ID of the owner (currently not used)	7.3,7.4,8.0
am	ampredlocks	bool		Does an index of this type manage fine-grained predicate locks?	9.1,9.2,9.3,9.4,9.5
am	amrescan	regproc	pg_proc.oid	"\"(Re)start index scan\" function"	9.1,9.2,9.3,9.4,9.5
am	amrescan	regproc	pg_proc.oid	"\"Restart this scan\" function"	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0
am	amrestrpos	regproc	pg_proc.oid	"\"Restore marked scan position\" function"	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amsearcharray	bool		Does the access method support ScalarArrayOpExpr searches?	9.2,9.3,9.4,9.5
am	amsearchnulls	bool		Does the access method support IS NULL searches?	8.3,8.4
am	amsearchnulls	bool		Does the access method support IS NULL/NOT NULL searches?	9.0,9.1,9.2,9.3,9.4,9.5
am	amstorage	bool		Can index storage data type differ from column data type?	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amstrategies	int2		Number of operator strategies for this access method	7.3,7.4,8.0,8.1,8.2
am	amstrategies	int2		Number of operator strategies for this access method, or zero if access method does not have a fixed set of operator strategies	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amsupport	int2		Number of support routines for this access method	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	amtype	char		Currently always i to indicate an index access method; other values may be allowed in future	9.6,10,11
am	amtype	char		t = table (including materialized views), i = index	12,13,14
am	amvacuumcleanup	regproc	pg_proc.oid	Post-VACUUM cleanup function	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
am	oid	oid		Row identifier	12,13,14
am	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
amop	amopclaid	oid	pg_opclass.oid	the index opclass this entry is for	7.3
amop	amopclaid	oid	pg_opclass.oid	The index operator class this entry is for	7.4,8.0,8.1,8.2
amop	amopfamily	oid	pg_amop.oid	The operator family this entry is for	13,14
amop	amopfamily	oid	pg_opfamily.oid	The operator family this entry is for	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
amop	amoplefttype	oid	pg_amop.oid	Left-hand input data type of operator	13,14
amop	amoplefttype	oid	pg_type.oid	Left-hand input data type of operator	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
amop	amopmethod	oid	pg_am.oid	Index access method operator family is for	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
amop	amopmethod	oid	pg_amop.oid	Index access method operator family is for	13,14
amop	amopopr	oid	pg_amop.oid	OID of the operator	13,14
amop	amopopr	oid	pg_operator.oid	OID of the operator	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
amop	amopopr	oid	pg_operator.oid	the operator's pg_operator OID	7.3
amop	amoppurpose	char		Operator purpose, either s for search or o for ordering	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
amop	amopreqcheck	bool		Index hit must be rechecked	7.3,7.4,8.0,8.1,8.2,8.3
amop	amoprighttype	oid	pg_amop.oid	Right-hand input data type of operator	13,14
amop	amoprighttype	oid	pg_type.oid	Right-hand input data type of operator	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
amop	amopsortfamily	oid	pg_amop.oid	The B-tree operator family this entry sorts according to, if an ordering operator; zero if a search operator	13,14
amop	amopsortfamily	oid	pg_opfamily.oid	The B-tree operator family this entry sorts according to, if an ordering operator; zero if a search operator	9.4,9.5,9.6,10,11,12
amop	amopsortfamily	oid	pg_opfamily.oid	The btree operator family this entry sorts according to, if an ordering operator; zero if a search operator	9.1,9.2,9.3
amop	amopstrategy	int2		Operator strategy number	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
amop	amopsubtype	oid	pg_type.oid	Subtype to distinguish multiple entries for one strategy; zero for default	8.0,8.1,8.2
amop	oid	oid		Row identifier	12,13,14
amop	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
amproc	amopclaid	oid	pg_opclass.oid	the index opclass this entry is for	7.3
amproc	amopclaid	oid	pg_opclass.oid	The index operator class this entry is for	7.4,8.0,8.1,8.2
amproc	amproc	regproc	pg_amproc.oid	OID of the function	13,14
amproc	amproc	regproc	pg_proc.oid	OID of the function	11,12
amproc	amproc	regproc	pg_proc.oid	OID of the proc	7.3
amproc	amproc	regproc	pg_proc.oid	OID of the procedure	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
amproc	amprocfamily	oid	pg_amproc.oid	The operator family this entry is for	13,14
amproc	amprocfamily	oid	pg_opfamily.oid	The operator family this entry is for	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
amproc	amproclefttype	oid	pg_amproc.oid	Left-hand input data type of associated operator	13,14
amproc	amproclefttype	oid	pg_type.oid	Left-hand input data type of associated operator	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
amproc	amprocnum	int2		Support function number	11,12,13,14
amproc	amprocnum	int2		support procedure index	7.3
amproc	amprocnum	int2		Support procedure number	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
amproc	amprocrighttype	oid	pg_amproc.oid	Right-hand input data type of associated operator	13,14
amproc	amprocrighttype	oid	pg_type.oid	Right-hand input data type of associated operator	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
amproc	amprocsubtype	oid	pg_type.oid	Subtype, if cross-type routine, else zero	8.0,8.1,8.2
amproc	oid	oid		Row identifier	12,13,14
amproc	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
attrdef	adbin	pg_node_tree		The column default value, in nodeToString() representation. Use pg_get_expr(adbin, adrelid) to convert it to an SQL expression	12,13,14
attrdef	adbin	pg_node_tree		The internal representation of the column default value	9.1,9.2,9.3,9.4,9.5,9.6,10,11
attrdef	adbin	text		An internal representation of the column default value	7.1,7.2,7.3
attrdef	adbin	text		The internal representation of the column default value	7.4,8.0,8.1,8.2,8.3,8.4,9.0
attrdef	adnum	int2		The number of the column; see pg_attribute.pg_attnum	7.1
attrdef	adnum	int2	pg_attrdef.attnum	The number of the column	13,14
attrdef	adnum	int2	pg_attribute.attnum	The number of the column	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
attrdef	adrelid	oid	pg_attrdef.oid	The table this column belongs to	13,14
attrdef	adrelid	oid	pg_class.oid	The table this column belongs to	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
attrdef	adsrc	text		A human-readable representation of the default value	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
attrdef	oid	oid		Row identifier	12,13,14
attrdef	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
attribute	attacl	aclitem[]		Column-level access privileges, if any have been granted specifically on this column	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attalign	char		A copy of pg_type.typalign of this column's type	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attbyval	bool		A copy of pg_type.typbyval of this column's type	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attcacheoff	int4		Always -1 in storage, but when loaded into a row descriptor in memory this may be updated to cache the offset of the attribute within the row	7.4,8.0,8.1,8.2
attribute	attcacheoff	int4		Always -1 in storage, but when loaded into a row descriptor in memory this might be updated to cache the offset of the attribute within the row	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attcacheoff	int4		Always -1 in storage, but when loaded into a tuple descriptor in memory this may be updated cache the offset of the attribute within the tuple	7.1
attribute	attcacheoff	int4		Always -1 in storage, but when loaded into a tuple descriptor in memory this may be updated to cache the offset of the attribute within the tuple	7.2,7.3
attribute	attcollation	oid	pg_attribute.oid	The defined collation of the column, or zero if the column is not of a collatable data type	13,14
attribute	attcollation	oid	pg_collation.oid	The defined collation of the column, or zero if the column is not of a collatable data type	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
attribute	attcompression	char		The current compression method of the column. Typically this is '\0' to specify use of the current default setting (see default_toast_compression). Otherwise, 'p' selects pglz compression, while 'l' selects LZ4 compression. However, this field is ignored whenever attstorage does not allow compression	14
attribute	attdispersion	float4		attdispersion is the dispersion statistic of the column (0.0 to 1.0), or zero if the statistic has not been calculated, or -1.0 if VACUUM found that the column contains no duplicate entries (in which case the dispersion should be taken as 1.0/numberOfRows for the current table size). The -1.0 hack is useful because the number of rows may be updated more often than attdispersion is. We assume that the column will retain its no-duplicate-entry property	7.1
attribute	attfdwoptions	text[]		"Attribute-level foreign data wrapper options, as \"keyword=value\" strings"	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attgenerated	char		If a zero byte (''), then not a generated column. Otherwise, s = stored. (Other values might be added in the future.)	12,13,14
attribute	atthasdef	bool		This column has a default expression or generation expression, in which case there will be a corresponding entry in the pg_attrdef catalog that actually defines the expression. (Check attgenerated to determine whether this is a default or a generation expression.)	12,13,14
attribute	atthasdef	bool		This column has a default value, in which case there will be a corresponding entry in the pg_attrdef catalog that actually defines the value	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
attribute	atthasmissing	bool		This column has a value which is used where the column is entirely missing from the row, as happens when a column is added with a non-volatile DEFAULT value after the row is created. The actual value used is stored in the attmissingval column	11,12,13,14
attribute	attidentity	char		If a zero byte (''), then not an identity column. Otherwise, a = generated always, d = generated by default	10,11,12,13,14
attribute	attinhcount	int4		The number of direct ancestors this column has. A column with a nonzero number of ancestors cannot be dropped nor renamed	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attisdropped	bool		This column has been dropped and is no longer valid. A dropped column is still physically present in the table, but is ignored by the parser and so cannot be accessed via SQL	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attislocal	bool		This column is defined locally in the relation. Note that a column can be locally defined and inherited simultaneously	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attislocal	bool		This column is defined locally in the relation. Note that a column may be locally defined and inherited simultaneously	7.3,7.4,8.0,8.1,8.2
attribute	attisset	bool		If true, this attribute is a set. In that case, what is really stored in the attribute is the OID of a row in the pg_proc catalog. The pg_proc row contains the query string that defines this set, i.e., the query to run to get the set. So the atttypid (see above) refers to the type returned by this query, but the actual length of this attribute is the length (size) of an oid. --- At least this is the theory. All this is probably quite broken these days	7.4
attribute	attisset	bool		If true, this attribute is a set. In that case, what is really stored in the attribute is the OID of a tuple in the pg_proc catalog. The pg_proc tuple contains the query string that defines this set - i.e., the query to run to get the set. So the atttypid (see above) refers to the type returned by this query, but the actual length of this attribute is the length (size) of an oid. --- At least this is the theory. All this is probably quite broken these days	7.1,7.2,7.3
attribute	attlen	int2		A copy of pg_type.typlen of this column's type	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attlen	int2		This is a copy of pg_type.typlen of this column's type	7.3
attribute	attlen	int2		This is a copy of the pg_type.typlen for this column's type	7.1,7.2
attribute	attmissingval	anyarray		This column has a one element array containing the value used when the column is entirely missing from the row, as happens when the column is added with a non-volatile DEFAULT value after the row is created. The value is only used when atthasmissing is true. If there is no value the column is null	11,12,13,14
attribute	attname	name		Column name	7.1,7.2,7.3
attribute	attname	name		The column name	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attndims	int4		"Number of dimensions, if the column is an array type; otherwise 0. (Presently, the number of dimensions of an array is not enforced, so any nonzero value effectively means \"it's an array\")"	8.2,8.3,8.4
attribute	attndims	int4		"Number of dimensions, if the column is an array type; otherwise 0. (Presently, the number of dimensions of an array is not enforced, so any nonzero value effectively means \"it's an array\".)"	7.2,7.3,7.4,8.0,8.1,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attnelems	int4		Number of dimensions, if the column is an array	7.1
attribute	attnotnull	bool		This represents a NOT NULL constraint. It is possible to change this field to enable or disable the constraint	7.1,7.2,7.3
attribute	attnotnull	bool		This represents a not-null constraint	9.5,9.6,10,11,12,13,14
attribute	attnotnull	bool		This represents a not-null constraint. It is possible to change this column to enable or disable the constraint	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4
attribute	attnum	int2		The number of the column. Ordinary columns are numbered from 1 up. System columns, such as ctid, have (arbitrary) negative numbers	12,13,14
attribute	attnum	int2		The number of the column. Ordinary columns are numbered from 1 up. System columns, such as oid, have (arbitrary) negative numbers	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
attribute	attoptions	text[]		"Attribute-level options, as \"keyword=value\" strings"	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attrelid	oid	pg_attribute.oid	The table this column belongs to	13,14
attribute	attrelid	oid	pg_class.oid	The table this column belongs to	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
attribute	attstattarget	int4		"attstattarget controls the level of detail of statistics accumulated for this column by ANALYZE. A zero value indicates that no statistics should be collected. A negative value says to use the system default statistics target. The exact meaning of positive values is data type-dependent. For scalar data types, attstattarget is both the target number of \"most common values\" to collect, and the target number of histogram bins to create"	8.2,8.3,8.4
attribute	attstattarget	int4		"attstattarget controls the level of detail of statistics accumulated for this column by ANALYZE. A zero value indicates that no statistics should be collected. A negative value says to use the system default statistics target. The exact meaning of positive values is data type-dependent. For scalar data types, attstattarget is both the target number of \"most common values\" to collect, and the target number of histogram bins to create."	7.4,8.0,8.1,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attstattarget	int4		"attstattarget controls the level of detail of statistics accumulated for this column by ANALYZE. A zero value indicates that no statistics should be collected. A negative value says to use the system default statistics target. The exact meaning of positive values is datatype-dependent. For scalar datatypes, attstattarget is both the target number of \"most common values\" to collect, and the target number of histogram bins to create."	7.3
attribute	attstattarget	int4		"attstattarget controls the level of detail of statistics accumulated for this column by ANALYZE. A zero value indicates that no statistics should be collected. The exact meaning of positive values is datatype-dependent. For scalar datatypes, attstattarget is both the target number of \"most common values\" to collect, and the target number of histogram bins to create."	7.2
attribute	attstorage	char		A copy of pg_type.typstorage of this column's type	7.1,7.2
attribute	attstorage	char		Normally a copy of pg_type.typstorage of this column's type. For TOAST-able data types, this can be altered after column creation to control storage policy	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	attstorage	char		Normally a copy of pg_type.typstorage of this column's type. For TOASTable datatypes, this can be altered after column creation to control storage policy	7.3
attribute	atttypid	oid	pg_attribute.oid	The data type of this column	13
attribute	atttypid	oid	pg_attribute.oid	The data type of this column (zero for a dropped column)	14
attribute	atttypid	oid	pg_type.oid	The data type of this column	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
attribute	atttypmod	int4		atttypmod records type-specific data supplied at table creation time (for example, the maximum length of a varchar column). It is passed to type-specific input and output functions as the third argument. The value will generally be -1 for types that do not need typmod	7.1,7.2
attribute	atttypmod	int4		atttypmod records type-specific data supplied at table creation time (for example, the maximum length of a varchar column). It is passed to type-specific input functions and length coercion functions. The value will generally be -1 for types that do not need atttypmod	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
attribute	atttypmod	int4		atttypmod records type-specific data supplied at table creation time (for example, the maximum length of a varchar column). It is passed to type-specific input functions and length coercion functions. The value will generally be -1 for types that do not need typmod	7.3
auth_members	admin_option	bool		True if member can grant membership in roleid to others	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
auth_members	admin_option	bool		True if member may grant membership in roleid to others	8.1,8.2
auth_members	grantor	oid	pg_auth_members.oid	ID of the role that granted this membership	13,14
auth_members	grantor	oid	pg_authid.oid	ID of the role that granted this membership	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
auth_members	member	oid	pg_auth_members.oid	ID of a role that is a member of roleid	13,14
auth_members	member	oid	pg_authid.oid	ID of a role that is a member of roleid	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
auth_members	roleid	oid	pg_auth_members.oid	ID of a role that has a member	13,14
auth_members	roleid	oid	pg_authid.oid	ID of a role that has a member	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
authid	oid	oid		Row identifier	12,13,14
authid	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
authid	rolbypassrls	bool		Role bypasses every row level security policy, see Section 5.7 for more information	9.5,9.6,10,11
authid	rolbypassrls	bool		Role bypasses every row level security policy, see Section 5.8 for more information	12,13
authid	rolbypassrls	bool		Role bypasses every row-level security policy, see Section 5.8 for more information	14
authid	rolcanlogin	bool		Role can log in. That is, this role can be given as the initial session authorization identifier	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
authid	rolcanlogin	bool		Role may log in, that is, this role can be given as the initial session authorization identifier	8.1
authid	rolcanlogin	bool		Role may log in. That is, this role can be given as the initial session authorization identifier	8.2
authid	rolcatupdate	bool		Role can update system catalogs directly. (Even a superuser cannot do this unless this column is true)	8.3,8.4,9.0,9.1,9.2,9.3,9.4
authid	rolcatupdate	bool		Role may update system catalogs directly. (Even a superuser may not do this unless this column is true)	8.2
authid	rolcatupdate	bool		Role may update system catalogs directly. (Even a superuser may not do this unless this column is true.)	8.1
authid	rolconfig	text[]		Session defaults for run-time configuration variables	8.1,8.2,8.3,8.4
authid	rolconnlimit	int4		For roles that can log in, this sets maximum number of concurrent connections this role can make. -1 means no limit	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
authid	rolcreatedb	bool		Role can create databases	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
authid	rolcreatedb	bool		Role may create databases	8.1,8.2
authid	rolcreaterole	bool		Role can create more roles	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
authid	rolcreaterole	bool		Role may create more roles	8.1,8.2
authid	rolinherit	bool		Role automatically inherits privileges of roles it is a member of	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
authid	rolname	name		Role name	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
authid	rolpassword	text		Password (possibly encrypted); NULL if none	8.1,8.2,8.3,8.4
authid	rolpassword	text		Password (possibly encrypted); null if none. If the password is encrypted, this column will begin with the string md5 followed by a 32-character hexadecimal MD5 hash. The MD5 hash will be of the user's password concatenated to their user name. For example, if user joe has password xyzzy, PostgreSQL will store the md5 hash of xyzzyjoe. A password that does not follow that format is assumed to be unencrypted	9.1,9.2,9.3,9.4,9.5,9.6
authid	rolpassword	text		Password (possibly encrypted); null if none. If the password is encrypted, this column will contain the string md5 followed by a 32-character hexadecimal MD5 hash. The MD5 hash will be of the user's password concatenated to their username (for example, if user joe has password xyzzy, PostgreSQL will store the md5 hash of xyzzyjoe)	9.0
authid	rolpassword	text		Password (possibly encrypted); null if none. The format depends on the form of encryption used	10,11,12,13,14
authid	rolreplication	bool		Role is a replication role. A replication role can initiate replication connections and create and drop replication slots	9.6,10,11,12,13,14
authid	rolreplication	bool		Role is a replication role. That is, this role can initiate streaming replication (see Section 25.2.5) and set/unset the system backup mode using pg_start_backup and pg_stop_backup	9.1,9.2,9.3,9.4,9.5
authid	rolsuper	bool		Role has superuser privileges	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
authid	rolvaliduntil	timestamptz		Password expiry time (only used for password authentication); null if no expiration	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
autovacuum	anl_base_thresh	integer		Minimum number of modified tuples before analyze	8.1,8.2,8.3
autovacuum	anl_scale_factor	float4		Multiplier for reltuples to add to anl_base_thresh	8.1,8.2,8.3
autovacuum	enabled	bool		If false, this table is never autovacuumed	8.1
autovacuum	enabled	bool		If false, this table will not be autovacuumed, except to prevent transaction ID wraparound	8.2,8.3
autovacuum	freeze_max_age	integer		Custom autovacuum_freeze_max_age parameter	8.2,8.3
autovacuum	freeze_min_age	integer		Custom vacuum_freeze_min_age parameter	8.2,8.3
autovacuum	vac_base_thresh	integer		Minimum number of modified tuples before vacuum	8.1,8.2,8.3
autovacuum	vac_cost_delay	integer		Custom vacuum_cost_delay parameter	8.1,8.2,8.3
autovacuum	vac_cost_limit	integer		Custom vacuum_cost_limit parameter	8.1,8.2,8.3
autovacuum	vac_scale_factor	float4		Multiplier for reltuples to add to vac_base_thresh	8.1,8.2,8.3
autovacuum	vacrelid	oid	pg_class.oid	The table this entry is for	8.1,8.2,8.3
available_extension-versions	comment	text		Comment string from the extension's control file	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
available_extension-versions	installed	bool		True if this version of this extension is currently installed	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
available_extension-versions	name	name		Extension name	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
available_extension-versions	relocatable	bool		True if extension can be relocated to another schema	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
available_extension-versions	requires	name[]		Names of prerequisite extensions, or NULL if none	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
available_extension-versions	schema	name		Name of the schema that the extension must be installed into, or NULL if partially or fully relocatable	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
available_extension-versions	superuser	bool		True if only superusers are allowed to install this extension	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
available_extension-versions	superuser	bool		True if only superusers are allowed to install this extension (but see trusted)	13,14
available_extension-versions	trusted	bool		True if the extension can be installed by non-superusers with appropriate privileges	13,14
available_extension-versions	version	text		Version name	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
available_extensions	comment	text		Comment string from the extension's control file	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
available_extensions	default_version	text		Name of default version, or NULL if none is specified	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
available_extensions	installed_version	text		Currently installed version of the extension, or NULL if not installed	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
available_extensions	name	name		Extension name	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
backend_memory-contexts	free_bytes	int8		Free space in bytes	14
backend_memory-contexts	free_chunks	int8		Total number of free chunks	14
backend_memory-contexts	ident	text		Identification information of the memory context. This field is truncated at 1024 bytes	14
backend_memory-contexts	level	int4		Distance from TopMemoryContext in context tree	14
backend_memory-contexts	name	text		Name of the memory context	14
backend_memory-contexts	parent	text		Name of the parent of this memory context	14
backend_memory-contexts	total_bytes	int8		Total bytes allocated for this memory context	14
backend_memory-contexts	total_nblocks	int8		Total number of blocks allocated for this memory context	14
backend_memory-contexts	used_bytes	int8		Used space in bytes	14
cast	castcontext	char		Indicates what contexts the cast can be invoked in. e means only as an explicit cast (using CAST or :: syntax). a means implicitly in assignment to a target column, as well as explicitly. i means implicitly in expressions, as well as the other cases	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
cast	castcontext	char		Indicates what contexts the cast may be invoked in. e means only as an explicit cast (using CAST or :: syntax). a means implicitly in assignment to a target column, as well as explicitly. i means implicitly in expressions, as well as the other cases	8.0,8.1,8.2
cast	castcontext	char		Indicates what contexts the cast may be invoked in. e means only as an explicit cast (using CAST, ::, or function-call syntax). a means implicitly in assignment to a target column, as well as explicitly. i means implicitly in expressions, as well as the other cases	7.3,7.4
cast	castfunc	oid	pg_cast.oid	The OID of the function to use to perform this cast. Zero is stored if the cast method doesn't require a function	13,14
cast	castfunc	oid	pg_proc.oid	The OID of the function to use to perform this cast. Zero is stored if the cast method doesn't require a function	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
cast	castfunc	oid	pg_proc.oid	The OID of the function to use to perform this cast. Zero is stored if the data types are binary coercible (that is, no run-time operation is needed to perform the cast)	7.3
cast	castfunc	oid	pg_proc.oid	The OID of the function to use to perform this cast. Zero is stored if the data types are binary compatible (that is, no run-time operation is needed to perform the cast)	7.4,8.0,8.1,8.2,8.3
cast	castmethod	char		Indicates how the cast is performed. f means that the function specified in the castfunc field is used. i means that the input/output functions are used. b means that the types are binary-coercible, thus no conversion is required	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
cast	castsource	oid	pg_cast.oid	OID of the source data type	13,14
cast	castsource	oid	pg_type.oid	OID of the source data type	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
cast	casttarget	oid	pg_cast.oid	OID of the target data type	13,14
cast	casttarget	oid	pg_type.oid	OID of the target data type	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
cast	oid	oid		Row identifier	12,13,14
cast	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
class	oid	oid		Row identifier	12,13,14
class	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
class	relacl	aclitem[]		Access permissions. See the descriptions of GRANT and REVOKE for details	7.1,7.2,7.3
class	relacl	aclitem[]		Access privileges; see GRANT and REVOKE for details	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
class	relacl	aclitem[]		Access privileges; see Section 5.7 for details	12,13,14
class	relacl	aclitem[]		Access privileges; see the descriptions of GRANT and REVOKE for details	7.4
class	relallvisible	int4		Number of pages that are marked all-visible in the table's visibility map. This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
class	relam	oid	pg_am.oid	If this is a table or an index, the access method used (heap, B-tree, hash, etc.)	12
class	relam	oid	pg_am.oid	If this is an index, the access method used (B-tree, hash, etc.)	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
class	relam	oid	pg_am.oid	If this is an index, the access method used (btree, hash, etc.)	7.1,7.2
class	relam	oid	pg_class.oid	If this is a table or an index, the access method used (heap, B-tree, hash, etc.)	13
class	relam	oid	pg_class.oid	If this is a table or an index, the access method used (heap, B-tree, hash, etc.); otherwise zero (zero occurs for sequences, as well as relations without storage, such as views)	14
class	relchecks	int2		Number of CHECK constraints on the table; see pg_constraint catalog	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
class	relchecks	int2		Number of check constraints on the table; see pg_relcheck catalog	7.1,7.2
class	relfilenode	oid		"Name of the on-disk file of this relation; zero means this is a \"mapped\" relation whose disk file name is determined by low-level state"	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
class	relfilenode	oid		Name of the on-disk file of this relation	7.1,7.2
class	relfilenode	oid		Name of the on-disk file of this relation; 0 if none	7.3,7.4,8.0,8.1,8.2,8.3,8.4
class	relfkeys	int2		Number foreign keys on the table	7.1
class	relfkeys	int2		Unused (not the number of foreign keys on the table)	7.2,7.3,7.4,8.0,8.1,8.2,8.3
class	relforcerowsecurity	bool		True if row level security (when enabled) will also apply to table owner; see pg_policy catalog	9.5,9.6,10,11,12,13
class	relforcerowsecurity	bool		True if row-level security (when enabled) will also apply to table owner; see pg_policy catalog	14
class	relfrozenxid	xid		"All transaction IDs before this one have been replaced with a permanent (\"frozen\") transaction ID in this table. This is used to track whether the table needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_clog to be shrunk. Zero (InvalidTransactionId) if the relation is not a table"	8.2,8.3,8.4
class	relfrozenxid	xid		"All transaction IDs before this one have been replaced with a permanent (\"frozen\") transaction ID in this table. This is used to track whether the table needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_clog to be shrunk. Zero (InvalidTransactionId) if the relation is not a table."	9.0,9.1,9.2,9.3,9.4,9.5,9.6
class	relfrozenxid	xid		"All transaction IDs before this one have been replaced with a permanent (\"frozen\") transaction ID in this table. This is used to track whether the table needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_xact to be shrunk. Zero (InvalidTransactionId) if the relation is not a table."	10,11,12,13,14
class	relhasexclusion	bool		For a table, true if the table has (or once had) any exclusion constraints; for an index, true if the index supports an exclusion constraint	9.0
class	relhasindex	bool		True if this is a table and it has (or recently had) any indexes	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
class	relhasindex	bool		True if this is a table and it has (or recently had) any indexes. This is set by CREATE INDEX, but not cleared immediately by DROP INDEX. VACUUM clears relhasindex if it finds the table has no indexes	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4
class	relhasindex	bool		True if this is a table and it has at least one index	7.1
class	relhasoids	bool		True if we generate an OID for each row of the relation	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
class	relhaspkey	bool		True if the table has (or once had) a primary key	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
class	relhaspkey	bool		unused (No, this does not say whether the table has a primary key. It's really unused.)	7.1
class	relhasrules	bool		Table has rules	7.1
class	relhasrules	bool		Table has rules; see pg_rewrite catalog	7.2,7.3,7.4
class	relhasrules	bool		True if table has (or once had) rules; see pg_rewrite catalog	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
class	relhasrules	bool		True if table has rules; see pg_rewrite catalog	8.0,8.1,8.2,8.3
class	relhassubclass	bool		At least one table inherits from this one	7.2,7.3,7.4
class	relhassubclass	bool		At least one table inherits this one	7.1
class	relhassubclass	bool		True if table has (or once had) any inheritance children	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
class	relhassubclass	bool		True if table or index has (or once had) any inheritance children	12,13,14
class	relhastriggers	bool		True if table has (or once had) triggers; see pg_trigger catalog	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
class	relispartition	bool		True if table is a partition	10
class	relispartition	bool		True if table or index is a partition	11,12,13,14
class	relispopulated	bool		True if relation is populated (this is true for all relations other than some materialized views)	9.3,9.4,9.5,9.6,10,11,12,13,14
class	relisshared	bool		True if this table is shared across all databases in the cluster. Only certain system catalogs (such as pg_database) are shared	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
class	relisshared	bool		XXX (This is not what it seems to be.)	7.1
class	relistemp	bool		True if this table is a temporary relation. If so, only the creating session can safely access its contents	8.4,9.0
class	relkind	char		'r' = ordinary table, 'i' = index, 'S' = sequence, 'v' = view, 'c' = composite type, 's' = special, 't' = TOAST table	7.3
class	relkind	char		'r' = ordinary table, 'i' = index, 'S' = sequence, 'v' = view, 's' = special, 't' = secondary TOAST table	7.1,7.2
class	relkind	char		r = ordinary table, i = index, S = sequence, t = TOAST table, v = view, m = materialized view, c = composite type, f = foreign table, p = partitioned table	10
class	relkind	char		r = ordinary table, i = index, S = sequence, t = TOAST table, v = view, m = materialized view, c = composite type, f = foreign table, p = partitioned table, I = partitioned index	11,12,13,14
class	relkind	char		r = ordinary table, i = index, S = sequence, v = view, c = composite type, s = special, t = TOAST table	7.4,8.0,8.1
class	relkind	char		r = ordinary table, i = index, S = sequence, v = view, c = composite type, t = TOAST table	8.2,8.3,8.4,9.0
class	relkind	char		r = ordinary table, i = index, S = sequence, v = view, c = composite type, t = TOAST table, f = foreign table	9.1,9.2
class	relkind	char		r = ordinary table, i = index, S = sequence, v = view, m = materialized view, c = composite type, t = TOAST table, f = foreign table	9.3,9.4,9.5,9.6
class	relminmxid	xid		All multixact IDs before this one have been replaced by a transaction ID in this table. This is used to track whether the table needs to be vacuumed in order to prevent multixact ID wraparound or to allow pg_multixact to be shrunk. Zero (InvalidMultiXactId) if the relation is not a table	9.3,9.4,9.5,9.6,10,11,12,13,14
class	relname	name		Name of the table, index, view, etc	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
class	relnamespace	oid	pg_class.oid	The OID of the namespace that contains this relation	13,14
class	relnamespace	oid	pg_namespace.oid	The OID of the namespace that contains this relation	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
class	relnatts	int2		Number of columns in the relation, besides system columns. There must be this many corresponding entries in pg_attribute. See also pg_attribute.attnum	7.1
class	relnatts	int2		Number of user columns in the relation (system columns not counted). There must be this many corresponding entries in pg_attribute. See also pg_attribute.attnum	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
class	reloftype	oid	pg_class.oid	For typed tables, the OID of the underlying composite type, zero for all other relations	13
class	reloftype	oid	pg_class.oid	For typed tables, the OID of the underlying composite type; zero for all other relations	14
class	reloftype	oid	pg_type.oid	For typed tables, the OID of the underlying composite type, zero for all other relations	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
class	reloptions	text[]		"Access-method-specific options, as \"keyword=value\" strings"	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
class	relowner	int4	pg_shadow.usesysid	Owner of the relation	7.1,7.2,7.3,7.4,8.0
class	relowner	oid	pg_authid.oid	Owner of the relation	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
class	relowner	oid	pg_class.oid	Owner of the relation	13,14
class	relpages	int4		Size of the on-disk representation of this table in pages (of size BLCKSZ). This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
class	relpages	int4		Size of the on-disk representation of this table in pages (size BLCKSZ). This is only an approximate value which is calculated during vacuum	7.1
class	relpages	int4		Size of the on-disk representation of this table in pages (size BLCKSZ). This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and CREATE INDEX	7.2,7.3,7.4
class	relpartbound	pg_node_tree		If table is a partition (see relispartition), internal representation of the partition bound	10,11,12,13,14
class	relpersistence	char		p = permanent table, u = unlogged table, t = temporary table	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
class	relrefs	int2		Unused	7.2,7.3,7.4,8.0,8.1,8.2,8.3
class	relreplident	char		"Columns used to form \"replica identity\" for rows: d = default (primary key, if any), n = nothing, f = all columns i = index with indisreplident set, or default"	9.4
class	relreplident	char		"Columns used to form \"replica identity\" for rows: d = default (primary key, if any), n = nothing, f = all columns, i = index with indisreplident set (same as nothing if the index used has been dropped)"	9.5,9.6,10,11,12,13,14
class	relrewrite	oid	pg_class.oid	For new relations being written during a DDL operation that requires a table rewrite, this contains the OID of the original relation; otherwise 0. That state is only visible internally; this field should never contain anything other than 0 for a user-visible relation	11,12,13
class	relrewrite	oid	pg_class.oid	For new relations being written during a DDL operation that requires a table rewrite, this contains the OID of the original relation; otherwise zero. That state is only visible internally; this field should never contain anything other than zero for a user-visible relation	14
class	relrowsecurity	bool		True if table has row level security enabled; see pg_policy catalog	9.5,9.6,10,11,12,13
class	relrowsecurity	bool		True if table has row-level security enabled; see pg_policy catalog	14
class	reltablespace	oid	pg_class.oid	The tablespace in which this relation is stored. If zero, the database's default tablespace is implied. (Not meaningful if the relation has no on-disk file.)	13,14
class	reltablespace	oid	pg_tablespace.oid	The tablespace in which this relation is stored. If zero, the database's default tablespace is implied. (Not meaningful if the relation has no on-disk file.)	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
class	reltoastidxid	oid	pg_class.oid	For a TOAST table, the OID of its index. 0 if not a TOAST table	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3
class	reltoastidxid	oid	pg_class.oid	Oid of the index on the TOAST table for this table, 0 if none	7.1
class	reltoastrelid	oid	pg_class.oid	"OID of the TOAST table associated with this table, 0 if none. The TOAST table stores large attributes \"out of line\" in a secondary table"	8.2,8.3,8.4
class	reltoastrelid	oid	pg_class.oid	"OID of the TOAST table associated with this table, 0 if none. The TOAST table stores large attributes \"out of line\" in a secondary table."	7.1,7.2,7.3,7.4,8.0,8.1,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13
class	reltoastrelid	oid	pg_class.oid	"OID of the TOAST table associated with this table, zero if none. The TOAST table stores large attributes \"out of line\" in a secondary table."	14
class	reltriggers	int2		Number of triggers on the table; see pg_trigger catalog	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3
class	reltuples	float4		Number of live rows in the table. This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX	11,12,13
class	reltuples	float4		Number of live rows in the table. This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX. If the table has never yet been vacuumed or analyzed, reltuples contains -1 indicating that the row count is unknown	14
class	reltuples	float4		Number of rows in the table. This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
class	reltuples	float4		Number of rows in the table. This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and CREATE INDEX	7.4
class	reltuples	float4		Number of tuples in the table. This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and CREATE INDEX	7.2,7.3
class	reltuples	int4		Number of tuples in the table. This is only an estimate used by the planner, updated by VACUUM	7.1
class	reltype	oid	pg_class.oid	The OID of the data type that corresponds to this table's row type, if any (zero for indexes, which have no pg_type entry)	13
class	reltype	oid	pg_class.oid	The OID of the data type that corresponds to this table's row type, if any; zero for indexes, sequences, and toast tables, which have no pg_type entry	14
class	reltype	oid	pg_type.oid	The data type that corresponds to this table (not functional, only set for system tables)	7.1
class	reltype	oid	pg_type.oid	The OID of the data type that corresponds to this table's row type, if any (zero for indexes, which have no pg_type entry)	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
class	reltype	oid	pg_type.oid	The OID of the data type that corresponds to this table, if any (zero for indexes, which have no pg_type entry)	7.2,7.3,7.4
class	relukeys	int2		unused (Not the number of unique keys or something.)	7.1
class	relukeys	int2		Unused (not the number of unique keys)	7.2,7.3,7.4,8.0,8.1,8.2,8.3
collation	collcollate	name		LC_COLLATE for this collation object	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
collation	collctype	name		LC_CTYPE for this collation object	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
collation	collencoding	int4		Encoding in which the collation is applicable, or -1 if it works for any encoding	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
collation	collisdeterministic	bool		Is the collation deterministic?	12,13,14
collation	collname	name		Collation name (unique per namespace and encoding)	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
collation	collnamespace	oid	pg_collation.oid	The OID of the namespace that contains this collation	13,14
collation	collnamespace	oid	pg_namespace.oid	The OID of the namespace that contains this collation	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
collation	collowner	oid	pg_authid.oid	Owner of the collation	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
collation	collowner	oid	pg_collation.oid	Owner of the collation	13,14
collation	collprovider	char		Provider of the collation: d = database default, c = libc, i = icu	10,11,12,13,14
collation	collversion	text		Provider-specific version of the collation. This is recorded when the collation is created and then checked when it is used, to detect changes in the collation definition that could lead to data corruption	10,11,12,13,14
collation	oid	oid		Row identifier	12,13,14
collation	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
config	name	text		The parameter name	9.6,10,11,12,13,14
config	setting	text		The parameter value	9.6,10,11,12,13,14
constraint	conbin	pg_node_tree		If a check constraint, an internal representation of the expression	9.1,9.2,9.3,9.4,9.5,9.6,10,11
constraint	conbin	pg_node_tree		If a check constraint, an internal representation of the expression. (It's recommended to use pg_get_constraintdef() to extract the definition of a check constraint.)	12,13,14
constraint	conbin	text		If a check constraint, an internal representation of the expression	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0
constraint	condeferrable	bool		Is the constraint deferrable?	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
constraint	condeferrable	boolean		Is the constraint deferrable?	7.3
constraint	condeferred	bool		Is the constraint deferred by default?	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
constraint	condeferred	boolean		Is the constraint deferred by default?	7.3
constraint	conexclop	oid[]	pg_constraint.oid	If an exclusion constraint, list of the per-column exclusion operators	13,14
constraint	conexclop	oid[]	pg_operator.oid	If an exclusion constraint, list of the per-column exclusion operators	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
constraint	confdeltype	char		Foreign key deletion action code	7.3,7.4,8.0,8.1,8.2,8.3
constraint	confdeltype	char		Foreign key deletion action code: a = no action, r = restrict, c = cascade, n = set null, d = set default	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
constraint	conffeqop	oid[]	pg_constraint.oid	If a foreign key, list of the equality operators for FK = FK comparisons	13,14
constraint	conffeqop	oid[]	pg_operator.oid	If a foreign key, list of the equality operators for FK = FK comparisons	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
constraint	confkey	int2[]	pg_attribute.attnum	If a foreign key, list of the referenced columns	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
constraint	confkey	int2[]	pg_constraint.attnum	If a foreign key, list of the referenced columns	13,14
constraint	confmatchtype	char		Foreign key match type	7.3,7.4,8.0,8.1,8.2,8.3
constraint	confmatchtype	char		Foreign key match type: f = full, p = partial, s = simple	9.3,9.4,9.5,9.6,10,11,12,13,14
constraint	confmatchtype	char		Foreign key match type: f = full, p = partial, u = simple (unspecified)	8.4,9.0,9.1,9.2
constraint	confrelid	oid	pg_class.oid	If a foreign key, the referenced table; else 0	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
constraint	confrelid	oid	pg_constraint.oid	If a foreign key, the referenced table; else 0	13
constraint	confrelid	oid	pg_constraint.oid	If a foreign key, the referenced table; else zero	14
constraint	confupdtype	char		Foreign key update action code	7.3,7.4,8.0,8.1,8.2,8.3
constraint	confupdtype	char		Foreign key update action code: a = no action, r = restrict, c = cascade, n = set null, d = set default	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
constraint	conindid	oid	pg_class.oid	The index supporting this constraint, if it's a unique, primary key, foreign key, or exclusion constraint; else 0	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
constraint	conindid	oid	pg_constraint.oid	The index supporting this constraint, if it's a unique, primary key, foreign key, or exclusion constraint; else 0	13
constraint	conindid	oid	pg_constraint.oid	The index supporting this constraint, if it's a unique, primary key, foreign key, or exclusion constraint; else zero	14
constraint	coninhcount	int4		The number of direct ancestors this constraint has. A constraint with a nonzero number of ancestors cannot be dropped nor renamed	8.4
constraint	coninhcount	int4		The number of direct inheritance ancestors this constraint has. A constraint with a nonzero number of ancestors cannot be dropped nor renamed	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
constraint	conislocal	bool		This constraint is defined locally for the relation. Note that a constraint can be locally defined and inherited simultaneously	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
constraint	conislocal	bool		This constraint is defined locally in the relation. Note that a constraint can be locally defined and inherited simultaneously	8.4
constraint	conkey	int2[]	pg_attribute.attnum	If a table constraint (including a foreign key), list of the constrained columns	8.4
constraint	conkey	int2[]	pg_attribute.attnum	If a table constraint (including foreign keys, but not constraint triggers), list of the constrained columns	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
constraint	conkey	int2[]	pg_attribute.attnum	If a table constraint, list of columns which the constraint constrains	7.3,7.4,8.0,8.1,8.2,8.3
constraint	conkey	int2[]	pg_constraint.attnum	If a table constraint (including foreign keys, but not constraint triggers), list of the constrained columns	13,14
constraint	conname	name		Constraint name (not necessarily unique!)	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
constraint	connamespace	oid	pg_constraint.oid	The OID of the namespace that contains this constraint	13,14
constraint	connamespace	oid	pg_namespace.oid	The OID of the namespace that contains this constraint	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
constraint	connoinherit	bool		This constraint is defined locally for the relation. It is a non-inheritable constraint	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
constraint	conparentid	oid	pg_constraint.oid	The corresponding constraint in the parent partitioned table, if this is a constraint in a partition; else 0	11,12,13
constraint	conparentid	oid	pg_constraint.oid	The corresponding constraint of the parent partitioned table, if this is a constraint on a partition; else zero	14
constraint	conpfeqop	oid[]	pg_constraint.oid	If a foreign key, list of the equality operators for PK = FK comparisons	13,14
constraint	conpfeqop	oid[]	pg_operator.oid	If a foreign key, list of the equality operators for PK = FK comparisons	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
constraint	conppeqop	oid[]	pg_constraint.oid	If a foreign key, list of the equality operators for PK = PK comparisons	13,14
constraint	conppeqop	oid[]	pg_operator.oid	If a foreign key, list of the equality operators for PK = PK comparisons	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
constraint	conrelid	oid	pg_class.oid	The table this constraint is on; 0 if not a table constraint	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
constraint	conrelid	oid	pg_constraint.oid	The table this constraint is on; 0 if not a table constraint	13
constraint	conrelid	oid	pg_constraint.oid	The table this constraint is on; zero if not a table constraint	14
constraint	consrc	text		If a check constraint, a human-readable representation of the expression	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
constraint	contype	char		'c' = check constraint, 'f' = foreign key constraint, 'p' = primary key constraint, 'u' = unique constraint	7.3
constraint	contype	char		c = check constraint, f = foreign key constraint, p = primary key constraint, u = unique constraint	7.4,8.0,8.1,8.2,8.3,8.4
constraint	contype	char		c = check constraint, f = foreign key constraint, p = primary key constraint, u = unique constraint, t = constraint trigger, x = exclusion constraint	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
constraint	contypid	oid	pg_constraint.oid	The domain this constraint is on; 0 if not a domain constraint	13
constraint	contypid	oid	pg_constraint.oid	The domain this constraint is on; zero if not a domain constraint	14
constraint	contypid	oid	pg_type.oid	The domain this constraint is on; 0 if not a domain constraint	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
constraint	convalidated	bool		Has the constraint been validated? Currently, can be false only for foreign keys and CHECK constraints	14
constraint	convalidated	bool		Has the constraint been validated? Currently, can only be false for foreign keys	9.1
constraint	convalidated	bool		Has the constraint been validated? Currently, can only be false for foreign keys and CHECK constraints	9.2,9.3,9.4,9.5,9.6,10,11,12,13
constraint	oid	oid		Row identifier	12,13,14
constraint	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
conversion	condefault	bool		True if this is the default conversion	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
conversion	condefault	boolean		true if this is the default conversion	7.3
conversion	conforencoding	int4		Source encoding ID	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
conversion	conforencoding	int4		Source(for) encoding ID	7.3
conversion	conname	name		Conversion name (unique within a namespace)	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
conversion	connamespace	oid	pg_conversion.oid	The OID of the namespace that contains this conversion	13,14
conversion	connamespace	oid	pg_namespace.oid	The OID of the namespace that contains this conversion	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
conversion	conowner	int4	pg_shadow.usesysid	Owner (creator) of the namespace	7.3
conversion	conowner	int4	pg_shadow.usesysid	Owner of the conversion	7.4,8.0
conversion	conowner	oid	pg_authid.oid	Owner of the conversion	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
conversion	conowner	oid	pg_conversion.oid	Owner of the conversion	13,14
conversion	conproc	regproc	pg_conversion.oid	Conversion function	13,14
conversion	conproc	regproc	pg_proc.oid	Conversion function	11,12
conversion	conproc	regproc	pg_proc.oid	Conversion procedure	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
conversion	contoencoding	int4		Destination encoding ID	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
conversion	contoencoding	int4		Destination(to) encoding ID	7.3
conversion	oid	oid		Row identifier	12,13,14
conversion	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
cursors	creation_time	timestamptz		The time at which the cursor was declared	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
cursors	is_binary	bool		true if the cursor was declared BINARY; false otherwise	13,14
cursors	is_binary	boolean		true if the cursor was declared BINARY; false otherwise	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
cursors	is_holdable	bool		true if the cursor is holdable (that is, it can be accessed after the transaction that declared the cursor has committed); false otherwise	13,14
cursors	is_holdable	boolean		true if the cursor is holdable (that is, it can be accessed after the transaction that declared the cursor has committed); false otherwise	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
cursors	is_scrollable	bool		true if the cursor is scrollable (that is, it allows rows to be retrieved in a nonsequential manner); false otherwise	13,14
cursors	is_scrollable	boolean		true if the cursor is scrollable (that is, it allows rows to be retrieved in a nonsequential manner); false otherwise	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
cursors	name	text		The name of the cursor	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
cursors	statement	text		The verbatim query string submitted to declare this cursor	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
database	datacl	aclitem[]		Access permissions	7.3
database	datacl	aclitem[]		Access privileges	7.4
database	datacl	aclitem[]		Access privileges; see GRANT and REVOKE for details	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
database	datacl	aclitem[]		Access privileges; see Section 5.7 for details	12,13,14
database	datallowconn	bool		If false then no one can connect to this database. This is used to protect the template0 database from being altered	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
database	datcollate	name		LC_COLLATE for this database	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
database	datconfig	text[]		Session defaults for run-time configuration variables	7.3,7.4,8.0,8.1,8.2,8.3,8.4
database	datconnlimit	int4		Sets maximum number of concurrent connections that can be made to this database. -1 means no limit	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
database	datctype	name		LC_CTYPE for this database	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
database	datdba	int4	pg_shadow.usesysid	Owner of the database, initially who created it	7.1,7.2
database	datdba	int4	pg_shadow.usesysid	Owner of the database, usually the user who created it	7.3,7.4,8.0
database	datdba	oid	pg_authid.oid	Owner of the database, usually the user who created it	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
database	datdba	oid	pg_database.oid	Owner of the database, usually the user who created it	13,14
database	datfrozenxid	xid		"All rows inserted by transaction IDs before this one have been relabeled with a permanent (\"frozen\") transaction ID in this database. This is useful to check whether a database must be vacuumed soon to avoid transaction ID wrap-around problems."	7.4,8.0,8.1
database	datfrozenxid	xid		"All transaction IDs before this one have been replaced with a permanent (\"frozen\") transaction ID in this database. This is used to track whether the database needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_clog to be shrunk. It is the minimum of the per-table pg_class.relfrozenxid values"	8.2,8.3,8.4
database	datfrozenxid	xid		"All transaction IDs before this one have been replaced with a permanent (\"frozen\") transaction ID in this database. This is used to track whether the database needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_clog to be shrunk. It is the minimum of the per-table pg_class.relfrozenxid values."	9.0,9.1,9.2,9.3,9.4,9.5,9.6
database	datfrozenxid	xid		"All transaction IDs before this one have been replaced with a permanent (\"frozen\") transaction ID in this database. This is used to track whether the database needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_xact to be shrunk. It is the minimum of the per-table pg_class.relfrozenxid values."	10,11,12,13,14
database	datfrozenxid	xid		"All tuples inserted by transaction IDs before this one have been relabeled with a permanent (\"frozen\") transaction ID in this database. This is useful to check whether a database must be vacuumed soon to avoid transaction ID wraparound problems."	7.2,7.3
database	datistemplate	bool		"If true then this database can be used in the \"TEMPLATE\" clause of CREATE DATABASE to create a new database as a clone of this one."	7.3
database	datistemplate	bool		"If true then this database can be used in the \"TEMPLATE\" clause of CREATE DATABASE to create the new database as a clone of this one."	7.1,7.2
database	datistemplate	bool		If true then this database can be used in the TEMPLATE clause of CREATE DATABASE to create a new database as a clone of this one	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3
database	datistemplate	bool		If true, then this database can be cloned by any user with CREATEDB privileges; if false, then only superusers or the owner of the database can clone it	9.4,9.5,9.6,10,11,12,13,14
database	datlastsysoid	oid		Last oid in existence after the database was created; useful particularly to pg_dump	7.1
database	datlastsysoid	oid		Last system OID in the database; useful particularly to pg_dump	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
database	datminmxid	xid		All multixact IDs before this one have been replaced with a transaction ID in this database. This is used to track whether the database needs to be vacuumed in order to prevent multixact ID wraparound or to allow pg_multixact to be shrunk. It is the minimum of the per-table pg_class.relminmxid values	9.3,9.4,9.5,9.6,10,11,12,13,14
database	datname	name		Database name	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
database	datpath	text		If the database is stored at an alternative location then this records the location. It's either an environment variable name or an absolute path, depending how it was entered	7.1,7.2,7.3,7.4
database	dattablespace	oid	pg_database.oid	The default tablespace for the database. Within this database, all tables for which pg_class.reltablespace is zero will be stored in this tablespace; in particular, all the non-shared system catalogs will be there	13,14
database	dattablespace	oid	pg_tablespace.oid	The default tablespace for the database. Within this database, all tables for which pg_class.reltablespace is zero will be stored in this tablespace; in particular, all the non-shared system catalogs will be there	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
database	datvacuumxid	xid		All rows inserted or deleted by transaction IDs before this one have been marked as known committed or known aborted in this database. This is used to determine when commit-log space can be recycled	7.4,8.0,8.1
database	datvacuumxid	xid		All tuples inserted or deleted by transaction IDs before this one have been marked as known committed or known aborted in this database. This is used to determine when commit-log space can be recycled	7.2,7.3
database	encoding	int4		Character encoding for this database	7.4,8.0,8.1
database	encoding	int4		Character encoding for this database (pg_encoding_to_char() can translate this number to the encoding name)	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
database	encoding	int4		Character/multibyte encoding for this database	7.1,7.2,7.3
database	oid	oid		Row identifier	12,13,14
database	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
db_role-setting	setconfig	text[]		Defaults for run-time configuration variables	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
db_role-setting	setdatabase	oid	pg_database.oid	The OID of the database the setting is applicable to, or zero if not database-specific	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
db_role-setting	setdatabase	oid	pg_db_role_setting.oid	The OID of the database the setting is applicable to, or zero if not database-specific	13,14
db_role-setting	setrole	oid	pg_authid.oid	The OID of the role the setting is applicable to, or zero if not role-specific	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
db_role-setting	setrole	oid	pg_db_role_setting.oid	The OID of the role the setting is applicable to, or zero if not role-specific	13,14
default_acl	defaclacl	aclitem[]		Access privileges that this type of object should have on creation	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
default_acl	defaclnamespace	oid	pg_default_acl.oid	The OID of the namespace associated with this entry, or 0 if none	13
default_acl	defaclnamespace	oid	pg_default_acl.oid	The OID of the namespace associated with this entry, or zero if none	14
default_acl	defaclnamespace	oid	pg_namespace.oid	The OID of the namespace associated with this entry, or 0 if none	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
default_acl	defaclobjtype	char		Type of object this entry is for: r = relation (table, view), S = sequence, f = function	9.0,9.1
default_acl	defaclobjtype	char		Type of object this entry is for: r = relation (table, view), S = sequence, f = function, T = type	9.2,9.3,9.4,9.5,9.6
default_acl	defaclobjtype	char		Type of object this entry is for: r = relation (table, view), S = sequence, f = function, T = type, n = schema	10,11,12,13,14
default_acl	defaclrole	oid	pg_authid.oid	The OID of the role associated with this entry	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
default_acl	defaclrole	oid	pg_default_acl.oid	The OID of the role associated with this entry	13,14
default_acl	oid	oid		Row identifier	12,13,14
default_acl	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
depend	classid	oid	pg_class.oid	The OID of the system catalog the dependent object is in	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
depend	classid	oid	pg_depend.oid	The OID of the system catalog the dependent object is in	13
depend	classid	oid	pg_depend.oid	The OID of the system catalog the dependent object is in, or zero for a DEPENDENCY_PIN entry	14
depend	deptype	char		A code defining the specific semantics of this dependency relationship	7.3
depend	deptype	char		A code defining the specific semantics of this dependency relationship; see text	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
depend	objid	oid		The OID of the specific dependent object	13
depend	objid	oid		The OID of the specific dependent object, or zero for a DEPENDENCY_PIN entry	14
depend	objid	oid	any oid attribute	The oid of the specific dependent object	7.3
depend	objid	oid	any OID column	The OID of the specific dependent object	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
depend	objsubid	int4		For a table attribute, this is the attribute's column number (the objid and classid refer to the table itself). For all other object types, this field is presently zero	7.3
depend	objsubid	int4		For a table column, this is the column number (the objid and classid refer to the table itself). For all other object types, this column is zero	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
depend	refclassid	oid	pg_class.oid	The OID of the system catalog the referenced object is in	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
depend	refclassid	oid	pg_depend.oid	The OID of the system catalog the referenced object is in	13,14
depend	refobjid	oid		The OID of the specific referenced object	13,14
depend	refobjid	oid	any oid attribute	The oid of the specific referenced object	7.3
depend	refobjid	oid	any OID column	The OID of the specific referenced object	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
depend	refobjsubid	int4		For a table attribute, this is the attribute's column number (the refobjid and refclassid refer to the table itself). For all other object types, this field is presently zero	7.3
depend	refobjsubid	int4		For a table column, this is the column number (the refobjid and refclassid refer to the table itself). For all other object types, this column is zero	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
description	classoid	oid	pg_class.oid	The OID of the system catalog this object appears in	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
description	classoid	oid	pg_description.oid	The OID of the system catalog this object appears in	13,14
description	description	text		Arbitrary text that serves as the description of this object	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
description	objoid	oid		The OID of the object this description pertains to	13,14
description	objoid	oid	any oid attribute	The oid of the object this description pertains to	7.1,7.2,7.3
description	objoid	oid	any OID column	The OID of the object this description pertains to	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
description	objsubid	int4		For a comment on a table attribute, this is the attribute's column number (the objoid and classoid refer to the table itself). For all other object types, this field is presently zero	7.2,7.3
description	objsubid	int4		For a comment on a table column, this is the column number (the objoid and classoid refer to the table itself). For all other object types, this column is zero	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
enum	enumlabel	name		The textual label for this enum value	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
enum	enumsortorder	float4		The sort position of this enum value within its enum type	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
enum	enumtypid	oid	pg_enum.oid	The OID of the pg_type entry owning this enum value	13,14
enum	enumtypid	oid	pg_type.oid	The OID of the pg_type entry owning this enum value	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
enum	oid	oid		Row identifier	12,13,14
enum	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
event_trigger	evtenabled	char		"Controls in which session_replication_role modes the event trigger fires. O = trigger fires in \"origin\" and \"local\" modes, D = trigger is disabled, R = trigger fires in \"replica\" mode, A = trigger fires always."	9.3,9.4,9.5,9.6,10,11,12,13,14
event_trigger	evtevent	name		Identifies the event for which this trigger fires	9.3,9.4,9.5,9.6,10,11,12,13,14
event_trigger	evtfoid	oid	pg_event_trigger.oid	The function to be called	13,14
event_trigger	evtfoid	oid	pg_proc.oid	The function to be called	9.3,9.4,9.5,9.6,10,11,12
event_trigger	evtname	name		Trigger name (must be unique)	9.3,9.4,9.5,9.6,10,11,12,13,14
event_trigger	evtowner	oid	pg_authid.oid	Owner of the event trigger	9.3,9.4,9.5,9.6,10,11,12
event_trigger	evtowner	oid	pg_event_trigger.oid	Owner of the event trigger	13,14
event_trigger	evttags	text[]		Command tags for which this trigger will fire. If NULL, the firing of this trigger is not restricted on the basis of the command tag	9.3,9.4,9.5,9.6,10,11,12,13,14
event_trigger	oid	oid		Row identifier	13,14
extension	extcondition	text[]		Array of WHERE-clause filter conditions for the extension's configuration table(s), or NULL if none	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
extension	extconfig	oid[]	pg_class.oid	Array of regclass OIDs for the extension's configuration table(s), or NULL if none	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
extension	extconfig	oid[]	pg_extension.oid	Array of regclass OIDs for the extension's configuration table(s), or NULL if none	13,14
extension	extname	name		Name of the extension	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
extension	extnamespace	oid	pg_extension.oid	Schema containing the extension's exported objects	13,14
extension	extnamespace	oid	pg_namespace.oid	Schema containing the extension's exported objects	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
extension	extowner	oid	pg_authid.oid	Owner of the extension	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
extension	extowner	oid	pg_extension.oid	Owner of the extension	13,14
extension	extrelocatable	bool		True if extension can be relocated to another schema	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
extension	extversion	text		Version name for the extension	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
extension	oid	oid		Row identifier	12,13,14
extension	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
file_settings	applied	bool		True if the value can be applied successfully	13,14
file_settings	applied	boolean		True if the value can be applied successfully	9.5,9.6,10,11,12
file_settings	error	text		If not null, an error message indicating why this entry could not be applied	9.5,9.6,10,11,12,13,14
file_settings	name	text		Configuration parameter name	9.5,9.6,10,11,12,13,14
file_settings	seqno	int4		Order in which the entries are processed (1..n)	13,14
file_settings	seqno	integer		Order in which the entries are processed (1..n)	9.5,9.6,10,11,12
file_settings	setting	text		Value to be assigned to the parameter	9.5,9.6,10,11,12,13,14
file_settings	sourcefile	text		Full path name of the configuration file	9.5,9.6,10,11,12,13,14
file_settings	sourceline	int4		Line number within the configuration file where the entry appears	13,14
file_settings	sourceline	integer		Line number within the configuration file where the entry appears	9.5,9.6,10,11,12
foreign_data-wrapper	fdwacl	aclitem[]		Access privileges; see GRANT and REVOKE for details	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
foreign_data-wrapper	fdwacl	aclitem[]		Access privileges; see Section 5.7 for details	12,13,14
foreign_data-wrapper	fdwhandler	oid	pg_foreign_data_wrapper.oid	References a handler function that is responsible for supplying execution routines for the foreign-data wrapper. Zero if no handler is provided	13,14
foreign_data-wrapper	fdwhandler	oid	pg_proc.oid	References a handler function that is responsible for supplying execution routines for the foreign-data wrapper. Zero if no handler is provided	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
foreign_data-wrapper	fdwname	name		Name of the foreign-data wrapper	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
foreign_data-wrapper	fdwoptions	text[]		"Foreign-data wrapper specific options, as \"keyword=value\" strings"	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
foreign_data-wrapper	fdwowner	oid	pg_authid.oid	Owner of the foreign-data wrapper	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
foreign_data-wrapper	fdwowner	oid	pg_foreign_data_wrapper.oid	Owner of the foreign-data wrapper	13,14
foreign_data-wrapper	fdwvalidator	oid	pg_foreign_data_wrapper.oid	References a validator function that is responsible for checking the validity of the options given to the foreign-data wrapper, as well as options for foreign servers and user mappings using the foreign-data wrapper. Zero if no validator is provided	13,14
foreign_data-wrapper	fdwvalidator	oid	pg_proc.oid	References a validator function that is responsible for checking the validity of the generic options given to the foreign-data wrapper, as well as to foreign servers and user mappings using the foreign-data wrapper. Zero if no validator is provided	8.4,9.0
foreign_data-wrapper	fdwvalidator	oid	pg_proc.oid	References a validator function that is responsible for checking the validity of the options given to the foreign-data wrapper, as well as options for foreign servers and user mappings using the foreign-data wrapper. Zero if no validator is provided	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
foreign_data-wrapper	oid	oid		Row identifier	12,13,14
foreign_data-wrapper	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
foreign_server	oid	oid		Row identifier	12,13,14
foreign_server	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
foreign_server	srvacl	aclitem[]		Access privileges; see GRANT and REVOKE for details	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
foreign_server	srvacl	aclitem[]		Access privileges; see Section 5.7 for details	12,13,14
foreign_server	srvfdw	oid	pg_foreign_data_wrapper.oid	OID of the foreign-data wrapper of this foreign server	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
foreign_server	srvfdw	oid	pg_foreign_data_wrapper.oid	The OID of the foreign-data wrapper of this foreign server	8.4,9.0
foreign_server	srvfdw	oid	pg_foreign_server.oid	OID of the foreign-data wrapper of this foreign server	13,14
foreign_server	srvname	name		Name of the foreign server	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
foreign_server	srvoptions	text[]		"Foreign server specific options, as \"keyword=value\" strings"	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
foreign_server	srvoptions	text[]		"Foreign server specific options, as \"keyword=value\" strings."	8.4
foreign_server	srvowner	oid	pg_authid.oid	Owner of the foreign server	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
foreign_server	srvowner	oid	pg_foreign_server.oid	Owner of the foreign server	13,14
foreign_server	srvtype	text		Type of the server (optional)	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
foreign_server	srvversion	text		Version of the server (optional)	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
foreign_table	ftoptions	text[]		"Foreign table options, as \"keyword=value\" strings"	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
foreign_table	ftrelid	oid	pg_class.oid	OID of the pg_class entry for this foreign table	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
foreign_table	ftrelid	oid	pg_foreign_table.oid	OID of the pg_class entry for this foreign table	13
foreign_table	ftrelid	oid	pg_foreign_table.oid	The OID of the pg_class entry for this foreign table	14
foreign_table	ftserver	oid	pg_foreign_server.oid	OID of the foreign server for this foreign table	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
foreign_table	ftserver	oid	pg_foreign_table.oid	OID of the foreign server for this foreign table	13,14
group	grolist	int4[]	pg_shadow.usesysid	An array containing the IDs of the users in this group	7.1,7.2,7.3,7.4,8.0
group	grolist	oid[]	pg_authid.oid	An array containing the IDs of the roles in this group	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
group	grolist	oid[]	pg_group.oid	An array containing the IDs of the roles in this group	13,14
group	groname	name		Name of the group	7.1,7.2,7.3,7.4,8.0
group	groname	name	pg_authid.rolname	Name of the group	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
group	groname	name	pg_group.rolname	Name of the group	13,14
group	grosysid	int4		An arbitrary number to identify this group	7.1,7.2,7.3,7.4,8.0
group	grosysid	oid	pg_authid.oid	ID of this group	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
group	grosysid	oid	pg_group.oid	ID of this group	13,14
hba_file-rules	address	text		Host name or IP address, or one of all, samehost, or samenet, or null for local connections	10,11,12,13,14
hba_file-rules	auth_method	text		Authentication method	10,11,12,13,14
hba_file-rules	database	text[]		List of database name(s) to which this rule applies	10,11,12,13,14
hba_file-rules	error	text		If not null, an error message indicating why this line could not be processed	10,11,12,13,14
hba_file-rules	line_number	int4		Line number of this rule in pg_hba.conf	13,14
hba_file-rules	line_number	integer		Line number of this rule in pg_hba.conf	10,11,12
hba_file-rules	netmask	text		IP address mask, or null if not applicable	10,11,12,13,14
hba_file-rules	options	text[]		Options specified for authentication method, if any	10,11,12,13,14
hba_file-rules	type	text		Type of connection	10,11,12,13,14
hba_file-rules	user_name	text[]		List of user and group name(s) to which this rule applies	10,11,12,13,14
index	indcheckxmin	bool		If true, queries must not use the index until the xmin of this pg_index row is below their TransactionXmin event horizon, because the table may contain broken HOT chains with incompatible rows that they can see	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
index	indclass	oidvector	pg_index.oid	For each column in the index key (indnkeyatts values), this contains the OID of the operator class to use. See pg_opclass for details	13,14
index	indclass	oidvector	pg_opclass.oid	"For each column in the index key this contains a reference to the \"operator class\" to use. See pg_opclass for details."	7.1,7.2,7.3
index	indclass	oidvector	pg_opclass.oid	For each column in the index key (indnkeyatts values), this contains the OID of the operator class to use. See pg_opclass for details	11,12
index	indclass	oidvector	pg_opclass.oid	For each column in the index key this contains the OID of the operator class to use. See pg_opclass for details	7.4,8.0,8.1,8.2
index	indclass	oidvector	pg_opclass.oid	For each column in the index key, this contains the OID of the operator class to use. See pg_opclass for details	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
index	indcollation	oidvector	pg_collation.oid	For each column in the index key (indnkeyatts values), this contains the OID of the collation to use for the index, or zero if the column is not of a collatable data type	11,12
index	indcollation	oidvector	pg_collation.oid	For each column in the index key, this contains the OID of the collation to use for the index	9.1,9.2,9.3,9.4,9.5,9.6
index	indcollation	oidvector	pg_collation.oid	For each column in the index key, this contains the OID of the collation to use for the index, or zero if the column is not of a collatable data type	10
index	indcollation	oidvector	pg_index.oid	For each column in the index key (indnkeyatts values), this contains the OID of the collation to use for the index, or zero if the column is not of a collatable data type	13,14
index	indexprs	pg_node_tree		Expression trees (in nodeToString() representation) for index attributes that are not simple column references. This is a list with one element for each zero entry in indkey. Null if all index attributes are simple references	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
index	indexprs	text		Expression trees (in nodeToString() representation) for index attributes that are not simple column references. This is a list with one element for each zero entry in indkey. Null if all index attributes are simple references	7.4,8.0,8.1,8.2,8.3,8.4,9.0
index	indexrelid	oid	pg_class.oid	The OID of the pg_class entry for this index	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
index	indexrelid	oid	pg_index.oid	The OID of the pg_class entry for this index	13,14
index	indimmediate	bool		If true, the uniqueness check is enforced immediately on insertion (indisunique should always be true when this is true)	9.0
index	indimmediate	bool		If true, the uniqueness check is enforced immediately on insertion (irrelevant if indisunique is not true)	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
index	indisclustered	bool		If true, the table was last clustered on this index	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
index	indisclustered	bool		unused	7.1,7.2
index	indisexclusion	bool		If true, this index supports an exclusion constraint	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
index	indislive	bool		If false, the index is in process of being dropped, and should be ignored for all purposes (including HOT-safety decisions)	9.3,9.4,9.5,9.6,10,11,12,13,14
index	indislossy	bool		???	7.1
index	indisprimary	bool		If true, this index is a unique index that represents the primary key of the table	7.1
index	indisprimary	bool		If true, this index represents the primary key of the table (indisunique should always be true when this is true)	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
index	indisprimary	bool		If true, this index represents the primary key of the table. (indisunique should always be true when this is true.)	7.2,7.3,7.4,8.0,8.1,8.2
index	indisready	bool		If true, the index is currently ready for inserts. False means the index must be ignored by INSERT/UPDATE operations	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
index	indisreplident	bool		"If true this index has been chosen as \"replica identity\" using ALTER TABLE ... REPLICA IDENTITY USING INDEX ..."	9.4,9.5,9.6,10,11,12,13,14
index	indisunique	bool		If true, this is a unique index	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
index	indisvalid	bool		If both this flag and indisready are true, the index is currently valid for queries. False means the index is possibly incomplete: it must still be modified by INSERT/UPDATE operations, but it cannot safely be used for queries. If it is unique, the uniqueness property is not guaranteed true either	9.2
index	indisvalid	bool		If true, the index is currently valid for queries. False means the index is possibly incomplete: it must still be modified by INSERT/UPDATE operations, but it cannot safely be used for queries. If it is unique, the uniqueness property is not guaranteed true either	9.3,9.4,9.5,9.6,10,11,12,13,14
index	indisvalid	bool		If true, the index is currently valid for queries. False means the index is possibly incomplete: it must still be modified by INSERT/UPDATE operations, but it cannot safely be used for queries. If it is unique, the uniqueness property is not true either	8.2,8.3,8.4,9.0,9.1
index	indkey	int2vector	pg_attribute.attnum	This is a vector (array) of up to INDEX_MAX_KEYS values that indicate which table columns this index pertains to. For example a value of 1 3 would mean that the first and the third column make up the index key	7.2
index	indkey	int2vector	pg_attribute.attnum	This is a vector (array) of up to INDEX_MAX_KEYS values that indicate which table columns this index pertains to. For example a value of 1 3 would mean that the first and the third column make up the index key. For a functional index, these columns are the inputs to the function, and the function's return value is the index key	7.3
index	indkey	int2vector	pg_attribute.attnum	This is an array of indnatts (up to INDEX_MAX_KEYS) values that indicate which table columns this index indexes. For example a value of 1 3 would mean that the first and the third table columns make up the index key. A zero in this array indicates that the corresponding index attribute is an expression over the table columns, rather than a simple column reference	7.4,8.0
index	indkey	int2vector	pg_attribute.attnum	This is an array of indnatts values that indicate which table columns this index indexes. For example a value of 1 3 would mean that the first and the third table columns make up the index entries. Key columns come before non-key (included) columns. A zero in this array indicates that the corresponding index attribute is an expression over the table columns, rather than a simple column reference	11,12
index	indkey	int2vector	pg_attribute.attnum	This is an array of indnatts values that indicate which table columns this index indexes. For example a value of 1 3 would mean that the first and the third table columns make up the index key. A zero in this array indicates that the corresponding index attribute is an expression over the table columns, rather than a simple column reference	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
index	indkey	int2vector	pg_attribute.attnum	This is an vector (array) of up to INDEX_MAX_KEYS values that indicate which table columns this index pertains to. For example a value of 1 3 would mean that the first and the third column make up the index key	7.1
index	indkey	int2vector	pg_index.attnum	This is an array of indnatts values that indicate which table columns this index indexes. For example a value of 1 3 would mean that the first and the third table columns make up the index entries. Key columns come before non-key (included) columns. A zero in this array indicates that the corresponding index attribute is an expression over the table columns, rather than a simple column reference	13,14
index	indnatts	int2		The number of columns in the index (duplicates pg_class.relnatts)	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
index	indnatts	int2		The total number of columns in the index (duplicates pg_class.relnatts); this number includes both key and included attributes	11,12,13,14
index	indnkeyatts	int2		The number of key columns in the index, not counting any included columns, which are merely stored and do not participate in the index semantics	11,12,13,14
index	indoption	int2vector		This is an array of indnatts values that store per-column flag bits. The meaning of the bits is defined by the index's access method	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
index	indoption	int2vector		This is an array of indnkeyatts values that store per-column flag bits. The meaning of the bits is defined by the index's access method	11,12,13,14
index	indpred	pg_node_tree		Expression tree (in nodeToString() representation) for partial index predicate. Null if not a partial index	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
index	indpred	text		Expression tree (in nodeToString() representation) for partial index predicate. Null if not a partial index	7.4,8.0,8.1,8.2,8.3,8.4,9.0
index	indpred	text		Expression tree (in the form of a nodeToString representation) for partial index predicate	7.2
index	indpred	text		Expression tree (in the form of a nodeToString representation) for partial index predicate. Empty string if not a partial index	7.3
index	indpred	text		Query plan for partial index predicate (not functional)	7.1
index	indproc	oid	pg_proc.oid	The registered procedure if this is a functional index	7.1
index	indproc	regproc	pg_proc.oid	The function's OID if this is a functional index, else zero	7.3
index	indproc	regproc	pg_proc.oid	The registered procedure if this is a functional index	7.2
index	indreference	oid		unused	7.1,7.2,7.3
index	indrelid	oid	pg_class.oid	The OID of the pg_class entry for the table this index is for	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
index	indrelid	oid	pg_index.oid	The OID of the pg_class entry for the table this index is for	13,14
indexes	indexdef	text		Index definition (a reconstructed CREATE INDEX command)	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
indexes	indexdef	text		index definition (a reconstructed creation command)	7.4,8.0,8.1
indexes	indexname	name	pg_class.relname	Name of index	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
indexes	indexname	name	pg_indexes.relname	Name of index	13,14
indexes	schemaname	name	pg_indexes.nspname	Name of schema containing table and index	13,14
indexes	schemaname	name	pg_namespace.nspname	Name of schema containing table and index	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
indexes	tablename	name	pg_class.relname	Name of table the index is for	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
indexes	tablename	name	pg_indexes.relname	Name of table the index is for	13,14
indexes	tablespace	name	pg_indexes.spcname	Name of tablespace containing index (null if default for database)	13,14
indexes	tablespace	name	pg_tablespace.spcname	Name of tablespace containing index (null if default for database)	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
inherits	inhdetachpending	bool		true for a partition that is in the process of being detached; false otherwise	14
inherits	inhparent	oid	pg_class.oid	The OID of the parent table	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
inherits	inhparent	oid	pg_class.oid	The OID of the parent table or index	11,12
inherits	inhparent	oid	pg_class.oid	This is the reference to the parent table, from which the table referenced by inhrelid inherited from	7.1
inherits	inhparent	oid	pg_class.oid	This is the reference to the parent table, which the table referenced by inhrelid inherited from	7.2
inherits	inhparent	oid	pg_inherits.oid	The OID of the parent table or index	13,14
inherits	inhrelid	oid	pg_class.oid	The OID of the child table	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
inherits	inhrelid	oid	pg_class.oid	The OID of the child table or index	11,12
inherits	inhrelid	oid	pg_class.oid	This is the reference to the subtable, that is, it records the fact that the identified table is inherited from some other table	7.1,7.2
inherits	inhrelid	oid	pg_inherits.oid	The OID of the child table or index	13,14
inherits	inhseqno	int4		If there is more than one direct parent for a child table (multiple inheritance), this number tells the order in which the inherited columns are to be arranged. The count starts at 1	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
inherits	inhseqno	int4		If there is more than one direct parent for a child table (multiple inheritance), this number tells the order in which the inherited columns are to be arranged. The count starts at 1. Indexes can not have multiple inheritance, since they can only inherit when using declarative partitioning	11,12
inherits	inhseqno	int4		If there is more than one direct parent for a child table (multiple inheritance), this number tells the order in which the inherited columns are to be arranged. The count starts at 1. Indexes cannot have multiple inheritance, since they can only inherit when using declarative partitioning	13,14
inherits	inhseqno	int4		If there is more than one parent for a child table (multiple inheritance), this number tells the order in which the inherited columns are to be arranged. The count starts at 1	7.3,7.4
inherits	inhseqno	int4		If there is more than one parent for a subtable (multiple inheritance), this number tells the order in which the inherited columns are to be arranged. The count starts at 1	7.2
inherits	inhseqno	int4		If there is more than one subtable/parent pair (multiple inheritance), this number tells the order in which the inherited columns are to be arranged. The count starts at 1	7.1
init_privs	classoid	oid	pg_class.oid	The OID of the system catalog the object is in	9.6,10,11,12
init_privs	classoid	oid	pg_init_privs.oid	The OID of the system catalog the object is in	13,14
init_privs	initprivs	aclitem[]		The initial access privileges; see GRANT and REVOKE for details	9.6,10,11
init_privs	initprivs	aclitem[]		The initial access privileges; see Section 5.7 for details	12,13,14
init_privs	objoid	oid		The OID of the specific object	13,14
init_privs	objoid	oid	any OID column	The OID of the specific object	9.6,10,11,12
init_privs	objsubid	int4		For a table column, this is the column number (the objoid and classoid refer to the table itself). For all other object types, this column is zero	9.6,10,11,12,13,14
init_privs	privtype	char		A code defining the type of initial privilege of this object; see text	9.6,10,11,12,13,14
language	lanacl	aclitem[]		Access permissions	7.3
language	lanacl	aclitem[]		Access privileges	7.4
language	lanacl	aclitem[]		Access privileges; see GRANT and REVOKE for details	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
language	lanacl	aclitem[]		Access privileges; see Section 5.7 for details	12,13,14
language	lancompiler	text		not currently used	7.1,7.2
language	laninline	oid	pg_language.oid	"This references a function that is responsible for executing \"inline\" anonymous code blocks (DO blocks). Zero if inline blocks are not supported."	13,14
language	laninline	oid	pg_proc.oid	"This references a function that is responsible for executing \"inline\" anonymous code blocks (DO blocks). Zero if inline blocks are not supported."	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
language	lanispl	bool		This is false for internal languages (such as SQL) and true for dynamically loaded language handler modules. It essentially means that, if it is true, the language may be dropped	7.1,7.2
language	lanispl	bool		This is false for internal languages (such as SQL) and true for user-defined languages. Currently, pg_dump still uses this to determine which languages need to be dumped, but this may be replaced by a different mechanism in the future	8.2
language	lanispl	bool		This is false for internal languages (such as SQL) and true for user-defined languages. Currently, pg_dump still uses this to determine which languages need to be dumped, but this may be replaced by a different mechanism sometime	7.3,7.4,8.0,8.1
language	lanispl	bool		This is false for internal languages (such as SQL) and true for user-defined languages. Currently, pg_dump still uses this to determine which languages need to be dumped, but this might be replaced by a different mechanism in the future	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
language	lanname	name		Name of the language	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
language	lanname	name		Name of the language (to be specified when creating a function)	7.1,7.2,7.3,7.4
language	lanowner	oid	pg_authid.oid	Owner of the language	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
language	lanowner	oid	pg_language.oid	Owner of the language	13,14
language	lanplcallfoid	oid	pg_language.oid	For noninternal languages this references the language handler, which is a special function that is responsible for executing all functions that are written in the particular language	13
language	lanplcallfoid	oid	pg_language.oid	For noninternal languages this references the language handler, which is a special function that is responsible for executing all functions that are written in the particular language. Zero for internal languages	14
language	lanplcallfoid	oid	pg_proc.oid	For non-internal languages this references the language handler, which is a special function that is responsible for executing all functions that are written in the particular language	7.1,7.2,7.3
language	lanplcallfoid	oid	pg_proc.oid	For noninternal languages this references the language handler, which is a special function that is responsible for executing all functions that are written in the particular language	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
language	lanpltrusted	bool		This is a trusted language. If this is an internal language (lanispl is false) then this column is meaningless	8.0
language	lanpltrusted	bool		This is a trusted language. See under CREATE LANGUAGE what this means. If this is an internal language (lanispl is false) then this column is meaningless	7.4
language	lanpltrusted	bool		This is a trusted language. See under CREATE LANGUAGE what this means. If this is an internal language (lanispl is false) then this field is meaningless	7.1,7.2,7.3
language	lanpltrusted	bool		True if this is a trusted language, which means that it is believed not to grant access to anything outside the normal SQL execution environment. Only superusers can create functions in untrusted languages	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
language	lanpltrusted	bool		True if this is a trusted language, which means that it is believed not to grant access to anything outside the normal SQL execution environment. Only superusers may create functions in untrusted languages	8.1,8.2
language	lanvalidator	oid	pg_language.oid	This references a language validator function that is responsible for checking the syntax and validity of new functions when they are created. Zero if no validator is provided	13,14
language	lanvalidator	oid	pg_proc.oid	This references a language validator function that is responsible for checking the syntax and validity of new functions when they are created. See under CREATE LANGUAGE for further information about validators	7.3,7.4
language	lanvalidator	oid	pg_proc.oid	This references a language validator function that is responsible for checking the syntax and validity of new functions when they are created. Zero if no validator is provided	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
language	oid	oid		Row identifier	12,13,14
language	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
largeobject	data	bytea		Actual data stored in the large object. This will never be more than LOBLKSIZE bytes and may be less	7.4,8.0,8.1,8.2
largeobject	data	bytea		Actual data stored in the large object. This will never be more than LOBLKSIZE bytes and might be less	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
largeobject	data	bytea		Actual data stored in the large object. This will never be more than LOBLKSIZE bytes, and may be less	7.2,7.3
largeobject	loid	oid		Identifier of the large object that includes this page	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4
largeobject	loid	oid	pg_largeobject.oid	Identifier of the large object that includes this page	13,14
largeobject	loid	oid	pg_largeobject_metadata.oid	Identifier of the large object that includes this page	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
largeobject	pageno	int4		Page number of this page within its large object (counting from zero)	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
largeobject_metadata	lomacl	aclitem[]		Access privileges; see GRANT and REVOKE for details	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
largeobject_metadata	lomacl	aclitem[]		Access privileges; see Section 5.7 for details	12,13,14
largeobject_metadata	lomowner	oid	pg_authid.oid	Owner of the large object	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
largeobject_metadata	lomowner	oid	pg_largeobject_metadata.oid	Owner of the large object	13,14
largeobject_metadata	oid	oid		Row identifier	12,13,14
largeobject_metadata	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
listener	listenerpid	int4		PID of the backend process that created this entry	7.2,7.3
listener	listenerpid	int4		PID of the server process that created this entry	7.4,8.0,8.1,8.4
listener	listenerpid	int4	PID of the server process that created this entry	 	8.2,8.3
listener	notification	int4		Zero if no event is pending for this listener. If an event is pending, the PID of the backend that sent the notification	7.2,7.3
listener	notification	int4		Zero if no event is pending for this listener. If an event is pending, the PID of the server process that sent the notification	7.4,8.0,8.1,8.4
listener	notification	int4	Zero if no event is pending for this listener. If an event is pending, the PID of the server process that sent the notification	 	8.2,8.3
listener	relname	name		"Notify condition name. (The name need not match any actual relation in the database; the term \"relname\" is historical.)"	7.2,7.3
listener	relname	name		Notify condition name. (The name need not match any actual relation in the database; the name relname is historical.)	7.4,8.0,8.1,8.4
listener	relname	name	Notify condition name. (The name need not match any actual relation in the database; the name relname is historical.)	 	8.2,8.3
locks	classid	oid	pg_class.oid	OID of the system catalog containing the lock target, or null if the target is not a general database object	9.2,9.3,9.4,9.5,9.6,10,11,12
locks	classid	oid	pg_class.oid	OID of the system catalog containing the object, or null if the object is not a general database object	8.1,8.2,8.3,8.4,9.0,9.1
locks	classid	oid	pg_locks.oid	OID of the system catalog containing the lock target, or null if the target is not a general database object	13,14
locks	database	oid	pg_database.oid	OID of the database in which the lock target exists, or zero if the target is a shared object, or null if the target is a transaction ID	9.2,9.3,9.4,9.5,9.6,10,11,12
locks	database	oid	pg_database.oid	OID of the database in which the locked relation exists, or zero if the locked relation is a globally-shared table, or NULL if the lockable object is a transaction ID	7.4,8.0
locks	database	oid	pg_database.oid	OID of the database in which the object exists, or zero if the object is a shared object, or null if the object is a transaction ID	8.1,8.2,8.3,8.4,9.0,9.1
locks	database	oid	pg_locks.oid	OID of the database in which the lock target exists, or zero if the target is a shared object, or null if the target is a transaction ID	13,14
locks	fastpath	bool		True if lock was taken via fast path, false if taken via main lock table	13,14
locks	fastpath	boolean		True if lock was taken via fast path, false if taken via main lock table	9.2,9.3,9.4,9.5,9.6,10,11,12
locks	granted	bool		True if lock is held, false if lock is awaited	13,14
locks	granted	boolean		True if lock is held, false if lock is awaited	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
locks	locktype	text		Type of the lockable object: relation, extend, frozenid, page, tuple, transactionid, virtualxid, object, userlock, or advisory	9.5,9.6,10,11,12
locks	locktype	text		Type of the lockable object: relation, extend, frozenid, page, tuple, transactionid, virtualxid, spectoken, object, userlock, or advisory. (See also Table 27.11.)	13
locks	locktype	text		Type of the lockable object: relation, extend, frozenid, page, tuple, transactionid, virtualxid, spectoken, object, userlock, or advisory. (See also Table 28.11.)	14
locks	locktype	text		type of the lockable object: relation, extend, page, tuple, transactionid, object, or userlock	8.1
locks	locktype	text		type of the lockable object: relation, extend, page, tuple, transactionid, object, userlock, or advisory	8.2
locks	locktype	text		Type of the lockable object: relation, extend, page, tuple, transactionid, virtualxid, object, userlock, or advisory	8.3,8.4,9.0,9.1,9.2,9.3,9.4
locks	mode	text		Name of the lock mode held or desired by this process (see Section 12.3.1)	7.4,8.0,8.1,8.2
locks	mode	text		Name of the lock mode held or desired by this process (see Section 13.3.1 and Section 13.2.3)	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
locks	mode	text		Name of the lock mode held or desired by this process (see Section 13.3.1)	8.3,8.4,9.0
locks	objid	oid		OID of the lock target within its system catalog, or null if the target is not a general database object	13,14
locks	objid	oid	any OID column	OID of the lock target within its system catalog, or null if the target is not a general database object	9.2,9.3,9.4,9.5,9.6,10,11,12
locks	objid	oid	any OID column	OID of the object within its system catalog, or null if the object is not a general database object	8.1,8.2,8.3,8.4,9.0,9.1
locks	objsubid	int2		Column number targeted by the lock (the classid and objid refer to the table itself), or zero if the target is some other general database object, or null if the target is not a general database object	13,14
locks	objsubid	smallint		Column number targeted by the lock (the classid and objid refer to the table itself), or zero if the target is some other general database object, or null if the target is not a general database object	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
locks	objsubid	smallint		For a table column, this is the column number (the classid and objid refer to the table itself). For all other object types, this column is zero. Null if the object is not a general database object	8.1,8.2,8.3,8.4,9.0
locks	page	int4		Page number targeted by the lock within the relation, or null if the target is not a relation page or tuple	13,14
locks	page	integer		Page number targeted by the lock within the relation, or null if the target is not a relation page or tuple	9.2,9.3,9.4,9.5,9.6,10,11,12
locks	page	integer		Page number within the relation, or null if the object is not a tuple or relation page	8.1,8.2,8.3,8.4,9.0,9.1
locks	pid	int4		Process ID of the server process holding or awaiting this lock, or null if the lock is held by a prepared transaction	13,14
locks	pid	integer		process ID of a server process holding or awaiting this lock	7.4,8.0
locks	pid	integer		Process ID of the server process holding or awaiting this lock, or null if the lock is held by a prepared transaction	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
locks	pid	integer		Process ID of the server process holding or awaiting this lock. Null if the lock is held by a prepared transaction	8.1,8.2,8.3,8.4,9.0
locks	relation	oid	pg_class.oid	OID of the locked relation, or NULL if the lockable object is a transaction ID	7.4,8.0
locks	relation	oid	pg_class.oid	OID of the relation targeted by the lock, or null if the target is not a relation or part of a relation	9.2,9.3,9.4,9.5,9.6,10,11,12
locks	relation	oid	pg_class.oid	OID of the relation, or null if the object is not a relation or part of a relation	8.1,8.2,8.3,8.4,9.0,9.1
locks	relation	oid	pg_locks.oid	OID of the relation targeted by the lock, or null if the target is not a relation or part of a relation	13,14
locks	transaction	xid		ID of a transaction, or NULL if the lockable object is a relation	7.4,8.0
locks	transaction	xid		ID of the transaction that is holding or awaiting this lock	8.1,8.2
locks	transactionid	xid		ID of a transaction, or null if the object is not a transaction ID	8.1,8.2,8.3,8.4,9.0,9.1
locks	transactionid	xid		ID of the transaction targeted by the lock, or null if the target is not a transaction ID	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
locks	tuple	int2		Tuple number targeted by the lock within the page, or null if the target is not a tuple	13,14
locks	tuple	smallint		Tuple number targeted by the lock within the page, or null if the target is not a tuple	9.2,9.3,9.4,9.5,9.6,10,11,12
locks	tuple	smallint		Tuple number within the page, or null if the object is not a tuple	8.1,8.2,8.3,8.4,9.0,9.1
locks	virtualtransaction	text		Virtual ID of the transaction that is holding or awaiting this lock	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
locks	virtualxid	text		Virtual ID of a transaction, or null if the object is not a virtual transaction ID	8.3,8.4,9.0,9.1
locks	virtualxid	text		Virtual ID of the transaction targeted by the lock, or null if the target is not a virtual transaction ID	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
locks	waitstart	timestamptz		Time when the server process started waiting for this lock, or null if the lock is held. Note that this can be null for a very short period of time after the wait started even though granted is false	14
matviews	definition	text		Materialized view definition (a reconstructed SELECT query)	9.3,9.4,9.5,9.6,10,11,12,13,14
matviews	hasindexes	bool		True if materialized view has (or recently had) any indexes	13,14
matviews	hasindexes	boolean		True if materialized view has (or recently had) any indexes	9.3,9.4,9.5,9.6,10,11,12
matviews	ispopulated	bool		True if materialized view is currently populated	13,14
matviews	ispopulated	boolean		True if materialized view is currently populated	9.3,9.4,9.5,9.6,10,11,12
matviews	matviewname	name	pg_class.relname	Name of materialized view	9.3,9.4,9.5,9.6,10,11,12
matviews	matviewname	name	pg_matviews.relname	Name of materialized view	13,14
matviews	matviewowner	name	pg_authid.rolname	Name of materialized view's owner	9.3,9.4,9.5,9.6,10,11,12
matviews	matviewowner	name	pg_matviews.rolname	Name of materialized view's owner	13,14
matviews	schemaname	name	pg_matviews.nspname	Name of schema containing materialized view	13,14
matviews	schemaname	name	pg_namespace.nspname	Name of schema containing materialized view	9.3,9.4,9.5,9.6,10,11,12
matviews	tablespace	name	pg_matviews.spcname	Name of tablespace containing materialized view (null if default for database)	13,14
matviews	tablespace	name	pg_tablespace.spcname	Name of tablespace containing materialized view (null if default for database)	9.3,9.4,9.5,9.6,10,11,12
namespace	nspacl	aclitem[]		Access permissions	7.3
namespace	nspacl	aclitem[]		Access privileges	7.4
namespace	nspacl	aclitem[]		Access privileges; see GRANT and REVOKE for details	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
namespace	nspacl	aclitem[]		Access privileges; see Section 5.7 for details	12,13,14
namespace	nspname	name		Name of the namespace	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
namespace	nspowner	int4	pg_shadow.usesysid	Owner (creator) of the namespace	7.3
namespace	nspowner	int4	pg_shadow.usesysid	Owner of the namespace	7.4,8.0
namespace	nspowner	oid	pg_authid.oid	Owner of the namespace	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
namespace	nspowner	oid	pg_namespace.oid	Owner of the namespace	13,14
namespace	oid	oid		Row identifier	12,13,14
namespace	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
opclass	oid	oid		Row identifier	12,13,14
opclass	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
opclass	opcamid	oid	pg_am.oid	index access method opclass is for	7.3
opclass	opcamid	oid	pg_am.oid	Index access method operator class is for	7.4,8.0,8.1,8.2
opclass	opcdefault	bool		true if opclass is default for opcintype	7.3
opclass	opcdefault	bool		True if this operator class is the default for opcintype	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
opclass	opcfamily	oid	pg_opclass.oid	Operator family containing the operator class	13,14
opclass	opcfamily	oid	pg_opfamily.oid	Operator family containing the operator class	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
opclass	opcintype	oid	pg_opclass.oid	Data type that the operator class indexes	13,14
opclass	opcintype	oid	pg_type.oid	Data type that the operator class indexes	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
opclass	opcintype	oid	pg_type.oid	Input data type of the operator class	7.4
opclass	opcintype	oid	pg_type.oid	type of input data for opclass	7.3
opclass	opckeytype	oid	pg_opclass.oid	Type of data stored in index, or zero if same as opcintype	13,14
opclass	opckeytype	oid	pg_type.oid	Type of data stored in index, or zero if same as opcintype	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
opclass	opckeytype	oid	pg_type.oid	Type of index data, or zero if same as opcintype	7.3,7.4
opclass	opcmethod	oid	pg_am.oid	Index access method operator class is for	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
opclass	opcmethod	oid	pg_opclass.oid	Index access method operator class is for	13,14
opclass	opcname	name		name of this opclass	7.3
opclass	opcname	name		Name of this operator class	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
opclass	opcnamespace	oid	pg_namespace.oid	namespace of this opclass	7.3
opclass	opcnamespace	oid	pg_namespace.oid	Namespace of this operator class	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
opclass	opcnamespace	oid	pg_opclass.oid	Namespace of this operator class	13,14
opclass	opcowner	int4	pg_shadow.usesysid	opclass owner	7.3
opclass	opcowner	int4	pg_shadow.usesysid	Operator class owner	7.4,8.0
opclass	opcowner	oid	pg_authid.oid	Owner of the operator class	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
opclass	opcowner	oid	pg_opclass.oid	Owner of the operator class	13,14
operator	oid	oid		Row identifier	12,13,14
operator	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
operator	oprcanhash	bool		This operator supports hash joins	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
operator	oprcanmerge	bool		This operator supports merge joins	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
operator	oprcode	regproc		Function that implements this operator	7.1,7.2
operator	oprcode	regproc	pg_operator.oid	"Function that implements this operator (zero for a not-yet-defined \"shell\" operator)"	14
operator	oprcode	regproc	pg_operator.oid	Function that implements this operator	13
operator	oprcode	regproc	pg_proc.oid	Function that implements this operator	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
operator	oprcom	oid	pg_operator.oid	Commutator of this operator (zero if none)	14
operator	oprcom	oid	pg_operator.oid	Commutator of this operator, if any	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13
operator	oprgtcmpop	oid	pg_operator.oid	If this operator supports merge joins, the greater-than operator that compares the left and right operand types (L>R)	7.3,7.4,8.0,8.1,8.2
operator	oprisleft	bool		unused	7.1,7.2
operator	oprjoin	regproc		Join selectivity estimation function for this operator	7.1,7.2
operator	oprjoin	regproc	pg_operator.oid	Join selectivity estimation function for this operator	13
operator	oprjoin	regproc	pg_operator.oid	Join selectivity estimation function for this operator (zero if none)	14
operator	oprjoin	regproc	pg_proc.oid	Join selectivity estimation function for this operator	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
operator	oprkind	char		"'b' = infix (\"both\"), 'l' = prefix (\"left\"), 'r' = postfix (\"right\")"	7.1,7.2,7.3
operator	oprkind	char		"b = infix (\"both\"), l = prefix (\"left\"), r = postfix (\"right\")"	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13
operator	oprkind	char		"b = infix operator (\"both\"), or l = prefix operator (\"left\")"	14
operator	oprleft	oid	pg_operator.oid	Type of the left operand	13
operator	oprleft	oid	pg_operator.oid	Type of the left operand (zero for a prefix operator)	14
operator	oprleft	oid	pg_type.oid	Type of the left operand	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
operator	oprlsortop	oid	pg_operator.oid	If this operator supports merge joins, the operator that sorts the type of the left-hand operand	7.1,7.2
operator	oprlsortop	oid	pg_operator.oid	If this operator supports merge joins, the operator that sorts the type of the left-hand operand (L<L)	7.3,7.4,8.0,8.1,8.2
operator	oprltcmpop	oid	pg_operator.oid	If this operator supports merge joins, the less-than operator that compares the left and right operand types (L<R)	7.3,7.4,8.0,8.1,8.2
operator	oprname	name		Name of the operator	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
operator	oprnamespace	oid	pg_namespace.oid	The OID of the namespace that contains this operator	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
operator	oprnamespace	oid	pg_operator.oid	The OID of the namespace that contains this operator	13,14
operator	oprnegate	oid	pg_operator.oid	Negator of this operator (zero if none)	14
operator	oprnegate	oid	pg_operator.oid	Negator of this operator, if any	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13
operator	oprowner	int4	pg_shadow.usesysid	Owner (creator) of the operator	7.1,7.2,7.3
operator	oprowner	int4	pg_shadow.usesysid	Owner of the operator	7.4,8.0
operator	oprowner	oid	pg_authid.oid	Owner of the operator	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
operator	oprowner	oid	pg_operator.oid	Owner of the operator	13,14
operator	oprprec	int2		unused	7.1,7.2
operator	oprrest	regproc		Restriction selectivity estimation function for this operator	7.1,7.2
operator	oprrest	regproc	pg_operator.oid	Restriction selectivity estimation function for this operator	13
operator	oprrest	regproc	pg_operator.oid	Restriction selectivity estimation function for this operator (zero if none)	14
operator	oprrest	regproc	pg_proc.oid	Restriction selectivity estimation function for this operator	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
operator	oprresult	oid	pg_operator.oid	"Type of the result (zero for a not-yet-defined \"shell\" operator)"	14
operator	oprresult	oid	pg_operator.oid	Type of the result	13
operator	oprresult	oid	pg_type.oid	Type of the result	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
operator	oprright	oid	pg_operator.oid	Type of the right operand	13,14
operator	oprright	oid	pg_type.oid	Type of the right operand	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
operator	oprrsortop	oid	pg_operator.oid	If this operator supports merge joins, the operator that sorts the type of the right-hand operand	7.1,7.2
operator	oprrsortop	oid	pg_operator.oid	If this operator supports merge joins, the operator that sorts the type of the right-hand operand (R<R)	7.3,7.4,8.0,8.1,8.2
opfamily	oid	oid		Row identifier	12,13,14
opfamily	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
opfamily	opfmethod	oid	pg_am.oid	Index access method operator family is for	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
opfamily	opfmethod	oid	pg_opfamily.oid	Index access method operator family is for	13,14
opfamily	opfname	name		Name of this operator family	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
opfamily	opfnamespace	oid	pg_namespace.oid	Namespace of this operator family	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
opfamily	opfnamespace	oid	pg_opfamily.oid	Namespace of this operator family	13,14
opfamily	opfowner	oid	pg_authid.oid	Owner of the operator family	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
opfamily	opfowner	oid	pg_opfamily.oid	Owner of the operator family	13,14
partitioned_table	partattrs	int2vector	pg_attribute.attnum	This is an array of partnatts values that indicate which table columns are part of the partition key. For example, a value of 1 3 would mean that the first and the third table columns make up the partition key. A zero in this array indicates that the corresponding partition key column is an expression, rather than a simple column reference	10,11,12
partitioned_table	partattrs	int2vector	pg_partitioned_table.attnum	This is an array of partnatts values that indicate which table columns are part of the partition key. For example, a value of 1 3 would mean that the first and the third table columns make up the partition key. A zero in this array indicates that the corresponding partition key column is an expression, rather than a simple column reference	13,14
partitioned_table	partclass	oidvector	pg_opclass.oid	For each column in the partition key, this contains the OID of the operator class to use. See pg_opclass for details	10,11,12
partitioned_table	partclass	oidvector	pg_partitioned_table.oid	For each column in the partition key, this contains the OID of the operator class to use. See pg_opclass for details	13,14
partitioned_table	partcollation	oidvector	pg_opclass.oid	For each column in the partition key, this contains the OID of the collation to use for partitioning, or zero if the column is not of a collatable data type	10,11,12
partitioned_table	partcollation	oidvector	pg_partitioned_table.oid	For each column in the partition key, this contains the OID of the collation to use for partitioning, or zero if the column is not of a collatable data type	13,14
partitioned_table	partdefid	oid	pg_class.oid	The OID of the pg_class entry for the default partition of this partitioned table, or zero if this partitioned table does not have a default partition	11,12
partitioned_table	partdefid	oid	pg_partitioned_table.oid	The OID of the pg_class entry for the default partition of this partitioned table, or zero if this partitioned table does not have a default partition	13,14
partitioned_table	partexprs	pg_node_tree		Expression trees (in nodeToString() representation) for partition key columns that are not simple column references. This is a list with one element for each zero entry in partattrs. Null if all partition key columns are simple references	10,11,12,13,14
partitioned_table	partnatts	int2		The number of columns in partition key	10,11,12,13
partitioned_table	partnatts	int2		The number of columns in the partition key	14
partitioned_table	partrelid	oid	pg_class.oid	The OID of the pg_class entry for this partitioned table	10,11,12
partitioned_table	partrelid	oid	pg_partitioned_table.oid	The OID of the pg_class entry for this partitioned table	13,14
partitioned_table	partstrat	char		Partitioning strategy; h = hash partitioned table, l = list partitioned table, r = range partitioned table	11,12,13,14
partitioned_table	partstrat	char		Partitioning strategy; l = list partitioned table, r = range partitioned table	10
pltemplate	tmplacl	aclitem[]		Access privileges for template (not actually used)	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
pltemplate	tmplacl	aclitem[]		Access privileges for template (not yet used)	8.1,8.2,8.3,8.4,9.0
pltemplate	tmpldbacreate	boolean		True if language may be created by a database owner	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
pltemplate	tmplhandler	text		Name of call handler function	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
pltemplate	tmplinline	text		Name of anonymous-block handler function, or null if none	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
pltemplate	tmpllibrary	text		Path of shared library that implements language	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
pltemplate	tmplname	name		Name of the language this template is for	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
pltemplate	tmpltrusted	boolean		True if language is considered trusted	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
pltemplate	tmplvalidator	text		Name of validator function, or null if none	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
policies	cmd	text		The command type to which the policy is applied	9.5,9.6,10,11,12,13,14
policies	permissive	text		Is the policy permissive or restrictive?	13,14
policies	policyname	name	pg_policies.polname	Name of policy	13,14
policies	policyname	name	pg_policy.polname	Name of policy	9.5,9.6,10,11,12
policies	polpermissive	text		Is the policy permissive or restrictive?	10,11,12
policies	qual	text		The expression added to the security barrier qualifications for queries that this policy applies to	9.5,9.6,10,11,12,13,14
policies	roles	name[]		The roles to which this policy applies	9.5,9.6,10,11,12,13,14
policies	schemaname	name	pg_namespace.nspname	Name of schema containing table policy is on	9.5,9.6,10,11,12
policies	schemaname	name	pg_policies.nspname	Name of schema containing table policy is on	13,14
policies	tablename	name	pg_class.relname	Name of table policy is on	9.5,9.6,10,11,12
policies	tablename	name	pg_policies.relname	Name of table policy is on	13,14
policies	with_check	text		The expression added to the WITH CHECK qualifications for queries that attempt to add rows to this table	9.5,9.6,10,11,12,13,14
policy	oid	oid		Row identifier	13,14
policy	polcmd	char		The command type to which the policy is applied: r for SELECT, a for INSERT, w for UPDATE, d for DELETE, or * for all	9.5,9.6,10,11,12,13,14
policy	polname	name		The name of the policy	9.5,9.6,10,11,12,13,14
policy	polpermissive	bool		Is the policy permissive or restrictive?	13,14
policy	polpermissive	boolean		Is the policy permissive or restrictive?	10,11,12
policy	polqual	pg_node_tree		The expression tree to be added to the security barrier qualifications for queries that use the table	9.5,9.6,10,11,12,13,14
policy	polrelid	oid	pg_class.oid	The table to which the policy applies	9.5,9.6,10,11,12
policy	polrelid	oid	pg_policy.oid	The table to which the policy applies	13,14
policy	polroles	oid[]	pg_authid.oid	The roles to which the policy is applied	9.5,9.6,10,11,12
policy	polroles	oid[]	pg_policy.oid	The roles to which the policy is applied	13
policy	polroles	oid[]	pg_policy.oid	The roles to which the policy is applied; zero means PUBLIC (and normally appears alone in the array)	14
policy	polwithcheck	pg_node_tree		The expression tree to be added to the WITH CHECK qualifications for queries that attempt to add rows to the table	9.5,9.6,10,11,12,13,14
prepared_statements	custom_plans	int8		Number of times custom plan was chosen	14
prepared_statements	from_sql	bool		true if the prepared statement was created via the PREPARE SQL command; false if the statement was prepared via the frontend/backend protocol	13,14
prepared_statements	from_sql	boolean		true if the prepared statement was created via the PREPARE SQL command; false if the statement was prepared via the frontend/backend protocol	9.6,10,11,12
prepared_statements	from_sql	boolean		true if the prepared statement was created via the PREPARE SQL statement; false if the statement was prepared via the frontend/backend protocol	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5
prepared_statements	generic_plans	int8		Number of times generic plan was chosen	14
prepared_statements	name	text		The identifier of the prepared statement	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
prepared_statements	parameter_types	regtype[]		The expected parameter types for the prepared statement in the form of an array of regtype. The OID corresponding to an element of this array can be obtained by casting the regtype value to oid	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
prepared_statements	prepare_time	timestamptz		The time at which the prepared statement was created	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
prepared_statements	statement	text		The query string submitted by the client to create this prepared statement. For prepared statements created via SQL, this is the PREPARE statement submitted by the client. For prepared statements created via the frontend/backend protocol, this is the text of the prepared statement itself	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
prepared_xacts	database	name	pg_database.datname	Name of the database in which the transaction was executed	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
prepared_xacts	database	name	pg_prepared_xacts.datname	Name of the database in which the transaction was executed	13,14
prepared_xacts	gid	text		Global transaction identifier that was assigned to the transaction	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
prepared_xacts	owner	name	pg_authid.rolname	Name of the user that executed the transaction	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
prepared_xacts	owner	name	pg_prepared_xacts.rolname	Name of the user that executed the transaction	13,14
prepared_xacts	prepared	timestamp with time zone		Time at which the transaction was prepared for commit	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
prepared_xacts	prepared	timestamptz		Time at which the transaction was prepared for commit	13,14
prepared_xacts	transaction	xid		Numeric transaction identifier of the prepared transaction	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	oid	oid		Row identifier	12,13,14
proc	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
proc	proacl	aclitem[]		Access permissions	7.3
proc	proacl	aclitem[]		Access privileges	7.4
proc	proacl	aclitem[]		Access privileges; see GRANT and REVOKE for details	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
proc	proacl	aclitem[]		Access privileges; see Section 5.7 for details	12,13,14
proc	proallargtypes	oid[]	pg_proc.oid	An array of the data types of the function arguments. This includes all arguments (including OUT and INOUT arguments); however, if all the arguments are IN arguments, this field will be null. Note that subscripting is 1-based, whereas for historical reasons proargtypes is subscripted from 0	13,14
proc	proallargtypes	oid[]	pg_type.oid	An array with the data types of the function arguments. This includes all arguments (including OUT and INOUT arguments); however, if all the arguments are IN arguments, this field will be null. Note that subscripting is 1-based, whereas for historical reasons proargtypes is subscripted from 0	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
proc	proargdefaults	pg_node_tree		Expression trees (in nodeToString() representation) for default values. This is a list with pronargdefaults elements, corresponding to the last N input arguments (i.e., the last N proargtypes positions). If none of the arguments have defaults, this field will be null	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	proargdefaults	text		Expression trees (in nodeToString() representation) for default values. This is a list with pronargdefaults elements, corresponding to the last N input arguments (i.e., the last N proargtypes positions). If none of the arguments have defaults, this field will be null	8.4,9.0
proc	proargmodes	char[]		An array of the modes of the function arguments, encoded as i for IN arguments, o for OUT arguments, b for INOUT arguments, v for VARIADIC arguments, t for TABLE arguments. If all the arguments are IN arguments, this field will be null. Note that subscripts correspond to positions of proallargtypes not proargtypes	13,14
proc	proargmodes	char[]		An array with the modes of the function arguments, encoded as i for IN arguments, o for OUT arguments, b for INOUT arguments, v for VARIADIC arguments, t for TABLE arguments. If all the arguments are IN arguments, this field will be null. Note that subscripts correspond to positions of proallargtypes not proargtypes	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
proc	proargmodes	char[]		An array with the modes of the function arguments, encoded as i for IN arguments, o for OUT arguments, b for INOUT arguments. If all the arguments are IN arguments, this field will be null. Note that subscripts correspond to positions of proallargtypes not proargtypes	8.1,8.2,8.3
proc	proargnames	text[]		An array of the names of the function arguments. Arguments without a name are set to empty strings in the array. If none of the arguments have a name, this field will be null. Note that subscripts correspond to positions of proallargtypes not proargtypes	13,14
proc	proargnames	text[]		An array with the names of the function arguments. Arguments without a name are set to empty strings in the array. If none of the arguments have a name, this field may be null	8.0
proc	proargnames	text[]		An array with the names of the function arguments. Arguments without a name are set to empty strings in the array. If none of the arguments have a name, this field will be null. Note that subscripts correspond to positions of proallargtypes not proargtypes	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
proc	proargtypes	oidvector	pg_proc.oid	An array of the data types of the function arguments. This includes only input arguments (including INOUT and VARIADIC arguments), and thus represents the call signature of the function	13,14
proc	proargtypes	oidvector	pg_type.oid	A vector with the data types of the function arguments	7.1,7.2,7.3
proc	proargtypes	oidvector	pg_type.oid	An array with the data types of the function arguments	7.4,8.0
proc	proargtypes	oidvector	pg_type.oid	An array with the data types of the function arguments. This includes only input arguments (including INOUT and VARIADIC arguments), and thus represents the call signature of the function	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
proc	proargtypes	oidvector	pg_type.oid	An array with the data types of the function arguments. This includes only input arguments (including INOUT arguments), and thus represents the call signature of the function	8.1,8.2,8.3
proc	probin	bytea		?	7.1
proc	probin	bytea		Additional information about how to invoke the function. Again, the interpretation is language-specific	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4
proc	probin	text		Additional information about how to invoke the function. Again, the interpretation is language-specific	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	probyte_pct	int4		dead code	7.1,7.2
proc	proconfig	text[]		Function's local settings for run-time configuration variables	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	procost	float4		Estimated execution cost (in units of cpu_operator_cost); if proretset, this is cost per row returned	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	proisagg	bool		Function is an aggregate function	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
proc	proiscachable	bool		Function returns same result for same input values	7.1,7.2
proc	proisinh	bool		unused	7.1,7.2
proc	proisstrict	bool		"Function returns null if any call argument is null. In that case the function won't actually be called at all. Functions that are not \"strict\" must be prepared to handle null inputs"	8.2,8.3,8.4
proc	proisstrict	bool		"Function returns null if any call argument is null. In that case the function won't actually be called at all. Functions that are not \"strict\" must be prepared to handle null inputs."	7.1,7.2,7.3,7.4,8.0,8.1,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	proistrusted	bool		not functional	7.1,7.2
proc	proiswindow	bool		Function is a window function	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10
proc	prokind	char		f for a normal function, p for a procedure, a for an aggregate function, or w for a window function	11,12,13,14
proc	prolang	oid	pg_langauge.oid	Implementation language or call interface of this function	7.4
proc	prolang	oid	pg_language.oid	Implementation language or call interface of this function	7.1,7.2,7.3,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
proc	prolang	oid	pg_proc.oid	Implementation language or call interface of this function	13,14
proc	proleakproof	bool		The function has no side effects. No information about the arguments is conveyed except via the return value. Any function that might throw an error depending on the values of its arguments is not leak-proof	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	proname	name		Name of the function	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	pronamespace	oid	pg_namespace.oid	The OID of the namespace that contains this function	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
proc	pronamespace	oid	pg_proc.oid	The OID of the namespace that contains this function	13,14
proc	pronargdefaults	int2		Number of arguments that have defaults	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	pronargs	int2		Number of arguments	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3
proc	pronargs	int2		Number of input arguments	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	prooutin_ratio	int4		dead code	7.1,7.2
proc	proowner	int4	pg_shadow.usesysid	Owner (creator) of the function	7.1,7.2,7.3
proc	proowner	int4	pg_shadow.usesysid	Owner of the function	7.4,8.0
proc	proowner	oid	pg_authid.oid	Owner of the function	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
proc	proowner	oid	pg_proc.oid	Owner of the function	13,14
proc	proparallel	char		proparallel tells whether the function can be safely run in parallel mode. It is s for functions which are safe to run in parallel mode without restriction. It is r for functions which can be run in parallel mode, but their execution is restricted to the parallel group leader; parallel worker processes cannot invoke these functions. It is u for functions which are unsafe in parallel mode; the presence of such a function forces a serial execution plan	9.6,10,11,12,13,14
proc	properbyte_cpu	int4		dead code	7.2
proc	properbyte_pct	int4		dead code	7.1
proc	propercall_cpu	int4		dead code	7.2
proc	propercall_pct	int4		dead code	7.1
proc	proretset	bool		Function returns a set (i.e., multiple values of the specified data type)	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	proretset	bool		Function returns a set (ie, multiple values of the specified data type)	7.3
proc	proretset	bool		Function returns a set (ie, multiple values of the specified datatype)	7.2
proc	proretset	bool		Function returns a set (probably not functional)	7.1
proc	prorettype	oid	pg_proc.oid	Data type of the return value	13,14
proc	prorettype	oid	pg_type.oid	Data type of the return value	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
proc	prorettype	oid	pg_type.oid	Data type of the return value (0 if the function does not return a value)	7.1,7.2
proc	prorows	float4		Estimated number of result rows (zero if not proretset)	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	prosecdef	bool		"Function is a security definer (i.e., a \"setuid\" function)"	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	prosqlbody	pg_node_tree		Pre-parsed SQL function body. This is used for SQL-language functions when the body is given in SQL-standard notation rather than as a string literal. It's null in other cases	14
proc	prosrc	text		This tells the function handler how to invoke the function. It might be the actual source code of the function for interpreted languages, a link symbol, a file name, or just about anything else, depending on the implementation language/call convention	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
proc	prosrc	text		This tells the function handler how to invoke the function. It might be the actual source code of the function for interpreted languages, a link symbol, a file name, or just about anything else, depending the implementation language/call convention	7.1
proc	prosupport	regproc	pg_proc.oid	Optional planner support function for this function (see Section 37.11)	12,13
proc	prosupport	regproc	pg_proc.oid	Planner support function for this function (see Section 38.11), or zero if none	14
proc	protransform	regproc	pg_proc.oid	Calls to this function can be simplified by this other function (see Section 35.9.11)	9.2,9.3,9.4,9.5
proc	protransform	regproc	pg_proc.oid	Calls to this function can be simplified by this other function (see Section 36.9.11)	9.6
proc	protransform	regproc	pg_proc.oid	Calls to this function can be simplified by this other function (see Section 37.9.10)	10
proc	protransform	regproc	pg_proc.oid	Calls to this function can be simplified by this other function (see Section 38.10.10)	11
proc	protrftypes	oid[]		Data type OIDs for which to apply transforms	9.5,9.6,10,11,12
proc	protrftypes	oid[]	pg_proc.oid	An array of the argument/result data type(s) for which to apply transforms (from the function's TRANSFORM clause). Null if none	13,14
proc	provariadic	oid	pg_proc.oid	Data type of the variadic array parameter's elements, or zero if the function does not have a variadic parameter	13,14
proc	provariadic	oid	pg_type.oid	Data type of the variadic array parameter's elements, or zero if the function does not have a variadic parameter	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
proc	provolatile	char		"provolatile tells whether the function's result depends only on its input arguments, or is affected by outside factors. It is i for \"immutable\" functions, which always deliver the same result for the same inputs. It is s for \"stable\" functions, whose results (for fixed inputs) do not change within a scan. It is v for \"volatile\" functions, whose results may change at any time. (Use v also for functions with side-effects, so that calls to them cannot get optimized away.)"	7.3,7.4,8.0,8.1,8.2
proc	provolatile	char		"provolatile tells whether the function's result depends only on its input arguments, or is affected by outside factors. It is i for \"immutable\" functions, which always deliver the same result for the same inputs. It is s for \"stable\" functions, whose results (for fixed inputs) do not change within a scan. It is v for \"volatile\" functions, whose results might change at any time. (Use v also for functions with side-effects, so that calls to them cannot get optimized away.)"	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
publication	oid	oid		Row identifier	12,13,14
publication	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	10,11
publication	puballtables	bool		If true, this publication automatically includes all tables in the database, including any that will be created in the future	10,11,12,13,14
publication	pubdelete	bool		If true, DELETE operations are replicated for tables in the publication	10,11,12,13,14
publication	pubinsert	bool		If true, INSERT operations are replicated for tables in the publication	10,11,12,13,14
publication	pubname	name		Name of the publication	10,11,12,13,14
publication	pubowner	oid	pg_authid.oid	Owner of the publication	10,11,12
publication	pubowner	oid	pg_publication.oid	Owner of the publication	13,14
publication	pubtruncate	bool		If true, TRUNCATE operations are replicated for tables in the publication	11,12,13,14
publication	pubupdate	bool		If true, UPDATE operations are replicated for tables in the publication	10,11,12,13,14
publication	pubviaroot	bool		If true, operations on a leaf partition are replicated using the identity and schema of its topmost partitioned ancestor mentioned in the publication instead of its own	13,14
publication_rel	oid	oid		Row identifier	13,14
publication_rel	prpubid	oid	pg_publication.oid	Reference to publication	10,11,12
publication_rel	prpubid	oid	pg_publication_rel.oid	Reference to publication	13,14
publication_rel	prrelid	oid	pg_class.oid	Reference to relation	10,11,12
publication_rel	prrelid	oid	pg_publication_rel.oid	Reference to relation	13,14
publication_tables	pubname	name	pg_publication.pubname	Name of publication	10,11,12
publication_tables	pubname	name	pg_publication_tables.pubname	Name of publication	13,14
publication_tables	schemaname	name	pg_namespace.nspname	Name of schema containing table	10,11,12
publication_tables	schemaname	name	pg_publication_tables.nspname	Name of schema containing table	13,14
publication_tables	tablename	name	pg_class.relname	Name of table	10,11,12
publication_tables	tablename	name	pg_publication_tables.relname	Name of table	13,14
range	rngcanonical	regproc	pg_proc.oid	OID of the function to convert a range value into canonical form, or 0 if none	9.2,9.3,9.4,9.5,9.6,10,11,12
range	rngcanonical	regproc	pg_range.oid	OID of the function to convert a range value into canonical form, or 0 if none	13
range	rngcanonical	regproc	pg_range.oid	OID of the function to convert a range value into canonical form, or zero if none	14
range	rngcollation	oid	pg_collation.oid	OID of the collation used for range comparisons, or 0 if none	9.2,9.3,9.4,9.5,9.6,10,11,12
range	rngcollation	oid	pg_range.oid	OID of the collation used for range comparisons, or 0 if none	13
range	rngcollation	oid	pg_range.oid	OID of the collation used for range comparisons, or zero if none	14
range	rngmultitypid	oid	pg_range.oid	OID of the multirange type for this range type	14
range	rngsubdiff	regproc	pg_proc.oid	OID of the function to return the difference between two element values as double precision, or 0 if none	9.2,9.3,9.4,9.5,9.6,10,11,12
range	rngsubdiff	regproc	pg_range.oid	OID of the function to return the difference between two element values as double precision, or 0 if none	13
range	rngsubdiff	regproc	pg_range.oid	OID of the function to return the difference between two element values as double precision, or zero if none	14
range	rngsubopc	oid	pg_opclass.oid	OID of the subtype's operator class used for range comparisons	9.2,9.3,9.4,9.5,9.6,10,11,12
range	rngsubopc	oid	pg_range.oid	OID of the subtype's operator class used for range comparisons	13,14
range	rngsubtype	oid	pg_range.oid	OID of the element type (subtype) of this range type	13,14
range	rngsubtype	oid	pg_type.oid	OID of the element type (subtype) of this range type	9.2,9.3,9.4,9.5,9.6,10,11,12
range	rngtypid	oid	pg_range.oid	OID of the range type	13,14
range	rngtypid	oid	pg_type.oid	OID of the range type	9.2,9.3,9.4,9.5,9.6,10,11,12
relcheck	rcbin	text		An internal representation of the constraint expression	7.1,7.2
relcheck	rcname	name		Constraint name	7.1,7.2
relcheck	rcrelid	oid	pg_class.oid	The table this check constraint is on	7.1,7.2
relcheck	rcsrc	text		A human-readable representation of the consraint expression	7.1
relcheck	rcsrc	text		A human-readable representation of the constraint expression	7.2
replication_origin	roident	oid		A unique, cluster-wide identifier for the replication origin. Should never leave the system	9.5,9.6,10,11,12,13,14
replication_origin	roname	text		The external, user defined, name of a replication origin	9.5,9.6,10,11,12,13,14
replication_origin-status	external_id	text	pg_replication_origin.roname	external node identifier	9.5,9.6,10,11,12
replication_origin-status	external_id	text	pg_replication_origin_status.roname	external node identifier	13,14
replication_origin-status	local_id	Oid	pg_replication_origin.roident	internal node identifier	9.5,9.6,10,11,12
replication_origin-status	local_id	oid	pg_replication_origin_status.roident	internal node identifier	13,14
replication_origin-status	local_lsn	pg_lsn		This node's LSN at which remote_lsn has been replicated. Used to flush commit records before persisting data to disk when using asynchronous commits	9.5,9.6,10,11,12,13,14
replication_origin-status	remote_lsn	pg_lsn		The origin node's LSN up to which data has been replicated	9.5,9.6,10,11,12,13,14
replication_slots	active	bool		True if this slot is currently actively being used	13,14
replication_slots	active	boolean		True if this slot is currently actively being used	9.4,9.5,9.6,10,11,12
replication_slots	active_pid	int4		The process ID of the session using this slot if the slot is currently actively being used. NULL if inactive	13,14
replication_slots	active_pid	integer		The process ID of the session using this slot if the slot is currently actively being used. NULL if inactive	9.5,9.6,10,11,12
replication_slots	catalog_xmin	xid		The oldest transaction affecting the system catalogs that this slot needs the database to retain. VACUUM cannot remove catalog tuples deleted by any later transaction	9.4,9.5,9.6,10,11,12,13,14
replication_slots	confirmed_flush_lsn	pg_lsn		The address (LSN) up to which the logical slot's consumer has confirmed receiving data. Data older than this is not available anymore. NULL for physical slots	9.6,10,11,12,13,14
replication_slots	database	name	pg_replication_slots.datname	The name of the database this slot is associated with, or null. Only logical slots have an associated database	13,14
replication_slots	database	text	pg_database.datname	The name of the database this slot is associated with, or null. Only logical slots have an associated database	9.4,9.5,9.6,10,11,12
replication_slots	datoid	oid	pg_database.oid	The OID of the database this slot is associated with, or null. Only logical slots have an associated database	9.4,9.5,9.6,10,11,12
replication_slots	datoid	oid	pg_replication_slots.oid	The OID of the database this slot is associated with, or null. Only logical slots have an associated database	13,14
replication_slots	plugin	name		The base name of the shared object containing the output plugin this logical slot is using, or null for physical slots	9.4,9.5,9.6,10,11,12,13,14
replication_slots	restart_lsn	pg_lsn		The address (LSN) of oldest WAL which still might be required by the consumer of this slot and thus won't be automatically removed during checkpoints	9.4,9.5,9.6,10
replication_slots	restart_lsn	pg_lsn		The address (LSN) of oldest WAL which still might be required by the consumer of this slot and thus won't be automatically removed during checkpoints unless this LSN gets behind more than max_slot_wal_keep_size from the current LSN. NULL if the LSN of this slot has never been reserved	13,14
replication_slots	restart_lsn	pg_lsn		The address (LSN) of oldest WAL which still might be required by the consumer of this slot and thus won't be automatically removed during checkpoints. NULL if the LSN of this slot has never been reserved	11,12
replication_slots	safe_wal_size	int8		"The number of bytes that can be written to WAL such that this slot is not in danger of getting in state \"lost\". It is NULL for lost slots, as well as if max_slot_wal_keep_size is -1."	13,14
replication_slots	slot_name	name		A unique, cluster-wide identifier for the replication slot	9.4,9.5,9.6,10,11,12,13,14
replication_slots	slot_type	text		The slot type - physical or logical	9.4,9.5,9.6,10,11,12
replication_slots	slot_type	text		The slot type: physical or logical	13,14
replication_slots	temporary	bool		True if this is a temporary replication slot. Temporary slots are not saved to disk and are automatically dropped on error or when the session has finished	13,14
replication_slots	temporary	boolean		True if this is a temporary replication slot. Temporary slots are not saved to disk and are automatically dropped on error or when the session has finished	10,11,12
replication_slots	two_phase	bool		True if the slot is enabled for decoding prepared transactions. Always false for physical slots	14
replication_slots	wal_status	text		Availability of WAL files claimed by this slot. Possible values are: The last two states are seen only when max_slot_wal_keep_size is non-negative. If restart_lsn is NULL, this field is null	13,14
replication_slots	xmin	xid		The oldest transaction that this slot needs the database to retain. VACUUM cannot remove tuples deleted by any later transaction	9.4,9.5,9.6,10,11,12,13,14
rewrite	ev_action	pg_node_tree		Query tree (in the form of a nodeToString() representation) for the rule's action	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
rewrite	ev_action	text		Query tree (in the form of a nodeToString representation) for the rule's action	7.2,7.3
rewrite	ev_action	text		Query tree (in the form of a nodeToString() representation) for the rule's action	7.4,8.0,8.1,8.2,8.3,8.4,9.0
rewrite	ev_attr	int2		The column this rule is for (currently, always -1 to indicate the whole table)	8.4,9.0,9.1,9.2,9.3
rewrite	ev_attr	int2		The column this rule is for (currently, always zero to indicate the whole table)	7.2,7.3,7.4,8.0,8.1,8.2,8.3
rewrite	ev_class	oid	pg_class.oid	The table this rule is for	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
rewrite	ev_class	oid	pg_rewrite.oid	The table this rule is for	13,14
rewrite	ev_enabled	char		"Controls in which session_replication_role modes the rule fires. O = rule fires in \"origin\" and \"local\" modes, D = rule is disabled, R = rule fires in \"replica\" mode, A = rule fires always."	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
rewrite	ev_qual	pg_node_tree		Expression tree (in the form of a nodeToString() representation) for the rule's qualifying condition	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
rewrite	ev_qual	text		Expression tree (in the form of a nodeToString representation) for the rule's qualifying condition	7.2,7.3
rewrite	ev_qual	text		Expression tree (in the form of a nodeToString() representation) for the rule's qualifying condition	7.4,8.0,8.1,8.2,8.3,8.4,9.0
rewrite	ev_type	char		Event type that the rule is for: '1' = SELECT, '2' = UPDATE, '3' = INSERT, '4' = DELETE	7.2,7.3
rewrite	ev_type	char		Event type that the rule is for: 1 = SELECT, 2 = UPDATE, 3 = INSERT, 4 = DELETE	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
rewrite	is_instead	bool		True if the rule is an INSTEAD rule	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
rewrite	oid	oid		Row identifier	12,13,14
rewrite	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
rewrite	rulename	name		Rule name	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
roles	oid	oid	pg_authid.oid	ID of role	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
roles	oid	oid	pg_roles.oid	ID of role	13,14
roles	rolbypassrls	bool		Role bypasses every row level security policy, see Section 5.7 for more information	9.5,9.6,10,11
roles	rolbypassrls	bool		Role bypasses every row level security policy, see Section 5.8 for more information	12,13
roles	rolbypassrls	bool		Role bypasses every row-level security policy, see Section 5.8 for more information	14
roles	rolcanlogin	bool		Role can log in. That is, this role can be given as the initial session authorization identifier	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
roles	rolcanlogin	bool		Role may log in, that is, this role can be given as the initial session authorization identifier	8.1
roles	rolcanlogin	bool		Role may log in. That is, this role can be given as the initial session authorization identifier	8.2
roles	rolcatupdate	bool		Role can update system catalogs directly. (Even a superuser cannot do this unless this column is true)	9.0,9.1,9.2,9.3,9.4
roles	rolcatupdate	bool		Role can update system catalogs directly. (Even a superuser cannot do this unless this column is true.)	8.3,8.4
roles	rolcatupdate	bool		Role may update system catalogs directly. (Even a superuser may not do this unless this column is true.)	8.1,8.2
roles	rolconfig	text[]		Role-specific defaults for run-time configuration variables	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
roles	rolconfig	text[]		Session defaults for run-time configuration variables	8.1,8.2,8.3,8.4
roles	rolconnlimit	int4		For roles that can log in, this sets maximum number of concurrent connections this role can make. -1 means no limit	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
roles	rolcreatedb	bool		Role can create databases	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
roles	rolcreatedb	bool		Role may create databases	8.1,8.2
roles	rolcreaterole	bool		Role can create more roles	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
roles	rolcreaterole	bool		Role may create more roles	8.1,8.2
roles	rolinherit	bool		Role automatically inherits privileges of roles it is a member of	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
roles	rolname	name		Role name	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
roles	rolpassword	text		Not the password (always reads as ********)	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
roles	rolreplication	bool		Role is a replication role. A replication role can initiate replication connections and create and drop replication slots	9.6,10,11,12,13,14
roles	rolreplication	bool		Role is a replication role. That is, this role can initiate streaming replication (see Section 25.2.5) and set/unset the system backup mode using pg_start_backup and pg_stop_backup	9.1,9.2,9.3,9.4,9.5
roles	rolsuper	bool		Role has superuser privileges	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
roles	rolvaliduntil	timestamptz		Password expiry time (only used for password authentication); null if no expiration	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
rules	definition	text		Rule definition (a reconstructed creation command)	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
rules	rulename	name	pg_rewrite.rulename	Name of rule	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
rules	rulename	name	pg_rules.rulename	Name of rule	13,14
rules	schemaname	name	pg_namespace.nspname	Name of schema containing table	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
rules	schemaname	name	pg_rules.nspname	Name of schema containing table	13,14
rules	tablename	name	pg_class.relname	Name of table the rule is for	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
rules	tablename	name	pg_rules.relname	Name of table the rule is for	13,14
seclabel	classoid	oid	pg_class.oid	The OID of the system catalog this object appears in	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
seclabel	classoid	oid	pg_seclabel.oid	The OID of the system catalog this object appears in	13,14
seclabel	label	text		The security label applied to this object	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
seclabel	objoid	oid		The OID of the object this security label pertains to	13,14
seclabel	objoid	oid	any OID column	The OID of the object this security label pertains to	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
seclabel	objsubid	int4		For a security label on a table column, this is the column number (the objoid and classoid refer to the table itself). For all other object types, this column is zero	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
seclabel	provider	text		The label provider associated with this label	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
seclabels	classoid	oid	pg_class.oid	The OID of the system catalog this object appears in	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
seclabels	classoid	oid	pg_seclabels.oid	The OID of the system catalog this object appears in	13,14
seclabels	label	text	pg_seclabel.label	The security label applied to this object	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
seclabels	label	text	pg_seclabels.label	The security label applied to this object	13,14
seclabels	objname	text		The name of the object to which this label applies, as text	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
seclabels	objnamespace	oid	pg_namespace.oid	The OID of the namespace for this object, if applicable; otherwise NULL	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
seclabels	objnamespace	oid	pg_seclabels.oid	The OID of the namespace for this object, if applicable; otherwise NULL	13,14
seclabels	objoid	oid		The OID of the object this security label pertains to	13,14
seclabels	objoid	oid	any OID column	The OID of the object this security label pertains to	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
seclabels	objsubid	int4		For a security label on a table column, this is the column number (the objoid and classoid refer to the table itself). For all other object types, this column is zero	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
seclabels	objtype	text		The type of object to which this label applies, as text	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
seclabels	provider	text	pg_seclabel.provider	The label provider associated with this label	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
seclabels	provider	text	pg_seclabels.provider	The label provider associated with this label	13,14
sequence	seqcache	int8		Cache size of the sequence	10,11,12,13,14
sequence	seqcycle	bool		Whether the sequence cycles	10,11,12,13,14
sequence	seqincrement	int8		Increment value of the sequence	10,11,12,13,14
sequence	seqmax	int8		Maximum value of the sequence	10,11,12,13,14
sequence	seqmin	int8		Minimum value of the sequence	10,11,12,13,14
sequence	seqrelid	oid	pg_class.oid	The OID of the pg_class entry for this sequence	10,11,12
sequence	seqrelid	oid	pg_sequence.oid	The OID of the pg_class entry for this sequence	13,14
sequence	seqstart	int8		Start value of the sequence	10,11,12,13,14
sequence	seqtypid	oid	pg_sequence.oid	Data type of the sequence	13,14
sequence	seqtypid	oid	pg_type.oid	Data type of the sequence	10,11,12
sequences	cache_size	bigint		Cache size of the sequence	10,11,12
sequences	cache_size	int8		Cache size of the sequence	13,14
sequences	cycle	bool		Whether the sequence cycles	13,14
sequences	cycle	boolean		Whether the sequence cycles	10,11,12
sequences	data_type	regtype	pg_sequences.oid	Data type of the sequence	13,14
sequences	data_type	regtype	pg_type.oid	Data type of the sequence	10,11,12
sequences	increment_by	bigint		Increment value of the sequence	10,11,12
sequences	increment_by	int8		Increment value of the sequence	13,14
sequences	last_value	bigint		The last sequence value written to disk. If caching is used, this value can be greater than the last value handed out from the sequence. Null if the sequence has not been read from yet. Also, if the current user does not have USAGE or SELECT privilege on the sequence, the value is null	10,11,12
sequences	last_value	int8		The last sequence value written to disk. If caching is used, this value can be greater than the last value handed out from the sequence. Null if the sequence has not been read from yet. Also, if the current user does not have USAGE or SELECT privilege on the sequence, the value is null	13,14
sequences	max_value	bigint		Maximum value of the sequence	10,11,12
sequences	max_value	int8		Maximum value of the sequence	13,14
sequences	min_value	bigint		Minimum value of the sequence	10,11,12
sequences	min_value	int8		Minimum value of the sequence	13,14
sequences	schemaname	name	pg_namespace.nspname	Name of schema containing sequence	10,11,12
sequences	schemaname	name	pg_sequences.nspname	Name of schema containing sequence	13,14
sequences	sequencename	name	pg_class.relname	Name of sequence	10,11,12
sequences	sequencename	name	pg_sequences.relname	Name of sequence	13,14
sequences	sequenceowner	name	pg_authid.rolname	Name of sequence's owner	10,11,12
sequences	sequenceowner	name	pg_sequences.rolname	Name of sequence's owner	13,14
sequences	start_value	bigint		Start value of the sequence	10,11,12
sequences	start_value	int8		Start value of the sequence	13,14
settings	boot_val	text		Parameter value assumed at server startup if the parameter is not otherwise set	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	category	text		Logical group of the parameter	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	context	text		Context required to set the parameter's value	7.4,8.0,8.1,8.2,8.3,8.4,9.0
settings	context	text		Context required to set the parameter's value (see below)	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	enumvals	text[]		Allowed values of an enum parameter (null for non-enum values)	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	extra_desc	text		Additional, more detailed, description of the parameter	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	extra_desc	text		Additional, more detailed, information about the parameter	8.0,8.1,8.2,8.3
settings	max_val	text		Maximum allowed value of the parameter (null for non-numeric values)	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	max_val	text		maximum allowed value of the parameter (NULL for nonnumeric values)	7.4,8.0,8.1
settings	min_val	text		Minimum allowed value of the parameter (null for non-numeric values)	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	min_val	text		minimum allowed value of the parameter (NULL for nonnumeric values)	7.4,8.0,8.1
settings	name	text		Run-time configuration parameter name	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	pending_restart	bool		true if the value has been changed in the configuration file but needs a restart; or false otherwise	13,14
settings	pending_restart	boolean		true if the value has been changed in the configuration file but needs a restart; or false otherwise	9.5,9.6,10,11,12
settings	reset_val	text		Value that RESET would reset the parameter to in the current session	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	setting	text		Current value of the parameter	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	short_desc	text		A brief description of the parameter	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	source	text		Source of the current parameter value	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	sourcefile	text		Configuration file the current value was set in (NULL for values set from sources other than configuration files, or when examined by a non-superuser). Helpful when using configuration include directives	8.4
settings	sourcefile	text		Configuration file the current value was set in (null for values set from sources other than configuration files, or when examined by a non-superuser); helpful when using include directives in configuration files	9.0,9.1,9.2,9.3,9.4,9.5,9.6
settings	sourcefile	text		Configuration file the current value was set in (null for values set from sources other than configuration files, or when examined by a user who is neither a superuser or a member of pg_read_all_settings); helpful when using include directives in configuration files	10,11,12,13,14
settings	sourceline	int4		Line number within the configuration file the current value was set at (null for values set from sources other than configuration files, or when examined by a user who is neither a superuser or a member of pg_read_all_settings)	13,14
settings	sourceline	integer		Line number within the configuration file the current value was set at (null for values set from sources other than configuration files, or when examined by a non-superuser)	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6
settings	sourceline	integer		Line number within the configuration file the current value was set at (null for values set from sources other than configuration files, or when examined by a user who is neither a superuser or a member of pg_read_all_settings)	10,11,12
settings	unit	text		Implicit unit of the parameter	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	vartype	text		Parameter type (bool, enum, integer, real, or string)	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
settings	vartype	text		Parameter type (bool, integer, real, or string)	7.4,8.0,8.1,8.2,8.3
shadow	passwd	text		Password	7.1,7.2,7.3,7.4
shadow	passwd	text		Password (possibly encrypted)	8.0,8.1,8.2,8.3,8.4
shadow	passwd	text		Password (possibly encrypted); null if none. See pg_authid for details of how encrypted passwords are stored	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
shadow	usebypassrls	bool		User bypasses every row level security policy, see Section 5.7 for more information	9.5,9.6,10,11
shadow	usebypassrls	bool		User bypasses every row level security policy, see Section 5.8 for more information	12,13
shadow	usebypassrls	bool		User bypasses every row-level security policy, see Section 5.8 for more information	14
shadow	usecatupd	bool		User can update system catalogs. (Even a superuser cannot do this unless this column is true.)	8.3,8.4,9.0,9.1,9.2,9.3,9.4
shadow	usecatupd	bool		User may update system catalogs. (Even a superuser may not do this unless this attribute is true.)	7.1,7.2,7.3
shadow	usecatupd	bool		User may update system catalogs. (Even a superuser may not do this unless this column is true.)	7.4,8.0,8.1,8.2
shadow	useconfig	text[]		Session defaults for run-time configuration variables	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
shadow	usecreatedb	bool		User can create databases	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
shadow	usecreatedb	bool		User may create databases	7.1,7.2,7.3,7.4,8.0,8.1,8.2
shadow	usename	name		User name	7.1,7.2,7.3,7.4,8.0
shadow	usename	name	pg_authid.rolname	User name	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
shadow	usename	name	pg_shadow.rolname	User name	13,14
shadow	userepl	bool		User can initiate streaming replication and put the system in and out of backup mode	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
shadow	usesuper	bool		User is a superuser	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
shadow	usesysid	int4		User ID (arbitrary number used to reference this user)	7.1,7.2,7.3,7.4,8.0
shadow	usesysid	oid	pg_authid.oid	ID of this user	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
shadow	usesysid	oid	pg_shadow.oid	ID of this user	13,14
shadow	usetrace	bool		not used	7.1,7.2
shadow	valuntil	abstime		Account expiry time (only used for password authentication)	7.1,7.2,7.3,7.4
shadow	valuntil	abstime		Password expiry time (only used for password authentication)	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
shadow	valuntil	timestamptz		Password expiry time (only used for password authentication)	12,13,14
shdepend	classid	oid	pg_class.oid	The OID of the system catalog the dependent object is in	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
shdepend	classid	oid	pg_shdepend.oid	The OID of the system catalog the dependent object is in	13
shdepend	classid	oid	pg_shdepend.oid	The OID of the system catalog the dependent object is in, or zero for a SHARED_DEPENDENCY_PIN entry	14
shdepend	dbid	oid	pg_database.oid	The OID of the database the dependent object is in, or zero for a shared object	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
shdepend	dbid	oid	pg_shdepend.oid	The OID of the database the dependent object is in, or zero for a shared object	13
shdepend	dbid	oid	pg_shdepend.oid	The OID of the database the dependent object is in, or zero for a shared object or a SHARED_DEPENDENCY_PIN entry	14
shdepend	deptype	char		A code defining the specific semantics of this dependency relationship; see text	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
shdepend	objid	oid		The OID of the specific dependent object	13
shdepend	objid	oid		The OID of the specific dependent object, or zero for a SHARED_DEPENDENCY_PIN entry	14
shdepend	objid	oid	any OID column	The OID of the specific dependent object	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
shdepend	objsubid	int4		For a table column, this is the column number (the objid and classid refer to the table itself). For all other object types, this column is zero	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
shdepend	refclassid	oid	pg_class.oid	The OID of the system catalog the referenced object is in (must be a shared catalog)	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
shdepend	refclassid	oid	pg_shdepend.oid	The OID of the system catalog the referenced object is in (must be a shared catalog)	13,14
shdepend	refobjid	oid		The OID of the specific referenced object	13,14
shdepend	refobjid	oid	any OID column	The OID of the specific referenced object	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
shdescription	classoid	oid	pg_class.oid	The OID of the system catalog this object appears in	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
shdescription	classoid	oid	pg_shdescription.oid	The OID of the system catalog this object appears in	13,14
shdescription	description	text		Arbitrary text that serves as the description of this object	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
shdescription	objoid	oid		The OID of the object this description pertains to	13,14
shdescription	objoid	oid	any OID column	The OID of the object this description pertains to	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
shmem_allocations	allocated_size	int8		Size of the allocation including padding. For anonymous allocations, no information about padding is available, so the size and allocated_size columns will always be equal. Padding is not meaningful for free memory, so the columns will be equal in that case also	13,14
shmem_allocations	name	text		The name of the shared memory allocation. NULL for unused memory and <anonymous> for anonymous allocations	13,14
shmem_allocations	off	int8		The offset at which the allocation starts. NULL for anonymous allocations, since details related to them are not known	13,14
shmem_allocations	size	int8		Size of the allocation	13,14
shseclabel	classoid	oid	pg_class.oid	The OID of the system catalog this object appears in	9.2,9.3,9.4,9.5,9.6,10,11,12
shseclabel	classoid	oid	pg_shseclabel.oid	The OID of the system catalog this object appears in	13,14
shseclabel	label	text		The security label applied to this object	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
shseclabel	objoid	oid		The OID of the object this security label pertains to	13,14
shseclabel	objoid	oid	any OID column	The OID of the object this security label pertains to	9.2,9.3,9.4,9.5,9.6,10,11,12
shseclabel	provider	text		The label provider associated with this label	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
statistic	staattnum	int2	pg_attribute.attnum	The number of the described column	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
statistic	staattnum	int2	pg_statistic.attnum	The number of the described column	13,14
statistic	stacollN	oid	pg_collation.oid	"The collation used to derive the statistics stored in the Nth \"slot\". For example, a histogram slot for a collatable column would show the collation that defines the sort order of the data. Zero for noncollatable data."	12
statistic	stacollN	oid	pg_statistic.oid	"The collation used to derive the statistics stored in the Nth \"slot\". For example, a histogram slot for a collatable column would show the collation that defines the sort order of the data. Zero for noncollatable data."	13,14
statistic	stadistinct	float4		The number of distinct non-NULL data values in the column. A value greater than zero is the actual number of distinct values. A value less than zero is the negative of a fraction of the number of rows in the table (for example, a column in which values appear about twice on the average could be represented by stadistinct = -0.5). A zero value means the number of distinct values is unknown	7.2,7.3
statistic	stadistinct	float4		The number of distinct nonnull data values in the column. A value greater than zero is the actual number of distinct values. A value less than zero is the negative of a fraction of the number of rows in the table (for example, a column in which values appear about twice on the average could be represented by stadistinct = -0.5). A zero value means the number of distinct values is unknown	7.4,8.0,8.1,8.2,8.3,8.4
statistic	stadistinct	float4		The number of distinct nonnull data values in the column. A value greater than zero is the actual number of distinct values. A value less than zero is the negative of a multiplier for the number of rows in the table; for example, a column in which about 80% of the values are nonnull and each nonnull value appears about twice on average could be represented by stadistinct = -0.4. A zero value means the number of distinct values is unknown	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
statistic	stadistinct	float4		The number of distinct nonnull data values in the column. A value greater than zero is the actual number of distinct values. A value less than zero is the negative of a multiplier for the number of rows in the table; for example, a column in which values appear about twice on the average could be represented by stadistinct = -0.5. A zero value means the number of distinct values is unknown	9.0
statistic	stainherit	bool		If true, the stats include inheritance child columns, not just the values in the specified relation	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
statistic	stakindN	int2		"A code number indicating the kind of statistics stored in the Nth \"slot\" of the pg_statistic row"	8.2,8.3,8.4
statistic	stakindN	int2		"A code number indicating the kind of statistics stored in the Nth \"slot\" of the pg_statistic row."	7.2,7.3,7.4,8.0,8.1,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
statistic	stanullfrac	float4		The fraction of the column's entries that are null	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
statistic	stanumbersN	float4[]		"Numerical statistics of the appropriate kind for the Nth \"slot\", or null if the slot kind does not involve numerical values"	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
statistic	stanumbersN	float4[]		"Numerical statistics of the appropriate kind for the Nth \"slot\", or null if the slot kind does not involve numerical values."	7.2,7.3,7.4,8.0,8.1
statistic	staopN	oid	pg_operator.oid	"An operator used to derive the statistics stored in the Nth \"slot\". For example, a histogram slot would show the < operator that defines the sort order of the data"	8.2,8.3,8.4
statistic	staopN	oid	pg_operator.oid	"An operator used to derive the statistics stored in the Nth \"slot\". For example, a histogram slot would show the < operator that defines the sort order of the data."	7.2,7.3,7.4,8.0,8.1,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
statistic	staopN	oid	pg_statistic.oid	"An operator used to derive the statistics stored in the Nth \"slot\". For example, a histogram slot would show the < operator that defines the sort order of the data. Zero if the statistics kind does not require an operator."	14
statistic	staopN	oid	pg_statistic.oid	"An operator used to derive the statistics stored in the Nth \"slot\". For example, a histogram slot would show the < operator that defines the sort order of the data."	13
statistic	starelid	oid	pg_class.oid	The table or index that the described column belongs to	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
statistic	starelid	oid	pg_class.oid	The table that the described column belongs to	7.2,7.3,7.4
statistic	starelid	oid	pg_statistic.oid	The table or index that the described column belongs to	13,14
statistic	stavaluesN	anyarray		"Column data values of the appropriate kind for the Nth \"slot\", or null if the slot kind does not store any data values. Each array's element values are actually of the specific column's data type, or a related type such as an array's element type, so there is no way to define these columns' type more specifically than anyarray."	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
statistic	stavaluesN	anyarray		"Column data values of the appropriate kind for the Nth \"slot\", or NULL if the slot kind does not store any data values. Each array's element values are actually of the specific column's data type, so there is no way to define these columns' type more specifically than anyarray"	8.2,8.3,8.4
statistic	stavaluesN	anyarray		"Column data values of the appropriate kind for the Nth \"slot\", or null if the slot kind does not store any data values. Each array's element values are actually of the specific column's data type, so there is no way to define these columns' type more specifically than anyarray."	7.4,8.0,8.1,9.0,9.1
statistic	stavaluesN	text[]		"Column data values of the appropriate kind for the Nth \"slot\", or NULL if the slot kind does not store any data values. For data-type independence, all column data values are converted to external textual form and stored as TEXT datums."	7.3
statistic	stavaluesN	text[]		"Column data values of the appropriate kind for the Nth \"slot\", or NULL if the slot kind does not store any data values. For datatype independence, all column data values are converted to external textual form and stored as TEXT datums."	7.2
statistic	stawidth	int4		The average stored width, in bytes, of non-NULL entries	7.2,7.3
statistic	stawidth	int4		The average stored width, in bytes, of nonnull entries	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
statistic_ext	oid	oid		Row identifier	13,14
statistic_ext	stxdependencies	pg_dependencies		Functional dependency statistics, serialized as pg_dependencies type	10,11
statistic_ext	stxexprs	pg_node_tree		Expression trees (in nodeToString() representation) for statistics object attributes that are not simple column references. This is a list with one element per expression. Null if all statistics object attributes are simple references	14
statistic_ext	stxkeys	int2vector	pg_attribute.attnum	An array of attribute numbers, indicating which table columns are covered by this statistics object; for example a value of 1 3 would mean that the first and the third table columns are covered	10,11,12
statistic_ext	stxkeys	int2vector	pg_statistic_ext.attnum	An array of attribute numbers, indicating which table columns are covered by this statistics object; for example a value of 1 3 would mean that the first and the third table columns are covered	13,14
statistic_ext	stxkind	char[]		An array containing codes for the enabled statistic kinds; valid values are: d for n-distinct statistics, f for functional dependency statistics	10,11
statistic_ext	stxkind	char[]		An array containing codes for the enabled statistic kinds; valid values are: d for n-distinct statistics, f for functional dependency statistics, and m for most common values (MCV) list statistics	12,13
statistic_ext	stxkind	char[]		An array containing codes for the enabled statistics kinds; valid values are: d for n-distinct statistics, f for functional dependency statistics, m for most common values (MCV) list statistics, and e for expression statistics	14
statistic_ext	stxname	name		Name of the statistics object	10,11,12,13,14
statistic_ext	stxnamespace	oid	pg_namespace.oid	The OID of the namespace that contains this statistics object	10,11,12
statistic_ext	stxnamespace	oid	pg_statistic_ext.oid	The OID of the namespace that contains this statistics object	13,14
statistic_ext	stxndistinct	pg_ndistinct		N-distinct counts, serialized as pg_ndistinct type	10,11
statistic_ext	stxowner	oid	pg_authid.oid	Owner of the statistics object	10,11,12
statistic_ext	stxowner	oid	pg_statistic_ext.oid	Owner of the statistics object	13,14
statistic_ext	stxrelid	oid	pg_class.oid	Table containing the columns described by this object	10,11,12
statistic_ext	stxrelid	oid	pg_statistic_ext.oid	Table containing the columns described by this object	13,14
statistic_ext	stxstattarget	int4		"stxstattarget controls the level of detail of statistics accumulated for this statistics object by ANALYZE. A zero value indicates that no statistics should be collected. A negative value says to use the maximum of the statistics targets of the referenced columns, if set, or the system default statistics target. Positive values of stxstattarget determine the target number of \"most common values\" to collect."	13,14
statistic_ext-data	stxddependencies	pg_dependencies		Functional dependency statistics, serialized as pg_dependencies type	12,13,14
statistic_ext-data	stxdexpr	pg_statistic[]		Per-expression statistics, serialized as an array of pg_statistic type	14
statistic_ext-data	stxdmcv	pg_mcv_list		MCV (most-common values) list statistics, serialized as pg_mcv_list type	12,13,14
statistic_ext-data	stxdndistinct	pg_ndistinct		N-distinct counts, serialized as pg_ndistinct type	12,13,14
statistic_ext-data	stxoid	oid	pg_statistic_ext.oid	Extended statistic object containing the definition for this data	12
statistic_ext-data	stxoid	oid	pg_statistic_ext_data.oid	Extended statistic object containing the definition for this data	13
statistic_ext-data	stxoid	oid	pg_statistic_ext_data.oid	Extended statistics object containing the definition for this data	14
stats	attname	name	pg_attribute.attname	Name of the column described by this row	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
stats	attname	name	pg_stats.attname	Name of column described by this row	14
stats	attname	name	pg_stats.attname	Name of the column described by this row	13
stats	avg_width	int4		Average width in bytes of column's entries	13,14
stats	avg_width	integer		Average width in bytes of column's entries	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
stats	correlation	float4		Statistical correlation between physical row ordering and logical ordering of the column values. This ranges from -1 to +1. When the value is near -1 or +1, an index scan on the column will be estimated to be cheaper than when it is near zero, due to reduction of random access to the disk. (This column is null if the column data type does not have a < operator.)	13,14
stats	correlation	real		Statistical correlation between physical row ordering and logical ordering of the column values. This ranges from -1 to +1. When the value is near -1 or +1, an index scan on the column will be estimated to be cheaper than when it is near zero, due to reduction of random access to the disk. (This column is null if the column data type does not have a < operator.)	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
stats	elem_count_histogram	float4[]		A histogram of the counts of distinct non-null element values within the values of the column, followed by the average number of distinct non-null elements. (Null for scalar types.)	13,14
stats	elem_count_histogram	real[]		A histogram of the counts of distinct non-null element values within the values of the column, followed by the average number of distinct non-null elements. (Null for scalar types.)	9.2,9.3,9.4,9.5,9.6,10,11,12
stats	histogram_bounds	anyarray		A list of values that divide the column's values into groups of approximately equal population. The values in most_common_vals, if present, are omitted from this histogram calculation. (This column is null if the column data type does not have a < operator or if the most_common_vals list accounts for the entire population.)	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
stats	inherited	bool		If true, this row includes inheritance child columns, not just the values in the specified table	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
stats	most_common_elem_freqs	float4[]		A list of the frequencies of the most common element values, i.e., the fraction of rows containing at least one instance of the given value. Two or three additional values follow the per-element frequencies; these are the minimum and maximum of the preceding per-element frequencies, and optionally the frequency of null elements. (Null when most_common_elems is.)	13,14
stats	most_common_elem_freqs	real[]		A list of the frequencies of the most common element values, i.e., the fraction of rows containing at least one instance of the given value. Two or three additional values follow the per-element frequencies; these are the minimum and maximum of the preceding per-element frequencies, and optionally the frequency of null elements. (Null when most_common_elems is.)	9.2,9.3,9.4,9.5,9.6,10,11,12
stats	most_common_elems	anyarray		A list of non-null element values most often appearing within values of the column. (Null for scalar types.)	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
stats	most_common_freqs	float4[]		A list of the frequencies of the most common values, i.e., number of occurrences of each divided by total number of rows. (Null when most_common_vals is.)	13,14
stats	most_common_freqs	real[]		A list of the frequencies of the most common values or elements, i.e., number of occurrences of each divided by total number of rows. (Null when most_common_vals is.) For some data types such as tsvector, it can also store some additional information, making it longer than the most_common_vals array	9.0,9.1
stats	most_common_freqs	real[]		A list of the frequencies of the most common values or elements, i.e., number of occurrences of each divided by total number of rows. (NULL when most_common_vals is.) For some datatypes such as tsvector, it can also store some additional information, making it longer than the most_common_vals array	8.4
stats	most_common_freqs	real[]		A list of the frequencies of the most common values, i.e., number of occurrences of each divided by total number of rows. (Null when most_common_vals is.)	7.4,8.0,8.1,8.2,8.3,9.2,9.3,9.4,9.5,9.6,10,11,12
stats	most_common_vals	anyarray		A list of the most common values in the column. (Null if no values seem to be more common than any others.)	7.4,8.0,8.1,8.2,8.3,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
stats	most_common_vals	anyarray		A list of the most common values in the column. (Null if no values seem to be more common than any others.) For some data types such as tsvector, this is a list of the most common element values rather than values of the type itself	9.0,9.1
stats	most_common_vals	anyarray		A list of the most common values in the column. (NULL if no values seem to be more common than any others.) For some datatypes such as tsvector, this is a list of the most common element values rather than values of the type itself	8.4
stats	n_distinct	float4		If greater than zero, the estimated number of distinct values in the column. If less than zero, the negative of the number of distinct values divided by the number of rows. (The negated form is used when ANALYZE believes that the number of distinct values is likely to increase as the table grows; the positive form is used when the column seems to have a fixed number of possible values.) For example, -1 indicates a unique column in which the number of distinct values is the same as the number of rows	13,14
stats	n_distinct	real		If greater than zero, the estimated number of distinct values in the column. If less than zero, the negative of the number of distinct values divided by the number of rows. (The negated form is used when ANALYZE believes that the number of distinct values is likely to increase as the table grows; the positive form is used when the column seems to have a fixed number of possible values.) For example, -1 indicates a unique column in which the number of distinct values is the same as the number of rows	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
stats	null_frac	float4		Fraction of column entries that are null	13,14
stats	null_frac	real		Fraction of column entries that are null	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
stats	schemaname	name	pg_namespace.nspname	Name of schema containing table	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
stats	schemaname	name	pg_stats.nspname	Name of schema containing table	13,14
stats	tablename	name	pg_class.relname	Name of table	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
stats	tablename	name	pg_stats.relname	Name of table	13,14
stats_ext	attnames	name[]	pg_attribute.attname	Names of the columns the extended statistics is defined on	12
stats_ext	attnames	name[]	pg_stats_ext.attname	Names of the columns included in the extended statistics object	14
stats_ext	attnames	name[]	pg_stats_ext.attname	Names of the columns the extended statistics is defined on	13
stats_ext	dependencies	pg_dependencies		Functional dependency statistics	12,13,14
stats_ext	exprs	text[]		Expressions included in the extended statistics object	14
stats_ext	kinds	char[]		Types of extended statistics enabled for this record	13
stats_ext	kinds	char[]		Types of extended statistics object enabled for this record	14
stats_ext	kinds	text[]		Types of extended statistics enabled for this record	12
stats_ext	most_common_base_freqs	float8[]		A list of the base frequencies of the most common combinations, i.e., product of per-value frequencies. (Null when most_common_vals is.)	13,14
stats_ext	most_common_base_freqs	real[]		A list of the base frequencies of the most common combinations, i.e., product of per-value frequencies. (Null when most_common_vals is.)	12
stats_ext	most_common_freqs	float8[]		A list of the frequencies of the most common combinations, i.e., number of occurrences of each divided by total number of rows. (Null when most_common_vals is.)	13,14
stats_ext	most_common_freqs	real[]		A list of the frequencies of the most common combinations, i.e., number of occurrences of each divided by total number of rows. (Null when most_common_vals is.)	12
stats_ext	most_common_val_nulls	anyarray		A list of NULL flags for the most common combinations of values. (Null when most_common_vals is.)	12
stats_ext	most_common_val_nulls	bool[]		A list of NULL flags for the most common combinations of values. (Null when most_common_vals is.)	13,14
stats_ext	most_common_vals	anyarray		A list of the most common combinations of values in the columns. (Null if no combinations seem to be more common than any others.)	12
stats_ext	most_common_vals	text[]		A list of the most common combinations of values in the columns. (Null if no combinations seem to be more common than any others.)	13,14
stats_ext	n_distinct	pg_ndistinct		N-distinct counts for combinations of column values. If greater than zero, the estimated number of distinct values in the combination. If less than zero, the negative of the number of distinct values divided by the number of rows. (The negated form is used when ANALYZE believes that the number of distinct values is likely to increase as the table grows; the positive form is used when the column seems to have a fixed number of possible values.) For example, -1 indicates a unique combination of columns in which the number of distinct combinations is the same as the number of rows	12,13,14
stats_ext	schemaname	name	pg_namespace.nspname	Name of schema containing table	12
stats_ext	schemaname	name	pg_stats_ext.nspname	Name of schema containing table	13,14
stats_ext	statistics_name	name	pg_statistic_ext.stxname	Name of extended statistics	12
stats_ext	statistics_name	name	pg_stats_ext.stxname	Name of extended statistics	13
stats_ext	statistics_name	name	pg_stats_ext.stxname	Name of extended statistics object	14
stats_ext	statistics_owner	name	pg_stats_ext.rolname	Owner of the extended statistics	13
stats_ext	statistics_owner	name	pg_stats_ext.rolname	Owner of the extended statistics object	14
stats_ext	statistics_owner	oid	pg_authid.oid	Owner of the extended statistics	12
stats_ext	statistics_schemaname	name	pg_namespace.nspname	Name of schema containing extended statistic	12
stats_ext	statistics_schemaname	name	pg_stats_ext.nspname	Name of schema containing extended statistic	13
stats_ext	statistics_schemaname	name	pg_stats_ext.nspname	Name of schema containing extended statistics object	14
stats_ext	tablename	name	pg_class.relname	Name of table	12
stats_ext	tablename	name	pg_stats_ext.relname	Name of table	13,14
stats_ext-exprs	avg_width	int4		Average width in bytes of expression's entries	14
stats_ext-exprs	correlation	float4		Statistical correlation between physical row ordering and logical ordering of the expression values. This ranges from -1 to +1. When the value is near -1 or +1, an index scan on the expression will be estimated to be cheaper than when it is near zero, due to reduction of random access to the disk. (This expression is null if the expression's data type does not have a < operator.)	14
stats_ext-exprs	elem_count_histogram	float4[]		A histogram of the counts of distinct non-null element values within the values of the expression, followed by the average number of distinct non-null elements. (Null for scalar types.)	14
stats_ext-exprs	expr	text		Expression included in the extended statistics object	14
stats_ext-exprs	histogram_bounds	anyarray		A list of values that divide the expression's values into groups of approximately equal population. The values in most_common_vals, if present, are omitted from this histogram calculation. (This expression is null if the expression data type does not have a < operator or if the most_common_vals list accounts for the entire population.)	14
stats_ext-exprs	most_common_elem_freqs	float4[]		A list of the frequencies of the most common element values, i.e., the fraction of rows containing at least one instance of the given value. Two or three additional values follow the per-element frequencies; these are the minimum and maximum of the preceding per-element frequencies, and optionally the frequency of null elements. (Null when most_common_elems is.)	14
stats_ext-exprs	most_common_elems	anyarray		A list of non-null element values most often appearing within values of the expression. (Null for scalar types.)	14
stats_ext-exprs	most_common_freqs	float4[]		A list of the frequencies of the most common values, i.e., number of occurrences of each divided by total number of rows. (Null when most_common_vals is.)	14
stats_ext-exprs	most_common_vals	anyarray		A list of the most common values in the expression. (Null if no values seem to be more common than any others.)	14
stats_ext-exprs	n_distinct	float4		If greater than zero, the estimated number of distinct values in the expression. If less than zero, the negative of the number of distinct values divided by the number of rows. (The negated form is used when ANALYZE believes that the number of distinct values is likely to increase as the table grows; the positive form is used when the expression seems to have a fixed number of possible values.) For example, -1 indicates a unique expression in which the number of distinct values is the same as the number of rows	14
stats_ext-exprs	null_frac	float4		Fraction of expression entries that are null	14
stats_ext-exprs	schemaname	name	pg_stats_ext_exprs.nspname	Name of schema containing table	14
stats_ext-exprs	statistics_name	name	pg_stats_ext_exprs.stxname	Name of extended statistics object	14
stats_ext-exprs	statistics_owner	name	pg_stats_ext_exprs.rolname	Owner of the extended statistics object	14
stats_ext-exprs	statistics_schemaname	name	pg_stats_ext_exprs.nspname	Name of schema containing extended statistics object	14
stats_ext-exprs	tablename	name	pg_stats_ext_exprs.relname	Name of table the statistics object is defined on	14
subscription	oid	oid		Row identifier	12,13,14
subscription	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	10,11
subscription	subbinary	bool		If true, the subscription will request that the publisher send data in binary format	14
subscription	subconninfo	text		Connection string to the upstream database	10,11,12,13,14
subscription	subdbid	oid	pg_database.oid	OID of the database which the subscription resides in	10,11,12
subscription	subdbid	oid	pg_subscription.oid	OID of the database that the subscription resides in	14
subscription	subdbid	oid	pg_subscription.oid	OID of the database which the subscription resides in	13
subscription	subenabled	bool		If true, the subscription is enabled and should be replicating	10,11,12,13,14
subscription	subname	name		Name of the subscription	10,11,12,13,14
subscription	subowner	oid	pg_authid.oid	Owner of the subscription	10,11,12
subscription	subowner	oid	pg_subscription.oid	Owner of the subscription	13,14
subscription	subpublications	text[]		Array of subscribed publication names. These reference publications defined in the upstream database. For more on publications see Section 31.1	14
subscription	subpublications	text[]		Array of subscribed publication names. These reference the publications on the publisher server. For more on publications see Section 30.1	12,13
subscription	subpublications	text[]		Array of subscribed publication names. These reference the publications on the publisher server. For more on publications see Section 31.1	10,11
subscription	subslotname	name		Name of the replication slot in the upstream database (also used for the local replication origin name); null represents NONE	10,11,12,13,14
subscription	substream	bool		If true, the subscription will allow streaming of in-progress transactions	14
subscription	subsynccommit	text		Contains the value of the synchronous_commit setting for the subscription workers	10,11,12,13
subscription	subsynccommit	text		The synchronous_commit setting for the subscription's workers to use	14
subscription_rel	srrelid	oid	pg_class.oid	Reference to relation	10,11,12
subscription_rel	srrelid	oid	pg_subscription_rel.oid	Reference to relation	13,14
subscription_rel	srsubid	oid	pg_subscription.oid	Reference to subscription	10,11,12
subscription_rel	srsubid	oid	pg_subscription_rel.oid	Reference to subscription	13,14
subscription_rel	srsublsn	pg_lsn		Remote LSN of the state change used for synchronization coordination when in s or r states, otherwise null	10,11,12,13,14
subscription_rel	srsubstate	char		State code: i = initialize, d = data is being copied, f = finished table copy, s = synchronized, r = ready (normal replication)	14
subscription_rel	srsubstate	char		State code: i = initialize, d = data is being copied, s = synchronized, r = ready (normal replication)	10,11,12,13
tables	hasindexes	bool	pg_tables.relhasindex	True if table has (or recently had) any indexes	13,14
tables	hasindexes	boolean	pg_class.relhasindex	True if table has (or recently had) any indexes	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
tables	hasrules	bool	pg_tables.relhasrules	True if table has (or once had) rules	13,14
tables	hasrules	boolean	pg_class.relhasrules	True if table has (or once had) rules	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
tables	hasrules	boolean	pg_class.relhasrules	true if table has rules	7.4,8.0,8.1,8.2,8.3
tables	hastriggers	bool	pg_tables.relhastriggers	True if table has (or once had) triggers	13,14
tables	hastriggers	boolean	pg_class.relhastriggers	True if table has (or once had) triggers	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
tables	hastriggers	boolean	pg_class.reltriggers	true if table has triggers	7.4,8.0,8.1,8.2,8.3
tables	rowsecurity	bool	pg_tables.relrowsecurity	True if row security is enabled on the table	13,14
tables	rowsecurity	boolean	pg_class.relrowsecurity	True if row security is enabled on the table	9.5,9.6,10,11,12
tables	schemaname	name	pg_namespace.nspname	Name of schema containing table	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
tables	schemaname	name	pg_tables.nspname	Name of schema containing table	13,14
tables	tablename	name	pg_class.relname	Name of table	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
tables	tablename	name	pg_tables.relname	Name of table	13,14
tables	tableowner	name	pg_authid.rolname	Name of table's owner	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
tables	tableowner	name	pg_shadow.usename	name of table's owner	7.4,8.0
tables	tableowner	name	pg_tables.rolname	Name of table's owner	13,14
tables	tablespace	name	pg_tables.spcname	Name of tablespace containing table (null if default for database)	13,14
tables	tablespace	name	pg_tablespace.spcname	Name of tablespace containing table (null if default for database)	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
tablespace	oid	oid		Row identifier	12,13,14
tablespace	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
tablespace	spcacl	aclitem[]		Access privileges; see GRANT and REVOKE for details	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
tablespace	spcacl	aclitem[]		Access privileges; see Section 5.7 for details	12,13,14
tablespace	spclocation	text		Location (directory path) of the tablespace	8.0,8.1,8.2,8.3,8.4,9.0,9.1
tablespace	spcname	name		Tablespace name	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
tablespace	spcoptions	text[]		"Tablespace-level options, as \"keyword=value\" strings"	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
tablespace	spcowner	int4	pg_shadow.usesysid	Owner of the tablespace, usually the user who created it	8.0
tablespace	spcowner	oid	pg_authid.oid	Owner of the tablespace, usually the user who created it	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
tablespace	spcowner	oid	pg_tablespace.oid	Owner of the tablespace, usually the user who created it	13,14
timezone_abbrevs	abbrev	text		Time zone abbreviation	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
timezone_abbrevs	is_dst	bool		True if this is a daylight-savings abbreviation	13,14
timezone_abbrevs	is_dst	boolean		True if this is a daylight-savings abbreviation	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
timezone_abbrevs	utc_offset	interval		Offset from UTC (positive means east of Greenwich)	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
timezone_names	abbrev	text		Time zone abbreviation	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
timezone_names	is_dst	bool		True if currently observing daylight savings	13,14
timezone_names	is_dst	boolean		True if currently observing daylight savings	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
timezone_names	name	text		Time zone name	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
timezone_names	utc_offset	interval		Offset from UTC (positive means east of Greenwich)	8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
transform	oid	oid		Row identifier	13,14
transform	trffromsql	regproc	pg_proc.oid	The OID of the function to use when converting the data type for input to the procedural language (e.g., function parameters). Zero is stored if this operation is not supported	9.5,9.6,10,11,12
transform	trffromsql	regproc	pg_transform.oid	The OID of the function to use when converting the data type for input to the procedural language (e.g., function parameters). Zero is stored if the default behavior should be used	14
transform	trffromsql	regproc	pg_transform.oid	The OID of the function to use when converting the data type for input to the procedural language (e.g., function parameters). Zero is stored if this operation is not supported	13
transform	trflang	oid	pg_language.oid	OID of the language this transform is for	9.5,9.6,10,11,12
transform	trflang	oid	pg_transform.oid	OID of the language this transform is for	13,14
transform	trftosql	regproc	pg_proc.oid	The OID of the function to use when converting output from the procedural language (e.g., return values) to the data type. Zero is stored if this operation is not supported	9.5,9.6,10,11,12
transform	trftosql	regproc	pg_transform.oid	The OID of the function to use when converting output from the procedural language (e.g., return values) to the data type. Zero is stored if the default behavior should be used	14
transform	trftosql	regproc	pg_transform.oid	The OID of the function to use when converting output from the procedural language (e.g., return values) to the data type. Zero is stored if this operation is not supported	13
transform	trftype	oid	pg_transform.oid	OID of the data type this transform is for	13,14
transform	trftype	oid	pg_type.oid	OID of the data type this transform is for	9.5,9.6,10,11,12
trigger	oid	oid		Row identifier	12,13,14
trigger	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
trigger	tgargs	bytea		Argument strings to pass to trigger, each NULL-terminated	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
trigger	tgattr	int2vector		Currently unused	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4
trigger	tgattr	int2vector	pg_attribute.attnum	Column numbers, if trigger is column-specific; otherwise an empty array	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
trigger	tgattr	int2vector	pg_trigger.attnum	Column numbers, if trigger is column-specific; otherwise an empty array	13,14
trigger	tgconstraint	oid	pg_constraint.oid	The pg_constraint entry associated with the trigger, if any	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
trigger	tgconstraint	oid	pg_constraint.oid	The pg_constraint entry owning the trigger, if any	8.3,8.4
trigger	tgconstraint	oid	pg_trigger.oid	The pg_constraint entry associated with the trigger (zero if trigger is not for a constraint)	14
trigger	tgconstraint	oid	pg_trigger.oid	The pg_constraint entry associated with the trigger, if any	13
trigger	tgconstrindid	oid	pg_class.oid	The index supporting a unique, primary key, or referential integrity constraint	9.0,9.1,9.2,9.3
trigger	tgconstrindid	oid	pg_class.oid	The index supporting a unique, primary key, referential integrity, or exclusion constraint	9.4,9.5,9.6,10,11,12
trigger	tgconstrindid	oid	pg_trigger.oid	The index supporting a unique, primary key, referential integrity, or exclusion constraint	13
trigger	tgconstrindid	oid	pg_trigger.oid	The index supporting a unique, primary key, referential integrity, or exclusion constraint (zero if trigger is not for one of these types of constraint)	14
trigger	tgconstrname	name		Constraint name, if a constraint trigger	8.3,8.4
trigger	tgconstrname	name		Referential integrity constraint name	7.4,8.0,8.1,8.2
trigger	tgconstrname	name		RI constraint name	7.2,7.3
trigger	tgconstrrelid	oid	pg_class.oid	The table referenced by a referential integrity constraint	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
trigger	tgconstrrelid	oid	pg_class.oid	The table referenced by an referential integrity constraint	7.4,8.0,8.1,8.2
trigger	tgconstrrelid	oid	pg_class.oid	The table referenced by an RI constraint	7.2,7.3
trigger	tgconstrrelid	oid	pg_trigger.oid	The table referenced by a referential integrity constraint	13
trigger	tgconstrrelid	oid	pg_trigger.oid	The table referenced by a referential integrity constraint (zero if trigger is not for a referential integrity constraint)	14
trigger	tgdeferrable	bool		True if constraint trigger is deferrable	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
trigger	tgdeferrable	bool		True if deferrable	7.2,7.3,7.4,8.0,8.1,8.2
trigger	tgenabled	bool		True if trigger is enabled	8.1,8.2
trigger	tgenabled	bool		True if trigger is enabled (not presently checked everywhere it should be, so disabling a trigger by setting this false does not work reliably)	7.2,7.3,7.4,8.0
trigger	tgenabled	char		"Controls in which session_replication_role modes the trigger fires. O = trigger fires in \"origin\" and \"local\" modes, D = trigger is disabled, R = trigger fires in \"replica\" mode, A = trigger fires always."	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
trigger	tgfoid	oid	pg_proc.oid	The function to be called	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
trigger	tgfoid	oid	pg_trigger.oid	The function to be called	13,14
trigger	tginitdeferred	bool		True if constraint trigger is initially deferred	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
trigger	tginitdeferred	bool		True if initially deferred	7.2,7.3,7.4,8.0,8.1,8.2
trigger	tgisconstraint	bool		"True if trigger is a \"constraint trigger\""	8.3,8.4
trigger	tgisconstraint	bool		True if trigger implements a referential integrity constraint	7.4,8.0,8.1,8.2
trigger	tgisconstraint	bool		True if trigger implements an RI constraint	7.3
trigger	tgisconstraint	bool		True if trigger is a RI constraint	7.2
trigger	tgisinternal	bool		True if trigger is internally generated (usually, to enforce the constraint identified by tgconstraint)	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
trigger	tgname	name		Trigger name (must be unique among triggers of same table)	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
trigger	tgname	name		Trigger name (need not be unique)	7.2
trigger	tgnargs	int2		Number of argument strings passed to trigger function	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
trigger	tgnewtable	name		REFERENCING clause name for NEW TABLE, or null if none	10,11,12,13,14
trigger	tgoldtable	name		REFERENCING clause name for OLD TABLE, or null if none	10,11,12,13,14
trigger	tgparentid	oid	pg_trigger.oid	Parent trigger that this trigger is cloned from (this happens when partitions are created or attached to a partitioned table); zero if not a clone	14
trigger	tgparentid	oid	pg_trigger.oid	Parent trigger that this trigger is cloned from, zero if not a clone; this happens when partitions are created or attached to a partitioned table	13
trigger	tgqual	pg_node_tree		Expression tree (in nodeToString() representation) for the trigger's WHEN condition, or null if none	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
trigger	tgqual	text		Expression tree (in nodeToString() representation) for the trigger's WHEN condition, or null if none	9.0
trigger	tgrelid	oid	pg_class.oid	The table this trigger is on	7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
trigger	tgrelid	oid	pg_trigger.oid	The table this trigger is on	13,14
trigger	tgtype	int2		Bit mask identifying trigger conditions	7.4,8.0,8.1,8.2,8.3,8.4,9.0
trigger	tgtype	int2		Bit mask identifying trigger firing conditions	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
trigger	tgtype	int2		Bitmask identifying trigger conditions	7.2,7.3
ts_config	cfgname	name		Text search configuration name	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
ts_config	cfgnamespace	oid	pg_namespace.oid	The OID of the namespace that contains this configuration	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_config	cfgnamespace	oid	pg_ts_config.oid	The OID of the namespace that contains this configuration	13,14
ts_config	cfgowner	oid	pg_authid.oid	Owner of the configuration	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_config	cfgowner	oid	pg_ts_config.oid	Owner of the configuration	13,14
ts_config	cfgparser	oid	pg_ts_config.oid	The OID of the text search parser for this configuration	13,14
ts_config	cfgparser	oid	pg_ts_parser.oid	The OID of the text search parser for this configuration	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_config	oid	oid		Row identifier	12,13,14
ts_config	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
ts_config-map	mapcfg	oid	pg_ts_config.oid	The OID of the pg_ts_config entry owning this map entry	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_config-map	mapcfg	oid	pg_ts_config_map.oid	The OID of the pg_ts_config entry owning this map entry	13,14
ts_config-map	mapdict	oid	pg_ts_config_map.oid	The OID of the text search dictionary to consult	13,14
ts_config-map	mapdict	oid	pg_ts_dict.oid	The OID of the text search dictionary to consult	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_config-map	mapseqno	int4		Order in which to consult this entry (lower mapseqnos first)	13,14
ts_config-map	mapseqno	integer		Order in which to consult this entry (lower mapseqnos first)	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_config-map	maptokentype	int4		A token type emitted by the configuration's parser	13,14
ts_config-map	maptokentype	integer		A token type emitted by the configuration's parser	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_dict	dictinitoption	text		Initialization option string for the template	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
ts_dict	dictname	name		Text search dictionary name	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
ts_dict	dictnamespace	oid	pg_namespace.oid	The OID of the namespace that contains this dictionary	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_dict	dictnamespace	oid	pg_ts_dict.oid	The OID of the namespace that contains this dictionary	13,14
ts_dict	dictowner	oid	pg_authid.oid	Owner of the dictionary	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_dict	dictowner	oid	pg_ts_dict.oid	Owner of the dictionary	13,14
ts_dict	dicttemplate	oid	pg_ts_dict.oid	The OID of the text search template for this dictionary	13,14
ts_dict	dicttemplate	oid	pg_ts_template.oid	The OID of the text search template for this dictionary	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_dict	oid	oid		Row identifier	12,13,14
ts_dict	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
ts_parser	oid	oid		Row identifier	12,13,14
ts_parser	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
ts_parser	prsend	regproc	pg_proc.oid	OID of the parser's shutdown function	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_parser	prsend	regproc	pg_ts_parser.oid	OID of the parser's shutdown function	13,14
ts_parser	prsheadline	regproc	pg_proc.oid	OID of the parser's headline function	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_parser	prsheadline	regproc	pg_ts_parser.oid	OID of the parser's headline function	13
ts_parser	prsheadline	regproc	pg_ts_parser.oid	OID of the parser's headline function (zero if none)	14
ts_parser	prslextype	regproc	pg_proc.oid	OID of the parser's lextype function	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_parser	prslextype	regproc	pg_ts_parser.oid	OID of the parser's lextype function	13,14
ts_parser	prsname	name		Text search parser name	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
ts_parser	prsnamespace	oid	pg_namespace.oid	The OID of the namespace that contains this parser	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_parser	prsnamespace	oid	pg_ts_parser.oid	The OID of the namespace that contains this parser	13,14
ts_parser	prsstart	regproc	pg_proc.oid	OID of the parser's startup function	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_parser	prsstart	regproc	pg_ts_parser.oid	OID of the parser's startup function	13,14
ts_parser	prstoken	regproc	pg_proc.oid	OID of the parser's next-token function	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_parser	prstoken	regproc	pg_ts_parser.oid	OID of the parser's next-token function	13,14
ts_template	oid	oid		Row identifier	12,13,14
ts_template	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
ts_template	tmplinit	regproc	pg_proc.oid	OID of the template's initialization function	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_template	tmplinit	regproc	pg_ts_template.oid	OID of the template's initialization function	13
ts_template	tmplinit	regproc	pg_ts_template.oid	OID of the template's initialization function (zero if none)	14
ts_template	tmpllexize	regproc	pg_proc.oid	OID of the template's lexize function	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_template	tmpllexize	regproc	pg_ts_template.oid	OID of the template's lexize function	13,14
ts_template	tmplname	name		Text search template name	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
ts_template	tmplnamespace	oid	pg_namespace.oid	The OID of the namespace that contains this template	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
ts_template	tmplnamespace	oid	pg_ts_template.oid	The OID of the namespace that contains this template	13,14
type	oid	oid		Row identifier	12,13,14
type	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
type	typacl	aclitem[]		Access privileges; see GRANT and REVOKE for details	9.2,9.3,9.4,9.5,9.6,10,11
type	typacl	aclitem[]		Access privileges; see Section 5.7 for details	12,13,14
type	typalign	char		 typalign is the alignment required when storing a value of this type. It applies to storage on disk as well as most representations of the value inside Postgres. When multiple values are stored consecutively, such as in the representation of a complete row on disk, padding is inserted before a datum of this type so that it begins on the specified boundary. The alignment reference is the beginning of the first datum in the sequence. Possible values are: 'c' = CHAR alignment, i.e., no alignment needed. 's' = SHORT alignment (2 bytes on most machines). 'i' = INT alignment (4 bytes on most machines). 'd' = DOUBLE alignment (8 bytes on many machines, but by no means all). Note: For types used in system tables, it is critical that the size and alignment defined in pg_type agree with the way that the compiler will lay out the field in a struct representing a table row. 	7.1
type	typalign	char		 typalign is the alignment required when storing a value of this type. It applies to storage on disk as well as most representations of the value inside PostgreSQL. When multiple values are stored consecutively, such as in the representation of a complete row on disk, padding is inserted before a datum of this type so that it begins on the specified boundary. The alignment reference is the beginning of the first datum in the sequence. Possible values are: 'c' = CHAR alignment, i.e., no alignment needed. 's' = SHORT alignment (2 bytes on most machines). 'i' = INT alignment (4 bytes on most machines). 'd' = DOUBLE alignment (8 bytes on many machines, but by no means all). Note: For types used in system tables, it is critical that the size and alignment defined in pg_type agree with the way that the compiler will lay out the field in a struct representing a table row. 	7.2,7.3
type	typalign	char		 typalign is the alignment required when storing a value of this type. It applies to storage on disk as well as most representations of the value inside PostgreSQL. When multiple values are stored consecutively, such as in the representation of a complete row on disk, padding is inserted before a datum of this type so that it begins on the specified boundary. The alignment reference is the beginning of the first datum in the sequence. Possible values are: c = char alignment, i.e., no alignment needed. s = short alignment (2 bytes on most machines). i = int alignment (4 bytes on most machines). d = double alignment (8 bytes on many machines, but by no means all). Note For types used in system tables, it is critical that the size and alignment defined in pg_type agree with the way that the compiler will lay out the column in a structure representing a table row. 	10,11,12
type	typalign	char		 typalign is the alignment required when storing a value of this type. It applies to storage on disk as well as most representations of the value inside PostgreSQL. When multiple values are stored consecutively, such as in the representation of a complete row on disk, padding is inserted before a datum of this type so that it begins on the specified boundary. The alignment reference is the beginning of the first datum in the sequence. Possible values are: c = char alignment, i.e., no alignment needed. s = short alignment (2 bytes on most machines). i = int alignment (4 bytes on most machines). d = double alignment (8 bytes on many machines, but by no means all). Note: For types used in system tables, it is critical that the size and alignment defined in pg_type agree with the way that the compiler will lay out the column in a structure representing a table row. 	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6
type	typalign	char		typalign is the alignment required when storing a value of this type. It applies to storage on disk as well as most representations of the value inside PostgreSQL. When multiple values are stored consecutively, such as in the representation of a complete row on disk, padding is inserted before a datum of this type so that it begins on the specified boundary. The alignment reference is the beginning of the first datum in the sequence. Possible values are:	13,14
type	typanalyze	regproc	pg_proc.oid	Custom ANALYZE function, or 0 to use the standard function	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typanalyze	regproc	pg_type.oid	Custom ANALYZE function, or 0 to use the standard function	13
type	typanalyze	regproc	pg_type.oid	Custom ANALYZE function, or zero to use the standard function	14
type	typarray	oid	pg_type.oid	"If typarray is not 0 then it identifies another row in pg_type, which is the \"true\" array type having this type as element"	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13
type	typarray	oid	pg_type.oid	"If typarray is not zero then it identifies another row in pg_type, which is the \"true\" array type having this type as element"	14
type	typbasetype	oid	pg_type.oid	 If this is a derived type (see typtype), then typbasetype identifies the type that this one is based on. Zero if not a derived type. 	7.3
type	typbasetype	oid	pg_type.oid	 If this is a domain (see typtype), then typbasetype identifies the type that this one is based on. Zero if not a domain. 	7.4,8.0,8.1
type	typbasetype	oid	pg_type.oid	 If this is a domain (see typtype), then typbasetype identifies the type that this one is based on. Zero if this type is not a domain 	8.2,8.3,8.4
type	typbasetype	oid	pg_type.oid	 If this is a domain (see typtype), then typbasetype identifies the type that this one is based on. Zero if this type is not a domain. 	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typbasetype	oid	pg_type.oid	If this is a domain (see typtype), then typbasetype identifies the type that this one is based on. Zero if this type is not a domain	13,14
type	typbyval	bool		typbyval determines whether internal routines pass a value of this type by value or by reference. Only char, short, and int equivalent items can be passed by value, so if the type is not 1, 2, or 4 bytes long, Postgres does not have the option of passing by value and so typbyval had better be false. Variable-length types are always passed by reference. Note that typbyval can be false even if the length would allow pass-by-value; this is currently true for type float4, for example	7.1
type	typbyval	bool		typbyval determines whether internal routines pass a value of this type by value or by reference. Only char, short, and int equivalent items can be passed by value, so if the type is not 1, 2, or 4 bytes long, PostgreSQL does not have the option of passing by value and so typbyval had better be false. Variable-length types are always passed by reference. Note that typbyval can be false even if the length would allow pass-by-value; this is currently true for type float4, for example	7.2,7.3
type	typbyval	bool		typbyval determines whether internal routines pass a value of this type by value or by reference. typbyval had better be false if typlen is not 1, 2, or 4 (or 8 on machines where Datum is 8 bytes). Variable-length types are always passed by reference. Note that typbyval can be false even if the length would allow pass-by-value	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
type	typbyval	bool		typbyval determines whether internal routines pass a value of this type by value or by reference. typbyval had better be false if typlen is not 1, 2, or 4 (or 8 on machines where Datum is 8 bytes). Variable-length types are always passed by reference. Note that typbyval can be false even if the length would allow pass-by-value; this is currently true for type float4, for example	7.4,8.0,8.1,8.2,8.3
type	typcategory	char		"typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be \"preferred\". See Table 44-43"	8.4
type	typcategory	char		"typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be \"preferred\". See Table 45-45."	9.0
type	typcategory	char		"typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be \"preferred\". See Table 45-49."	9.1
type	typcategory	char		"typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be \"preferred\". See Table 45-51."	9.2
type	typcategory	char		"typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be \"preferred\". See Table 47-52."	9.3
type	typcategory	char		"typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be \"preferred\". See Table 48-53."	9.4
type	typcategory	char		"typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be \"preferred\". See Table 49-55."	9.5
type	typcategory	char		"typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be \"preferred\". See Table 50-56."	9.6
type	typcategory	char		"typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be \"preferred\". See Table 51.63."	10,13
type	typcategory	char		"typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be \"preferred\". See Table 51.64."	12
type	typcategory	char		"typcategory is an arbitrary classification of data types that is used by the parser to determine which implicit casts should be \"preferred\". See Table 52.63."	11,14
type	typcollation	oid	pg_collation.oid	 typcollation specifies the collation of the type. If the type does not support collations, this will be zero. A base type that supports collations will have a nonzero value here, typically DEFAULT_COLLATION_OID. A domain over a collatable type can have a collation OID different from its base type's, if one was specified for the domain. 	12
type	typcollation	oid	pg_collation.oid	 typcollation specifies the collation of the type. If the type does not support collations, this will be zero. A base type that supports collations will have DEFAULT_COLLATION_OID here. A domain over a collatable type can have some other collation OID, if one was specified for the domain. 	9.1,9.2,9.3,9.4,9.5,9.6,10,11
type	typcollation	oid	pg_type.oid	typcollation specifies the collation of the type. If the type does not support collations, this will be zero. A base type that supports collations will have a nonzero value here, typically DEFAULT_COLLATION_OID. A domain over a collatable type can have a collation OID different from its base type's, if one was specified for the domain	13,14
type	typdefault	text		 typdefault is NULL for types without a default value. If it's not NULL, it contains the external string representation of the type's default value. 	7.2
type	typdefault	text		 typdefault is null if the type has no associated default value. If typdefaultbin is not null, typdefault must contain a human-readable version of the default expression represented by typdefaultbin. If typdefaultbin is null and typdefault is not, then typdefault is the external representation of the type's default value, which can be fed to the type's input converter to produce a constant. 	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typdefault	text		 typdefault is null if the type has no associated default value. If typdefaultbin is not null, typdefault must contain a human-readable version of the default expression represented by typdefaultbin. If typdefaultbin is null and typdefault is not, then typdefault is the external representation of the type's default value, which may be fed to the type's input converter to produce a constant 	8.2
type	typdefault	text		 typdefault is null if the type has no associated default value. If typdefaultbin is not null, typdefault must contain a human-readable version of the default expression represented by typdefaultbin. If typdefaultbin is null and typdefault is not, then typdefault is the external representation of the type's default value, which may be fed to the type's input converter to produce a constant. 	7.3,7.4,8.0,8.1
type	typdefault	text		 typdefault is null if the type has no associated default value. If typdefaultbin is not null, typdefault must contain a human-readable version of the default expression represented by typdefaultbin. If typdefaultbin is null and typdefault is not, then typdefault is the external representation of the type's default value, which might be fed to the type's input converter to produce a constant 	8.3,8.4
type	typdefault	text		 typdefault is null if the type has no associated default value. If typdefaultbin is not null, typdefault must contain a human-readable version of the default expression represented by typdefaultbin. If typdefaultbin is null and typdefault is not, then typdefault is the external representation of the type's default value, which might be fed to the type's input converter to produce a constant. 	9.0
type	typdefault	text		???	7.1
type	typdefault	text		typdefault is null if the type has no associated default value. If typdefaultbin is not null, typdefault must contain a human-readable version of the default expression represented by typdefaultbin. If typdefaultbin is null and typdefault is not, then typdefault is the external representation of the type's default value, which can be fed to the type's input converter to produce a constant	13,14
type	typdefaultbin	pg_node_tree		 If typdefaultbin is not null, it is the nodeToString() representation of a default expression for the type. This is only used for domains. 	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typdefaultbin	pg_node_tree		If typdefaultbin is not null, it is the nodeToString() representation of a default expression for the type. This is only used for domains	13,14
type	typdefaultbin	text		 If typdefaultbin is not NULL, it is the nodeToString representation of a default expression for the type. Currently this is only used for domains. 	7.3
type	typdefaultbin	text		 If typdefaultbin is not null, it is the nodeToString() representation of a default expression for the type. This is only used for domains 	8.2,8.3,8.4
type	typdefaultbin	text		 If typdefaultbin is not null, it is the nodeToString() representation of a default expression for the type. This is only used for domains. 	7.4,8.0,8.1,9.0
type	typdelim	char		Character that separates two values of this type when parsing array input	7.1
type	typdelim	char		Character that separates two values of this type when parsing array input. Note that the delimiter is associated with the array element data type, not the array data type	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
type	typdelim	char		Character that separates two values of this type when parsing array input. Note that the delimiter is associated with the array element datatype, not the array datatype	7.2
type	typelem	oid	pg_type.oid	"If typelem is not 0 then it identifies another row in pg_type. The current type can then be subscripted like an array yielding values of type typelem. A \"true\" array type is variable length (typlen = -1), but some fixed-length (typlen > 0) types also have nonzero typelem, for example name and oidvector. If a fixed-length type has a typelem then its internal representation must be N values of the typelem data type with no other data. Variable-length array types have a header defined by the array subroutines."	7.3
type	typelem	oid	pg_type.oid	"If typelem is not 0 then it identifies another row in pg_type. The current type can then be subscripted like an array yielding values of type typelem. A \"true\" array type is variable length (typlen = -1), but some fixed-length (typlen > 0) types also have nonzero typelem, for example name and oidvector. If a fixed-length type has a typelem then its internal representation must be N values of the typelem datatype with no other data. Variable-length array types have a header defined by the array subroutines."	7.2
type	typelem	oid	pg_type.oid	"If typelem is not 0 then it identifies another row in pg_type. The current type can then be subscripted like an array yielding values of type typelem. A \"true\" array type is variable length (typlen = -1), but some fixed-length (typlen > 0) types also have nonzero typelem, for example name and oidvector. If a fixed-length type has a typelem then its internal representation must be some number of values of the typelem data type with no other data. Variable-length array types have a header defined by the array subroutines."	7.4,8.0
type	typelem	oid	pg_type.oid	"If typelem is not 0 then it identifies another row in pg_type. The current type can then be subscripted like an array yielding values of type typelem. A \"true\" array type is variable length (typlen = -1), but some fixed-length (typlen > 0) types also have nonzero typelem, for example name and point. If a fixed-length type has a typelem then its internal representation must be some number of values of the typelem data type with no other data. Variable-length array types have a header defined by the array subroutines"	8.2,8.3,8.4
type	typelem	oid	pg_type.oid	"If typelem is not 0 then it identifies another row in pg_type. The current type can then be subscripted like an array yielding values of type typelem. A \"true\" array type is variable length (typlen = -1), but some fixed-length (typlen > 0) types also have nonzero typelem, for example name and point. If a fixed-length type has a typelem then its internal representation must be some number of values of the typelem data type with no other data. Variable-length array types have a header defined by the array subroutines."	8.1,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13
type	typelem	oid	pg_type.oid	"If typelem is not 0 then it identifies another row in pg_type. The current type can then be subscripted like an array yielding values of type typelem. A non-zero typelem does not guarantee this type to be a \"real\" array type; some ordinary fixed-length types can also be subscripted (e.g., oidvector). Variable-length types can not be turned into pseudo-arrays like that. Hence, the way to determine whether a type is a \"true\" array type is typelem != 0 and typlen < 0."	7.1
type	typelem	oid	pg_type.oid	If typelem is not zero then it identifies another row in pg_type, defining the type yielded by subscripting. This should be zero if typsubscript is zero. However, it can be zero when typsubscript isn't zero, if the handler doesn't need typelem to determine the subscripting result type. Note that a typelem dependency is considered to imply physical containment of the element type in this type; so DDL changes on the element type might be restricted by the presence of this type	14
type	typinput	regproc		Input function	7.1,7.2
type	typinput	regproc	pg_proc.oid	Input conversion function	7.3
type	typinput	regproc	pg_proc.oid	Input conversion function (text format)	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typinput	regproc	pg_type.oid	Input conversion function (text format)	13,14
type	typisdefined	bool		???	7.1
type	typisdefined	bool		True if the type is defined, false if this is a placeholder entry for a not-yet-defined type. When typisdefined is false, nothing except the type name and OID can be relied on	7.2
type	typisdefined	bool		True if the type is defined, false if this is a placeholder entry for a not-yet-defined type. When typisdefined is false, nothing except the type name, namespace, and OID can be relied on	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
type	typispreferred	bool		True if the type is a preferred cast target within its typcategory	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
type	typlen	int2		"For a fixed-size type, typlen is the number of bytes in the internal representation of the type. But for a variable-length type, typlen is negative. -1 indicates a \"varlena\" type (one that has a length word), -2 indicates a null-terminated C string."	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
type	typlen	int2		Length of the storage representation of the type, -1 if variable length	7.1,7.2
type	typmodin	regproc	pg_proc.oid	Type modifier input function, or 0 if type does not support modifiers	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typmodin	regproc	pg_type.oid	Type modifier input function, or 0 if type does not support modifiers	13
type	typmodin	regproc	pg_type.oid	Type modifier input function, or zero if type does not support modifiers	14
type	typmodout	regproc	pg_proc.oid	Type modifier output function, or 0 to use the standard format	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typmodout	regproc	pg_type.oid	Type modifier output function, or 0 to use the standard format	13
type	typmodout	regproc	pg_type.oid	Type modifier output function, or zero to use the standard format	14
type	typname	name		Data type name	7.1,7.2,7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
type	typnamespace	oid	pg_namespace.oid	The OID of the namespace that contains this type	7.3,7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typnamespace	oid	pg_type.oid	The OID of the namespace that contains this type	13,14
type	typndims	int4		 typndims is the number of array dimensions for a domain over an array (that is, typbasetype is an array type). Zero for types other than domains over array types. 	9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typndims	int4		 typndims is the number of array dimensions for a domain that is an array (that is, typbasetype is an array type; the domain's typelem will match the base type's typelem). Zero for non-domains and non-array domains. 	7.3
type	typndims	int4		 typndims is the number of array dimensions for a domain that is an array (that is, typbasetype is an array type; the domain's typelem will match the base type's typelem). Zero for types other than array domains 	8.2
type	typndims	int4		 typndims is the number of array dimensions for a domain that is an array (that is, typbasetype is an array type; the domain's typelem will match the base type's typelem). Zero for types other than array domains. 	7.4,8.0,8.1
type	typndims	int4		 typndims is the number of array dimensions for a domain that is an array (that is, typbasetype is an array type; the domain's typelem will match the base type's typelem). Zero for types other than domains over array types 	8.3,8.4
type	typndims	int4		 typndims is the number of array dimensions for a domain that is an array (that is, typbasetype is an array type; the domain's typelem will match the base type's typelem). Zero for types other than domains over array types. 	9.0
type	typndims	int4		typndims is the number of array dimensions for a domain over an array (that is, typbasetype is an array type). Zero for types other than domains over array types	13,14
type	typnotnull	bool		 typnotnull represents a NOT NULL constraint on a type. Presently used for domains only. 	7.3
type	typnotnull	bool		 typnotnull represents a not-null constraint on a type. Used for domains only 	8.2,8.3,8.4
type	typnotnull	bool		 typnotnull represents a not-null constraint on a type. Used for domains only. 	7.4,8.0,8.1,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typnotnull	bool		typnotnull represents a not-null constraint on a type. Used for domains only	13,14
type	typoutput	regproc		Output function	7.1,7.2
type	typoutput	regproc	pg_proc.oid	Output conversion function	7.3
type	typoutput	regproc	pg_proc.oid	Output conversion function (text format)	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typoutput	regproc	pg_type.oid	Output conversion function (text format)	13,14
type	typowner	int4	pg_shadow.usesysid	Owner (creator) of the type	7.1,7.2,7.3
type	typowner	int4	pg_shadow.usesysid	Owner of the type	7.4,8.0
type	typowner	oid	pg_authid.oid	Owner of the type	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typowner	oid	pg_type.oid	Owner of the type	13,14
type	typprtlen	int2		unused	7.1,7.2
type	typreceive	regproc		unused	7.1,7.2
type	typreceive	regproc	pg_proc.oid	Input conversion function (binary format), or 0 if none	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typreceive	regproc	pg_type.oid	Input conversion function (binary format), or 0 if none	13
type	typreceive	regproc	pg_type.oid	Input conversion function (binary format), or zero if none	14
type	typrelid	oid	pg_class.oid	If this is a catalog type (see typtype), then this field points to the pg_class entry that defines the corresponding table. A table could theoretically be used as a composite data type, but this is not fully functional	7.1
type	typrelid	oid	pg_class.oid	If this is a complex type (see typtype), then this field points to the pg_class entry that defines the corresponding table. (For a free-standing composite type, the pg_class entry doesn't really represent a table, but it is needed anyway for the type's pg_attribute entries to link to.) Zero for non-complex types	7.3
type	typrelid	oid	pg_class.oid	If this is a complex type (see typtype), then this field points to the pg_class entry that defines the corresponding table. A table could theoretically be used as a composite data type, but this is not fully functional	7.2
type	typrelid	oid	pg_class.oid	If this is a composite type (see typtype), then this column points to the pg_class entry that defines the corresponding table. (For a free-standing composite type, the pg_class entry doesn't really represent a table, but it is needed anyway for the type's pg_attribute entries to link to.) Zero for base types	7.4
type	typrelid	oid	pg_class.oid	If this is a composite type (see typtype), then this column points to the pg_class entry that defines the corresponding table. (For a free-standing composite type, the pg_class entry doesn't really represent a table, but it is needed anyway for the type's pg_attribute entries to link to.) Zero for non-composite types	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typrelid	oid	pg_type.oid	If this is a composite type (see typtype), then this column points to the pg_class entry that defines the corresponding table. (For a free-standing composite type, the pg_class entry doesn't really represent a table, but it is needed anyway for the type's pg_attribute entries to link to.) Zero for non-composite types	13,14
type	typsend	regproc		unused	7.1,7.2
type	typsend	regproc	pg_proc.oid	Output conversion function (binary format), or 0 if none	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typsend	regproc	pg_type.oid	Output conversion function (binary format), or 0 if none	13
type	typsend	regproc	pg_type.oid	Output conversion function (binary format), or zero if none	14
type	typstorage	char		" typstorage tells for variable-length types (those with typlen = -1) if the type is prepared for toasting and what the default strategy for attributes of this type should be. Possible values are 'p': Value must always be stored plain. 'e': Value can be stored in a \"secondary\" relation (if relation has one, see pg_class.reltoastrelid). 'm': Value can be stored compressed inline. 'x': Value can be stored compressed inline or in \"secondary\". Note that 'm' fields can also be moved out to secondary storage, but only as a last resort ('e' and 'x' fields are moved first). "	7.1,7.2
type	typstorage	char		" typstorage tells for varlena types (those with typlen = -1) if the type is prepared for toasting and what the default strategy for attributes of this type should be. Possible values are 'p': Value must always be stored plain. 'e': Value can be stored in a \"secondary\" relation (if relation has one, see pg_class.reltoastrelid). 'm': Value can be stored compressed inline. 'x': Value can be stored compressed inline or in \"secondary\". Note that 'm' fields can also be moved out to secondary storage, but only as a last resort ('e' and 'x' fields are moved first). "	7.3
type	typstorage	char		" typstorage tells for varlena types (those with typlen = -1) if the type is prepared for toasting and what the default strategy for attributes of this type should be. Possible values are p: Value must always be stored plain. e: Value can be stored in a \"secondary\" relation (if relation has one, see pg_class.reltoastrelid). m: Value can be stored compressed inline. x: Value can be stored compressed inline or stored in \"secondary\" storage. Note that m columns can also be moved out to secondary storage, but only as a last resort (e and x columns are moved first). "	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typstorage	char		typstorage tells for varlena types (those with typlen = -1) if the type is prepared for toasting and what the default strategy for attributes of this type should be. Possible values are: x is the usual choice for toast-able types. Note that m values can also be moved out to secondary storage, but only as a last resort (e and x values are moved first)	13,14
type	typsubscript	regproc	pg_type.oid	"Subscripting handler function's OID, or zero if this type doesn't support subscripting. Types that are \"true\" array types have typsubscript = array_subscript_handler, but other types may have other handler functions to implement specialized subscripting behavior."	14
type	typtype	char		typtype is b for a base type and c for a complex type (i.e., a table's row type). If typtype is c, typrelid is the OID of the type's entry in pg_class	7.2
type	typtype	char		typtype is b for a base type, c for a complex type (i.e., a table's row type), d for a derived type (i.e., a domain), or p for a pseudo-type. See also typrelid and typbasetype	7.3
type	typtype	char		typtype is b for a base type, c for a composite type (e.g., a table's row type), d for a domain, e for an enum type, or p for a pseudo-type. See also typrelid and typbasetype	8.3,8.4,9.0,9.1
type	typtype	char		typtype is b for a base type, c for a composite type (e.g., a table's row type), d for a domain, e for an enum type, p for a pseudo-type, or r for a range type. See also typrelid and typbasetype	9.2,9.3,9.4,9.5,9.6,10,11,12,13
type	typtype	char		typtype is b for a base type, c for a composite type (e.g., a table's row type), d for a domain, e for an enum type, p for a pseudo-type, r for a range type, or m for a multirange type. See also typrelid and typbasetype	14
type	typtype	char		typtype is b for a base type, c for a composite type (e.g., a table's row type), d for a domain, or p for a pseudo-type. See also typrelid and typbasetype	8.0,8.1,8.2
type	typtype	char		typtype is b for a base type, c for a composite type (i.e., a table's row type), d for a domain, or p for a pseudo-type. See also typrelid and typbasetype	7.4
type	typtype	char		typtype is b for a basic type and c for a catalog type (i.e., a table). If typtype is c, typrelid is the OID of the type's entry in pg_class	7.1
type	typtypmod	int4		 Domains use typtypmod to record the typmod to be applied to their base type (-1 if base type does not use a typmod). -1 if this type is not a domain 	8.2,8.3,8.4
type	typtypmod	int4		 Domains use typtypmod to record the typmod to be applied to their base type (-1 if base type does not use a typmod). -1 if this type is not a domain. 	7.3,7.4,8.0,8.1,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
type	typtypmod	int4		Domains use typtypmod to record the typmod to be applied to their base type (-1 if base type does not use a typmod). -1 if this type is not a domain	13,14
user	passwd	text		Not the password (always reads as ********)	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
user	usebypassrls	bool		User bypasses every row level security policy, see Section 5.7 for more information	9.5,9.6,10,11
user	usebypassrls	bool		User bypasses every row level security policy, see Section 5.8 for more information	12,13
user	usebypassrls	bool		User bypasses every row-level security policy, see Section 5.8 for more information	14
user	usecatupd	bool		User can update system catalogs. (Even a superuser cannot do this unless this column is true.)	8.3,8.4,9.0,9.1,9.2,9.3,9.4
user	usecatupd	bool		User may update system catalogs. (Even a superuser may not do this unless this column is true.)	7.4,8.0,8.1,8.2
user	useconfig	text[]		Session defaults for run-time configuration variables	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
user	usecreatedb	bool		User can create databases	8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
user	usecreatedb	bool		User may create databases	7.4,8.0,8.1,8.2
user	usename	name		User name	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
user	userepl	bool		User can initiate streaming replication and put the system in and out of backup mode	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
user	usesuper	bool		User is a superuser	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
user	usesysid	int4		User ID (arbitrary number used to reference this user)	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1
user	usesysid	oid		ID of this user	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
user	valuntil	abstime		Account expiry time (only used for password authentication)	7.4
user	valuntil	abstime		Password expiry time (only used for password authentication)	8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11
user	valuntil	timestamptz		Password expiry time (only used for password authentication)	12,13,14
user_mapping	oid	oid		Row identifier	12,13,14
user_mapping	oid	oid		Row identifier (hidden attribute; must be explicitly selected)	9.3,9.4,9.5,9.6,10,11
user_mapping	umoptions	text[]		"User mapping specific options, as \"keyword=value\" strings"	9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
user_mapping	umoptions	text[]		"User mapping specific options, as \"keyword=value\" strings."	8.4
user_mapping	umserver	oid	pg_foreign_server.oid	The OID of the foreign server that contains this mapping	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
user_mapping	umserver	oid	pg_user_mapping.oid	The OID of the foreign server that contains this mapping	13,14
user_mapping	umuser	oid	pg_authid.oid	OID of the local role being mapped, 0 if the user mapping is public	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
user_mapping	umuser	oid	pg_user_mapping.oid	OID of the local role being mapped, 0 if the user mapping is public	13
user_mapping	umuser	oid	pg_user_mapping.oid	OID of the local role being mapped, or zero if the user mapping is public	14
user_mappings	srvid	oid	pg_foreign_server.oid	The OID of the foreign server that contains this mapping	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
user_mappings	srvid	oid	pg_user_mappings.oid	The OID of the foreign server that contains this mapping	13,14
user_mappings	srvname	name	pg_foreign_server.srvname	Name of the foreign server	9.2,9.3,9.4,9.5,9.6,10,11,12
user_mappings	srvname	name	pg_user_mappings.srvname	Name of the foreign server	13,14
user_mappings	srvname	text		Name of the foreign server	8.4,9.0,9.1
user_mappings	umid	oid	pg_user_mapping.oid	OID of the user mapping	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
user_mappings	umid	oid	pg_user_mappings.oid	OID of the user mapping	13,14
user_mappings	umoptions	text[]		"User mapping specific options, as \"keyword=value\" strings"	9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
user_mappings	umoptions	text[]		"User mapping specific options, as \"keyword=value\" strings, if the current user is the owner of the foreign server, else null"	9.0,9.1
user_mappings	umoptions	text[]		"User mapping specific options, as \"keyword=value\" strings, if the current user is the owner of the foreign server, else null."	8.4
user_mappings	umuser	oid	pg_authid.oid	OID of the local role being mapped, 0 if the user mapping is public	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
user_mappings	umuser	oid	pg_user_mappings.oid	OID of the local role being mapped, 0 if the user mapping is public	13
user_mappings	umuser	oid	pg_user_mappings.oid	OID of the local role being mapped, or zero if the user mapping is public	14
user_mappings	usename	name		Name of the local user to be mapped	8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
views	definition	text		View definition (a reconstructed SELECT query)	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12,13,14
views	schemaname	name	pg_namespace.nspname	Name of schema containing view	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
views	schemaname	name	pg_views.nspname	Name of schema containing view	13,14
views	viewname	name	pg_class.relname	Name of view	7.4,8.0,8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
views	viewname	name	pg_views.relname	Name of view	13,14
views	viewowner	name	pg_authid.rolname	Name of view's owner	8.1,8.2,8.3,8.4,9.0,9.1,9.2,9.3,9.4,9.5,9.6,10,11,12
views	viewowner	name	pg_shadow.usename	name of view's owner	7.4,8.0
views	viewowner	name	pg_views.rolname	Name of view's owner	13,14