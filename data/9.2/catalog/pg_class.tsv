Index	Name	Type	Nullable	References	Description
1	relname	name			"name of the table, index, view, etc."
2	relnamespace	oid		pg_namespace.oid	"the oid of the namespace that contains this relation"
3	reltype	oid		pg_type.oid	"the oid of the data type that corresponds to this table's row type, if any (zero for indexes, which have no pg_type entry)"
4	reloftype	oid		pg_type.oid	"for typed tables, the oid of the underlying composite type, zero for all other relations"
5	relowner	oid		pg_authid.oid	"owner of the relation"
6	relam	oid		pg_am.oid	"if this is an index, the access method used (b-tree, hash, etc.)"
7	relfilenode	oid			"name of the on-disk file of this relation; zero means this is a ""mapped"" relation whose disk file name is determined by low-level state"
8	reltablespace	oid		pg_tablespace.oid	"the tablespace in which this relation is stored. if zero, the database's default tablespace is implied. (not meaningful if the relation has no on-disk file.)"
9	relpages	int4			"size of the on-disk representation of this table in pages (of size blcksz). this is only an estimate used by the planner. it is updated by vacuum, analyze, and a few ddl commands such as create index."
10	reltuples	float4			"number of rows in the table. this is only an estimate used by the planner. it is updated by vacuum, analyze, and a few ddl commands such as create index."
11	relallvisible	int4			"number of pages that are marked all-visible in the table's visibility map. this is only an estimate used by the planner. it is updated by vacuum, analyze, and a few ddl commands such as create index."
12	reltoastrelid	oid		pg_class.oid	"oid of the toast table associated with this table, 0 if none. the toast table stores large attributes ""out of line"" in a secondary table."
13	reltoastidxid	oid		pg_class.oid	"for a toast table, the oid of its index. 0 if not a toast table."
14	relhasindex	bool			"true if this is a table and it has (or recently had) any indexes"
15	relisshared	bool			"true if this table is shared across all databases in the cluster. only certain system catalogs (such as pg_database) are shared."
16	relpersistence	char			"p = permanent table, u = unlogged table, t = temporary table"
17	relkind	char			"r = ordinary table, i = index, s = sequence, v = view, c = composite type, t = toast table, f = foreign table"
18	relnatts	int2			"number of user columns in the relation (system columns not counted). there must be this many corresponding entries in pg_attribute. see also pg_attribute.attnum."
19	relchecks	int2			"number of check constraints on the table; see pg_constraint catalog"
20	relhasoids	bool			"true if we generate an oid for each row of the relation"
21	relhaspkey	bool			"true if the table has (or once had) a primary key"
22	relhasrules	bool			"true if table has (or once had) rules; see pg_rewrite catalog"
23	relhastriggers	bool			"true if table has (or once had) triggers; see pg_trigger catalog"
24	relhassubclass	bool			"true if table has (or once had) any inheritance children"
25	relfrozenxid	xid			"all transaction ids before this one have been replaced with a permanent (""frozen"") transaction id in this table. this is used to track whether the table needs to be vacuumed in order to prevent transaction id wraparound or to allow pg_clog to be shrunk. zero (invalidtransactionid) if the relation is not a table."
26	relacl	aclitem[]			"access privileges; see grant and revoke for details"
27	reloptions	text[]			"access-method-specific options, as ""keyword=value"" strings"
