Name	Type	References	Description
relname	name	 	Name of the table, index, view, etc.
relnamespace	oid	pg_namespace.oid	The OID of the namespace that contains this\n relation
reltype	oid	pg_type.oid	The OID of the data type that corresponds to this\n table's row type, if any (zero for indexes, which have no pg_type entry)
reloftype	oid	pg_type.oid	For typed tables, the OID of the underlying composite\n type, zero for all other relations
relowner	oid	pg_authid.oid	Owner of the relation
relam	oid	pg_am.oid	If this is an index, the access method used (B-tree,\n hash, etc.)
relfilenode	oid	 	Name of the on-disk file of this relation; zero means\n this is a "mapped" relation whose disk file name is determined by low-level state
reltablespace	oid	pg_tablespace.oid	The tablespace in which this relation is stored. If\n zero, the database's default tablespace is implied. (Not meaningful if the relation has no on-disk file.)
relpages	int4	 	Size of the on-disk representation of this table in\n pages (of size BLCKSZ). This is only an estimate used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX.
reltuples	float4	 	Number of rows in the table. This is only an estimate\n used by the planner. It is updated by VACUUM, ANALYZE, and a few DDL commands such as CREATE INDEX.
reltoastrelid	oid	pg_class.oid	OID of the TOAST table associated with this table, 0\n if none. The TOAST table stores large attributes "out of line" in a secondary table.
reltoastidxid	oid	pg_class.oid	For a TOAST table, the OID of its index. 0 if not a\n TOAST table.
relhasindex	bool	 	True if this is a table and it has (or recently had)\n any indexes
relisshared	bool	 	True if this table is shared across all databases in\n the cluster. Only certain system catalogs (such as pg_database) are shared.
relistemp	bool	 	True if this table is a temporary relation. If so,\n only the creating session can safely access its contents.
relkind	char	 	r = ordinary table,\n i = index, S = sequence, v = view, c = composite type, t = TOAST table
relnatts	int2	 	Number of user columns in the relation (system\n columns not counted). There must be this many corresponding entries in pg_attribute. See also pg_attribute.attnum.
relchecks	int2	 	Number of CHECK constraints\n on the table; see pg_constraint catalog
relhasoids	bool	 	True if we generate an OID for each row of the\n relation
relhaspkey	bool	 	True if the table has (or once had) a primary\n key
relhasexclusion	bool	 	For a table, true if the table has (or once had) any\n exclusion constraints; for an index, true if the index supports an exclusion constraint
relhasrules	bool	 	True if table has (or once had) rules; see pg_rewrite catalog
relhastriggers	bool	 	True if table has (or once had) triggers; see\n pg_trigger catalog
relhassubclass	bool	 	True if table has (or once had) any inheritance\n children
relfrozenxid	xid	 	All transaction IDs before this one have been\n replaced with a permanent ("frozen") transaction ID in this table. This is used to track whether the table needs to be vacuumed in order to prevent transaction ID wraparound or to allow pg_clog to be shrunk. Zero (InvalidTransactionId) if the relation is not a table.
relacl	aclitem[]	 	Access privileges; see GRANT and REVOKE for details
reloptions	text[]	 	Access-method-specific options, as "keyword=value" strings