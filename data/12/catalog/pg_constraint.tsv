Index	Name	Type	Nullable	References	Description
0	oid	oid			"row identifier"
1	conname	name			"constraint name (not necessarily unique!)"
2	connamespace	oid		pg_namespace.oid	"the oid of the namespace that contains this constraint"
3	contype	char			"c = check constraint, f = foreign key constraint, p = primary key constraint, u = unique constraint, t = constraint trigger, x = exclusion constraint"
4	condeferrable	bool			"is the constraint deferrable?"
5	condeferred	bool			"is the constraint deferred by default?"
6	convalidated	bool			"has the constraint been validated? currently, can only be false for foreign keys and check constraints"
7	conrelid	oid		pg_class.oid	"the table this constraint is on; 0 if not a table constraint"
8	contypid	oid		pg_type.oid	"the domain this constraint is on; 0 if not a domain constraint"
9	conindid	oid		pg_class.oid	"the index supporting this constraint, if it's a unique, primary key, foreign key, or exclusion constraint; else 0"
10	conparentid	oid		pg_constraint.oid	"the corresponding constraint in the parent partitioned table, if this is a constraint in a partition; else 0"
11	confrelid	oid		pg_class.oid	"if a foreign key, the referenced table; else 0"
12	confupdtype	char			"foreign key update action code: a = no action, r = restrict, c = cascade, n = set null, d = set default"
13	confdeltype	char			"foreign key deletion action code: a = no action, r = restrict, c = cascade, n = set null, d = set default"
14	confmatchtype	char			"foreign key match type: f = full, p = partial, s = simple"
15	conislocal	bool			"this constraint is defined locally for the relation. note that a constraint can be locally defined and inherited simultaneously."
16	coninhcount	int4			"the number of direct inheritance ancestors this constraint has. a constraint with a nonzero number of ancestors cannot be dropped nor renamed."
17	connoinherit	bool			"this constraint is defined locally for the relation. it is a non-inheritable constraint."
18	conkey	int2[]		pg_attribute.attnum	"if a table constraint (including foreign keys, but not constraint triggers), list of the constrained columns"
19	confkey	int2[]		pg_attribute.attnum	"if a foreign key, list of the referenced columns"
20	conpfeqop	oid[]		pg_operator.oid	"if a foreign key, list of the equality operators for pk = fk comparisons"
21	conppeqop	oid[]		pg_operator.oid	"if a foreign key, list of the equality operators for pk = pk comparisons"
22	conffeqop	oid[]		pg_operator.oid	"if a foreign key, list of the equality operators for fk = fk comparisons"
23	conexclop	oid[]		pg_operator.oid	"if an exclusion constraint, list of the per-column exclusion operators"
24	conbin	pg_node_tree			"if a check constraint, an internal representation of the expression. (it's recommended to use pg_get_constraintdef() to extract the definition of a check constraint.)"
